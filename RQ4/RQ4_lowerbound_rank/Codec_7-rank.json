{
  "Codec_7_src/java/org/apache/commons/codec/binary/Base64.java_661_671": {
    "patches": [
      {
        "patch": "\n    /**\n     * Encodes binary data using the base64 algorithm without chunking.\n     *\n     * @param binaryData\n     *            binary data to encode\n     * @return String containing Base64 characters.\n     * @since 1.4\n     */    \n    public static String encodeBase64String(byte[] binaryData) {\n        return StringUtils.newStringUtf8(encodeBase64(binaryData, false));\n    }\n",
        "index": 17,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 5,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.codec.binary.Base64Test::testByteToStringVariations",
          "org.apache.commons.codec.binary.Base64Test::testRfc4648Section10Encode"
        ],
        "failing_tests": [],
        "sum_entropy": -2.3573056282070897,
        "mean_entropy": -0.026486580092214492,
        "pass_FIB_num": 36,
        "pass_FIB": [
          "Codec_7_n30.txt",
          "Codec_7_n39.txt",
          "Codec_7_n45.txt",
          "Codec_7_n17.txt",
          "Codec_7_n0.txt",
          "Codec_7_n47.txt",
          "Codec_7_n36.txt",
          "Codec_7_n18.txt",
          "Codec_7_n38.txt",
          "Codec_7_n46.txt",
          "Codec_7_n15.txt",
          "Codec_7_n14.txt",
          "Codec_7_n28.txt",
          "Codec_7_n40.txt",
          "Codec_7_n5.txt",
          "Codec_7_n10.txt",
          "Codec_7_n25.txt",
          "Codec_7_n33.txt",
          "Codec_7_n43.txt",
          "Codec_7_n34.txt",
          "Codec_7_n2.txt",
          "Codec_7_n24.txt",
          "Codec_7_n49.txt",
          "Codec_7_n35.txt",
          "Codec_7_n32.txt",
          "Codec_7_n11.txt",
          "Codec_7_n4.txt",
          "Codec_7_n26.txt",
          "Codec_7_n23.txt",
          "Codec_7_n8.txt",
          "Codec_7_n7.txt",
          "Codec_7_n9.txt",
          "Codec_7_n19.txt",
          "Codec_7_n29.txt",
          "Codec_7_n16.txt",
          "Codec_7_n20.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Encodes binary data using the base64 algorithm without chunking.\n     *\n     * @param binaryData\n     *            binary data to encode\n     * @return String containing Base64 characters.\n     * @since 1.4\n     */    \n    public static String encodeBase64String(byte[] binaryData) {\n        return StringUtils.newStringUtf8(encodeBase64(binaryData, false));\n    }\n",
        "index": 22,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 5,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.codec.binary.Base64Test::testByteToStringVariations",
          "org.apache.commons.codec.binary.Base64Test::testRfc4648Section10Encode"
        ],
        "failing_tests": [],
        "sum_entropy": -2.3573056282070897,
        "mean_entropy": -0.026486580092214492,
        "pass_FIB_num": 36,
        "pass_FIB": [
          "Codec_7_n30.txt",
          "Codec_7_n39.txt",
          "Codec_7_n45.txt",
          "Codec_7_n17.txt",
          "Codec_7_n0.txt",
          "Codec_7_n47.txt",
          "Codec_7_n36.txt",
          "Codec_7_n18.txt",
          "Codec_7_n38.txt",
          "Codec_7_n46.txt",
          "Codec_7_n15.txt",
          "Codec_7_n14.txt",
          "Codec_7_n28.txt",
          "Codec_7_n40.txt",
          "Codec_7_n5.txt",
          "Codec_7_n10.txt",
          "Codec_7_n25.txt",
          "Codec_7_n33.txt",
          "Codec_7_n43.txt",
          "Codec_7_n34.txt",
          "Codec_7_n2.txt",
          "Codec_7_n24.txt",
          "Codec_7_n49.txt",
          "Codec_7_n35.txt",
          "Codec_7_n32.txt",
          "Codec_7_n11.txt",
          "Codec_7_n4.txt",
          "Codec_7_n26.txt",
          "Codec_7_n23.txt",
          "Codec_7_n8.txt",
          "Codec_7_n7.txt",
          "Codec_7_n9.txt",
          "Codec_7_n19.txt",
          "Codec_7_n29.txt",
          "Codec_7_n16.txt",
          "Codec_7_n20.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Encodes binary data using the base64 algorithm without chunking.\n     *\n     * @param binaryData\n     *            binary data to encode\n     * @return String containing Base64 characters.\n     * @since 1.4\n     */    \n    public static String encodeBase64String(byte[] binaryData) {\n        return StringUtils.newStringUtf8(encodeBase64(binaryData, false));\n    }\n",
        "index": 26,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 5,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.codec.binary.Base64Test::testByteToStringVariations",
          "org.apache.commons.codec.binary.Base64Test::testRfc4648Section10Encode"
        ],
        "failing_tests": [],
        "sum_entropy": -2.3573056282070897,
        "mean_entropy": -0.026486580092214492,
        "pass_FIB_num": 36,
        "pass_FIB": [
          "Codec_7_n30.txt",
          "Codec_7_n39.txt",
          "Codec_7_n45.txt",
          "Codec_7_n17.txt",
          "Codec_7_n0.txt",
          "Codec_7_n47.txt",
          "Codec_7_n36.txt",
          "Codec_7_n18.txt",
          "Codec_7_n38.txt",
          "Codec_7_n46.txt",
          "Codec_7_n15.txt",
          "Codec_7_n14.txt",
          "Codec_7_n28.txt",
          "Codec_7_n40.txt",
          "Codec_7_n5.txt",
          "Codec_7_n10.txt",
          "Codec_7_n25.txt",
          "Codec_7_n33.txt",
          "Codec_7_n43.txt",
          "Codec_7_n34.txt",
          "Codec_7_n2.txt",
          "Codec_7_n24.txt",
          "Codec_7_n49.txt",
          "Codec_7_n35.txt",
          "Codec_7_n32.txt",
          "Codec_7_n11.txt",
          "Codec_7_n4.txt",
          "Codec_7_n26.txt",
          "Codec_7_n23.txt",
          "Codec_7_n8.txt",
          "Codec_7_n7.txt",
          "Codec_7_n9.txt",
          "Codec_7_n19.txt",
          "Codec_7_n29.txt",
          "Codec_7_n16.txt",
          "Codec_7_n20.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n/**\n * Encodes binary data using the base64 algorithm without chunking.\n *\n * @param binaryData\n *            binary data to encode\n * @return String containing Base64 characters.\n * @since 1.4\n */    \npublic static String encodeBase64String(byte[] binaryData) {\n    return StringUtils.newStringUtf8(encodeBase64(binaryData, false));\n}\n",
        "index": 20,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 5,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.codec.binary.Base64Test::testByteToStringVariations",
          "org.apache.commons.codec.binary.Base64Test::testRfc4648Section10Encode"
        ],
        "failing_tests": [],
        "sum_entropy": -2.1047079168477096,
        "mean_entropy": -0.02664187236516088,
        "pass_FIB_num": 36,
        "pass_FIB": [
          "Codec_7_n30.txt",
          "Codec_7_n39.txt",
          "Codec_7_n45.txt",
          "Codec_7_n17.txt",
          "Codec_7_n0.txt",
          "Codec_7_n47.txt",
          "Codec_7_n36.txt",
          "Codec_7_n18.txt",
          "Codec_7_n38.txt",
          "Codec_7_n46.txt",
          "Codec_7_n15.txt",
          "Codec_7_n14.txt",
          "Codec_7_n28.txt",
          "Codec_7_n40.txt",
          "Codec_7_n5.txt",
          "Codec_7_n10.txt",
          "Codec_7_n25.txt",
          "Codec_7_n33.txt",
          "Codec_7_n43.txt",
          "Codec_7_n34.txt",
          "Codec_7_n2.txt",
          "Codec_7_n24.txt",
          "Codec_7_n49.txt",
          "Codec_7_n35.txt",
          "Codec_7_n32.txt",
          "Codec_7_n11.txt",
          "Codec_7_n4.txt",
          "Codec_7_n26.txt",
          "Codec_7_n23.txt",
          "Codec_7_n8.txt",
          "Codec_7_n7.txt",
          "Codec_7_n9.txt",
          "Codec_7_n19.txt",
          "Codec_7_n29.txt",
          "Codec_7_n16.txt",
          "Codec_7_n20.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n/**\n * Encodes binary data using the base64 algorithm without chunking.\n *\n * @param binaryData\n *            binary data to encode\n * @return String containing Base64 characters.\n * @since 1.4\n */    \npublic static String encodeBase64String(byte[] binaryData) {\n    return StringUtils.newStringUtf8(encodeBase64(binaryData, false));\n}\n",
        "index": 21,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 5,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.codec.binary.Base64Test::testByteToStringVariations",
          "org.apache.commons.codec.binary.Base64Test::testRfc4648Section10Encode"
        ],
        "failing_tests": [],
        "sum_entropy": -2.1047079168477096,
        "mean_entropy": -0.02664187236516088,
        "pass_FIB_num": 36,
        "pass_FIB": [
          "Codec_7_n30.txt",
          "Codec_7_n39.txt",
          "Codec_7_n45.txt",
          "Codec_7_n17.txt",
          "Codec_7_n0.txt",
          "Codec_7_n47.txt",
          "Codec_7_n36.txt",
          "Codec_7_n18.txt",
          "Codec_7_n38.txt",
          "Codec_7_n46.txt",
          "Codec_7_n15.txt",
          "Codec_7_n14.txt",
          "Codec_7_n28.txt",
          "Codec_7_n40.txt",
          "Codec_7_n5.txt",
          "Codec_7_n10.txt",
          "Codec_7_n25.txt",
          "Codec_7_n33.txt",
          "Codec_7_n43.txt",
          "Codec_7_n34.txt",
          "Codec_7_n2.txt",
          "Codec_7_n24.txt",
          "Codec_7_n49.txt",
          "Codec_7_n35.txt",
          "Codec_7_n32.txt",
          "Codec_7_n11.txt",
          "Codec_7_n4.txt",
          "Codec_7_n26.txt",
          "Codec_7_n23.txt",
          "Codec_7_n8.txt",
          "Codec_7_n7.txt",
          "Codec_7_n9.txt",
          "Codec_7_n19.txt",
          "Codec_7_n29.txt",
          "Codec_7_n16.txt",
          "Codec_7_n20.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Encodes binary data using the base64 algorithm without chunking.\n     *\n     * @param binaryData\n     *            binary data to encode\n     * @return String containing Base64 characters.\n     * @since 1.4\n     */    \n    public static String encodeBase64String(byte[] binaryData) {\n        return StringUtils.newStringUtf8(encodeBase64(binaryData, false));\n    }\n",
        "index": 71,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 5,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.codec.binary.Base64Test::testByteToStringVariations",
          "org.apache.commons.codec.binary.Base64Test::testRfc4648Section10Encode"
        ],
        "failing_tests": [],
        "sum_entropy": -2.431573485187342,
        "mean_entropy": -0.027321050395363394,
        "pass_FIB_num": 36,
        "pass_FIB": [
          "Codec_7_n30.txt",
          "Codec_7_n39.txt",
          "Codec_7_n45.txt",
          "Codec_7_n17.txt",
          "Codec_7_n0.txt",
          "Codec_7_n47.txt",
          "Codec_7_n36.txt",
          "Codec_7_n18.txt",
          "Codec_7_n38.txt",
          "Codec_7_n46.txt",
          "Codec_7_n15.txt",
          "Codec_7_n14.txt",
          "Codec_7_n28.txt",
          "Codec_7_n40.txt",
          "Codec_7_n5.txt",
          "Codec_7_n10.txt",
          "Codec_7_n25.txt",
          "Codec_7_n33.txt",
          "Codec_7_n43.txt",
          "Codec_7_n34.txt",
          "Codec_7_n2.txt",
          "Codec_7_n24.txt",
          "Codec_7_n49.txt",
          "Codec_7_n35.txt",
          "Codec_7_n32.txt",
          "Codec_7_n11.txt",
          "Codec_7_n4.txt",
          "Codec_7_n26.txt",
          "Codec_7_n23.txt",
          "Codec_7_n8.txt",
          "Codec_7_n7.txt",
          "Codec_7_n9.txt",
          "Codec_7_n19.txt",
          "Codec_7_n29.txt",
          "Codec_7_n16.txt",
          "Codec_7_n20.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Encodes binary data using the base64 algorithm without chunking.\n     *\n     * @param binaryData\n     *            binary data to encode\n     * @return String containing Base64 characters.\n     * @since 1.4\n     */    \n    public static String encodeBase64String(byte[] binaryData) {\n        return StringUtils.newStringUtf8(encodeBase64(binaryData, false));\n    }\n",
        "index": 78,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 5,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.codec.binary.Base64Test::testByteToStringVariations",
          "org.apache.commons.codec.binary.Base64Test::testRfc4648Section10Encode"
        ],
        "failing_tests": [],
        "sum_entropy": -2.431573485187342,
        "mean_entropy": -0.027321050395363394,
        "pass_FIB_num": 36,
        "pass_FIB": [
          "Codec_7_n30.txt",
          "Codec_7_n39.txt",
          "Codec_7_n45.txt",
          "Codec_7_n17.txt",
          "Codec_7_n0.txt",
          "Codec_7_n47.txt",
          "Codec_7_n36.txt",
          "Codec_7_n18.txt",
          "Codec_7_n38.txt",
          "Codec_7_n46.txt",
          "Codec_7_n15.txt",
          "Codec_7_n14.txt",
          "Codec_7_n28.txt",
          "Codec_7_n40.txt",
          "Codec_7_n5.txt",
          "Codec_7_n10.txt",
          "Codec_7_n25.txt",
          "Codec_7_n33.txt",
          "Codec_7_n43.txt",
          "Codec_7_n34.txt",
          "Codec_7_n2.txt",
          "Codec_7_n24.txt",
          "Codec_7_n49.txt",
          "Codec_7_n35.txt",
          "Codec_7_n32.txt",
          "Codec_7_n11.txt",
          "Codec_7_n4.txt",
          "Codec_7_n26.txt",
          "Codec_7_n23.txt",
          "Codec_7_n8.txt",
          "Codec_7_n7.txt",
          "Codec_7_n9.txt",
          "Codec_7_n19.txt",
          "Codec_7_n29.txt",
          "Codec_7_n16.txt",
          "Codec_7_n20.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Encodes binary data using the base64 algorithm without chunking.\n     *\n     * @param binaryData\n     *            binary data to encode\n     * @return String containing Base64 characters.\n     * @since 1.4\n     */    \n    public static String encodeBase64String(byte[] binaryData) {\n        return StringUtils.newStringUtf8(encodeBase64(binaryData, false));\n    }\n",
        "index": 85,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 5,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.codec.binary.Base64Test::testByteToStringVariations",
          "org.apache.commons.codec.binary.Base64Test::testRfc4648Section10Encode"
        ],
        "failing_tests": [],
        "sum_entropy": -2.4325393566238427,
        "mean_entropy": -0.02733190288341396,
        "pass_FIB_num": 36,
        "pass_FIB": [
          "Codec_7_n30.txt",
          "Codec_7_n39.txt",
          "Codec_7_n45.txt",
          "Codec_7_n17.txt",
          "Codec_7_n0.txt",
          "Codec_7_n47.txt",
          "Codec_7_n36.txt",
          "Codec_7_n18.txt",
          "Codec_7_n38.txt",
          "Codec_7_n46.txt",
          "Codec_7_n15.txt",
          "Codec_7_n14.txt",
          "Codec_7_n28.txt",
          "Codec_7_n40.txt",
          "Codec_7_n5.txt",
          "Codec_7_n10.txt",
          "Codec_7_n25.txt",
          "Codec_7_n33.txt",
          "Codec_7_n43.txt",
          "Codec_7_n34.txt",
          "Codec_7_n2.txt",
          "Codec_7_n24.txt",
          "Codec_7_n49.txt",
          "Codec_7_n35.txt",
          "Codec_7_n32.txt",
          "Codec_7_n11.txt",
          "Codec_7_n4.txt",
          "Codec_7_n26.txt",
          "Codec_7_n23.txt",
          "Codec_7_n8.txt",
          "Codec_7_n7.txt",
          "Codec_7_n9.txt",
          "Codec_7_n19.txt",
          "Codec_7_n29.txt",
          "Codec_7_n16.txt",
          "Codec_7_n20.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Encodes binary data using the base64 algorithm without chunking.\n     *\n     * @param binaryData\n     *            binary data to encode\n     * @return String containing Base64 characters.\n     * @since 1.4\n     */    \n    public static String encodeBase64String(byte[] binaryData) {\n        return StringUtils.newStringUtf8(encodeBase64(binaryData, false));\n    }\n",
        "index": 93,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 5,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.codec.binary.Base64Test::testByteToStringVariations",
          "org.apache.commons.codec.binary.Base64Test::testRfc4648Section10Encode"
        ],
        "failing_tests": [],
        "sum_entropy": -2.4325393566238427,
        "mean_entropy": -0.02733190288341396,
        "pass_FIB_num": 36,
        "pass_FIB": [
          "Codec_7_n30.txt",
          "Codec_7_n39.txt",
          "Codec_7_n45.txt",
          "Codec_7_n17.txt",
          "Codec_7_n0.txt",
          "Codec_7_n47.txt",
          "Codec_7_n36.txt",
          "Codec_7_n18.txt",
          "Codec_7_n38.txt",
          "Codec_7_n46.txt",
          "Codec_7_n15.txt",
          "Codec_7_n14.txt",
          "Codec_7_n28.txt",
          "Codec_7_n40.txt",
          "Codec_7_n5.txt",
          "Codec_7_n10.txt",
          "Codec_7_n25.txt",
          "Codec_7_n33.txt",
          "Codec_7_n43.txt",
          "Codec_7_n34.txt",
          "Codec_7_n2.txt",
          "Codec_7_n24.txt",
          "Codec_7_n49.txt",
          "Codec_7_n35.txt",
          "Codec_7_n32.txt",
          "Codec_7_n11.txt",
          "Codec_7_n4.txt",
          "Codec_7_n26.txt",
          "Codec_7_n23.txt",
          "Codec_7_n8.txt",
          "Codec_7_n7.txt",
          "Codec_7_n9.txt",
          "Codec_7_n19.txt",
          "Codec_7_n29.txt",
          "Codec_7_n16.txt",
          "Codec_7_n20.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Encodes binary data using the base64 algorithm without chunking.\n     *\n     * @param binaryData\n     *            binary data to encode\n     * @return String containing Base64 characters.\n     * @since 1.4\n     */    \n    public static String encodeBase64String(byte[] binaryData) {\n        return StringUtils.newStringUtf8(encodeBase64(binaryData, false));\n    }\n",
        "index": 95,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 5,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.codec.binary.Base64Test::testByteToStringVariations",
          "org.apache.commons.codec.binary.Base64Test::testRfc4648Section10Encode"
        ],
        "failing_tests": [],
        "sum_entropy": -2.4325393566238427,
        "mean_entropy": -0.02733190288341396,
        "pass_FIB_num": 36,
        "pass_FIB": [
          "Codec_7_n30.txt",
          "Codec_7_n39.txt",
          "Codec_7_n45.txt",
          "Codec_7_n17.txt",
          "Codec_7_n0.txt",
          "Codec_7_n47.txt",
          "Codec_7_n36.txt",
          "Codec_7_n18.txt",
          "Codec_7_n38.txt",
          "Codec_7_n46.txt",
          "Codec_7_n15.txt",
          "Codec_7_n14.txt",
          "Codec_7_n28.txt",
          "Codec_7_n40.txt",
          "Codec_7_n5.txt",
          "Codec_7_n10.txt",
          "Codec_7_n25.txt",
          "Codec_7_n33.txt",
          "Codec_7_n43.txt",
          "Codec_7_n34.txt",
          "Codec_7_n2.txt",
          "Codec_7_n24.txt",
          "Codec_7_n49.txt",
          "Codec_7_n35.txt",
          "Codec_7_n32.txt",
          "Codec_7_n11.txt",
          "Codec_7_n4.txt",
          "Codec_7_n26.txt",
          "Codec_7_n23.txt",
          "Codec_7_n8.txt",
          "Codec_7_n7.txt",
          "Codec_7_n9.txt",
          "Codec_7_n19.txt",
          "Codec_7_n29.txt",
          "Codec_7_n16.txt",
          "Codec_7_n20.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n/**\n * Encodes binary data using the base64 algorithm without chunking.\n *\n * @param binaryData\n *            binary data to encode\n * @return String containing Base64 characters.\n * @since 1.4\n */    \npublic static String encodeBase64String(byte[] binaryData) {\n    return StringUtils.newStringUtf8(encodeBase64(binaryData, false));\n}\n",
        "index": 13,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 5,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.codec.binary.Base64Test::testByteToStringVariations",
          "org.apache.commons.codec.binary.Base64Test::testRfc4648Section10Encode"
        ],
        "failing_tests": [],
        "sum_entropy": -2.177272166071709,
        "mean_entropy": -0.027560407165464672,
        "pass_FIB_num": 36,
        "pass_FIB": [
          "Codec_7_n30.txt",
          "Codec_7_n39.txt",
          "Codec_7_n45.txt",
          "Codec_7_n17.txt",
          "Codec_7_n0.txt",
          "Codec_7_n47.txt",
          "Codec_7_n36.txt",
          "Codec_7_n18.txt",
          "Codec_7_n38.txt",
          "Codec_7_n46.txt",
          "Codec_7_n15.txt",
          "Codec_7_n14.txt",
          "Codec_7_n28.txt",
          "Codec_7_n40.txt",
          "Codec_7_n5.txt",
          "Codec_7_n10.txt",
          "Codec_7_n25.txt",
          "Codec_7_n33.txt",
          "Codec_7_n43.txt",
          "Codec_7_n34.txt",
          "Codec_7_n2.txt",
          "Codec_7_n24.txt",
          "Codec_7_n49.txt",
          "Codec_7_n35.txt",
          "Codec_7_n32.txt",
          "Codec_7_n11.txt",
          "Codec_7_n4.txt",
          "Codec_7_n26.txt",
          "Codec_7_n23.txt",
          "Codec_7_n8.txt",
          "Codec_7_n7.txt",
          "Codec_7_n9.txt",
          "Codec_7_n19.txt",
          "Codec_7_n29.txt",
          "Codec_7_n16.txt",
          "Codec_7_n20.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n/**\n * Encodes binary data using the base64 algorithm without chunking.\n *\n * @param binaryData binary data to encode\n * @return String containing Base64 characters.\n * @since 1.4\n */\npublic static String encodeBase64String(byte[] binaryData) {\n    return StringUtils.newStringUtf8(encodeBase64(binaryData, false));\n}\n",
        "index": 97,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 5,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.codec.binary.Base64Test::testByteToStringVariations",
          "org.apache.commons.codec.binary.Base64Test::testRfc4648Section10Encode"
        ],
        "failing_tests": [],
        "sum_entropy": -2.06972096357113,
        "mean_entropy": -0.02759627951428173,
        "pass_FIB_num": 36,
        "pass_FIB": [
          "Codec_7_n30.txt",
          "Codec_7_n39.txt",
          "Codec_7_n45.txt",
          "Codec_7_n17.txt",
          "Codec_7_n0.txt",
          "Codec_7_n47.txt",
          "Codec_7_n36.txt",
          "Codec_7_n18.txt",
          "Codec_7_n38.txt",
          "Codec_7_n46.txt",
          "Codec_7_n15.txt",
          "Codec_7_n14.txt",
          "Codec_7_n28.txt",
          "Codec_7_n40.txt",
          "Codec_7_n5.txt",
          "Codec_7_n10.txt",
          "Codec_7_n25.txt",
          "Codec_7_n33.txt",
          "Codec_7_n43.txt",
          "Codec_7_n34.txt",
          "Codec_7_n2.txt",
          "Codec_7_n24.txt",
          "Codec_7_n49.txt",
          "Codec_7_n35.txt",
          "Codec_7_n32.txt",
          "Codec_7_n11.txt",
          "Codec_7_n4.txt",
          "Codec_7_n26.txt",
          "Codec_7_n23.txt",
          "Codec_7_n8.txt",
          "Codec_7_n7.txt",
          "Codec_7_n9.txt",
          "Codec_7_n19.txt",
          "Codec_7_n29.txt",
          "Codec_7_n16.txt",
          "Codec_7_n20.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Encodes binary data using the base64 algorithm without chunking.\n     *\n     * @param binaryData\n     *            binary data to encode\n     * @return String containing Base64 characters.\n     * @since 1.4\n     */    \n    public static String encodeBase64String(byte[] binaryData) {\n        return StringUtils.newStringUtf8(encodeBase64(binaryData, false));\n    }\n",
        "index": 32,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 5,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.codec.binary.Base64Test::testByteToStringVariations",
          "org.apache.commons.codec.binary.Base64Test::testRfc4648Section10Encode"
        ],
        "failing_tests": [],
        "sum_entropy": -2.45640119680543,
        "mean_entropy": -0.02760001344725202,
        "pass_FIB_num": 36,
        "pass_FIB": [
          "Codec_7_n30.txt",
          "Codec_7_n39.txt",
          "Codec_7_n45.txt",
          "Codec_7_n17.txt",
          "Codec_7_n0.txt",
          "Codec_7_n47.txt",
          "Codec_7_n36.txt",
          "Codec_7_n18.txt",
          "Codec_7_n38.txt",
          "Codec_7_n46.txt",
          "Codec_7_n15.txt",
          "Codec_7_n14.txt",
          "Codec_7_n28.txt",
          "Codec_7_n40.txt",
          "Codec_7_n5.txt",
          "Codec_7_n10.txt",
          "Codec_7_n25.txt",
          "Codec_7_n33.txt",
          "Codec_7_n43.txt",
          "Codec_7_n34.txt",
          "Codec_7_n2.txt",
          "Codec_7_n24.txt",
          "Codec_7_n49.txt",
          "Codec_7_n35.txt",
          "Codec_7_n32.txt",
          "Codec_7_n11.txt",
          "Codec_7_n4.txt",
          "Codec_7_n26.txt",
          "Codec_7_n23.txt",
          "Codec_7_n8.txt",
          "Codec_7_n7.txt",
          "Codec_7_n9.txt",
          "Codec_7_n19.txt",
          "Codec_7_n29.txt",
          "Codec_7_n16.txt",
          "Codec_7_n20.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Encodes binary data using the base64 algorithm without chunking.\n     *\n     * @param binaryData\n     *            binary data to encode\n     * @return String containing Base64 characters.\n     * @since 1.4\n     */    \n    public static String encodeBase64String(byte[] binaryData) {\n        return StringUtils.newStringUtf8(encodeBase64(binaryData, false));\n    }\n",
        "index": 36,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 5,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.codec.binary.Base64Test::testByteToStringVariations",
          "org.apache.commons.codec.binary.Base64Test::testRfc4648Section10Encode"
        ],
        "failing_tests": [],
        "sum_entropy": -2.45640119680543,
        "mean_entropy": -0.02760001344725202,
        "pass_FIB_num": 36,
        "pass_FIB": [
          "Codec_7_n30.txt",
          "Codec_7_n39.txt",
          "Codec_7_n45.txt",
          "Codec_7_n17.txt",
          "Codec_7_n0.txt",
          "Codec_7_n47.txt",
          "Codec_7_n36.txt",
          "Codec_7_n18.txt",
          "Codec_7_n38.txt",
          "Codec_7_n46.txt",
          "Codec_7_n15.txt",
          "Codec_7_n14.txt",
          "Codec_7_n28.txt",
          "Codec_7_n40.txt",
          "Codec_7_n5.txt",
          "Codec_7_n10.txt",
          "Codec_7_n25.txt",
          "Codec_7_n33.txt",
          "Codec_7_n43.txt",
          "Codec_7_n34.txt",
          "Codec_7_n2.txt",
          "Codec_7_n24.txt",
          "Codec_7_n49.txt",
          "Codec_7_n35.txt",
          "Codec_7_n32.txt",
          "Codec_7_n11.txt",
          "Codec_7_n4.txt",
          "Codec_7_n26.txt",
          "Codec_7_n23.txt",
          "Codec_7_n8.txt",
          "Codec_7_n7.txt",
          "Codec_7_n9.txt",
          "Codec_7_n19.txt",
          "Codec_7_n29.txt",
          "Codec_7_n16.txt",
          "Codec_7_n20.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Encodes binary data using the base64 algorithm without chunking.\n     *\n     * @param binaryData\n     *            binary data to encode\n     * @return String containing Base64 characters.\n     * @since 1.4\n     */    \n    public static String encodeBase64String(byte[] binaryData) {\n        return StringUtils.newStringUtf8(encodeBase64(binaryData, false));\n    }\n",
        "index": 39,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 5,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.codec.binary.Base64Test::testByteToStringVariations",
          "org.apache.commons.codec.binary.Base64Test::testRfc4648Section10Encode"
        ],
        "failing_tests": [],
        "sum_entropy": -2.45640119680543,
        "mean_entropy": -0.02760001344725202,
        "pass_FIB_num": 36,
        "pass_FIB": [
          "Codec_7_n30.txt",
          "Codec_7_n39.txt",
          "Codec_7_n45.txt",
          "Codec_7_n17.txt",
          "Codec_7_n0.txt",
          "Codec_7_n47.txt",
          "Codec_7_n36.txt",
          "Codec_7_n18.txt",
          "Codec_7_n38.txt",
          "Codec_7_n46.txt",
          "Codec_7_n15.txt",
          "Codec_7_n14.txt",
          "Codec_7_n28.txt",
          "Codec_7_n40.txt",
          "Codec_7_n5.txt",
          "Codec_7_n10.txt",
          "Codec_7_n25.txt",
          "Codec_7_n33.txt",
          "Codec_7_n43.txt",
          "Codec_7_n34.txt",
          "Codec_7_n2.txt",
          "Codec_7_n24.txt",
          "Codec_7_n49.txt",
          "Codec_7_n35.txt",
          "Codec_7_n32.txt",
          "Codec_7_n11.txt",
          "Codec_7_n4.txt",
          "Codec_7_n26.txt",
          "Codec_7_n23.txt",
          "Codec_7_n8.txt",
          "Codec_7_n7.txt",
          "Codec_7_n9.txt",
          "Codec_7_n19.txt",
          "Codec_7_n29.txt",
          "Codec_7_n16.txt",
          "Codec_7_n20.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n/**\n * Encodes binary data using the base64 algorithm into a single block without chunking.\n *\n * @param binaryData\n *            binary data to encode\n * @return String containing Base64 characters.\n * @since 1.4\n */    \npublic static String encodeBase64String(byte[] binaryData) {\n    return StringUtils.newStringUtf8(encodeBase64(binaryData, false));\n}\n",
        "index": 24,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 5,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.codec.binary.Base64Test::testByteToStringVariations",
          "org.apache.commons.codec.binary.Base64Test::testRfc4648Section10Encode"
        ],
        "failing_tests": [],
        "sum_entropy": -6.326431913231085,
        "mean_entropy": -0.07622207124374801,
        "pass_FIB_num": 36,
        "pass_FIB": [
          "Codec_7_n30.txt",
          "Codec_7_n39.txt",
          "Codec_7_n45.txt",
          "Codec_7_n17.txt",
          "Codec_7_n0.txt",
          "Codec_7_n47.txt",
          "Codec_7_n36.txt",
          "Codec_7_n18.txt",
          "Codec_7_n38.txt",
          "Codec_7_n46.txt",
          "Codec_7_n15.txt",
          "Codec_7_n14.txt",
          "Codec_7_n28.txt",
          "Codec_7_n40.txt",
          "Codec_7_n5.txt",
          "Codec_7_n10.txt",
          "Codec_7_n25.txt",
          "Codec_7_n33.txt",
          "Codec_7_n43.txt",
          "Codec_7_n34.txt",
          "Codec_7_n2.txt",
          "Codec_7_n24.txt",
          "Codec_7_n49.txt",
          "Codec_7_n35.txt",
          "Codec_7_n32.txt",
          "Codec_7_n11.txt",
          "Codec_7_n4.txt",
          "Codec_7_n26.txt",
          "Codec_7_n23.txt",
          "Codec_7_n8.txt",
          "Codec_7_n7.txt",
          "Codec_7_n9.txt",
          "Codec_7_n19.txt",
          "Codec_7_n29.txt",
          "Codec_7_n16.txt",
          "Codec_7_n20.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Encodes binary data using the base64 algorithm into a single block.\n     *\n     * @param binaryData binary data to encode\n     * @return String containing Base64 characters.\n     * @since 1.4\n     */    \n    public static String encodeBase64String(byte[] binaryData) {\n        return StringUtils.newStringUtf8(encodeBase64(binaryData, false));\n    }\n",
        "index": 96,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 5,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.codec.binary.Base64Test::testByteToStringVariations",
          "org.apache.commons.codec.binary.Base64Test::testRfc4648Section10Encode"
        ],
        "failing_tests": [],
        "sum_entropy": -7.401766619056615,
        "mean_entropy": -0.08606705370996064,
        "pass_FIB_num": 36,
        "pass_FIB": [
          "Codec_7_n30.txt",
          "Codec_7_n39.txt",
          "Codec_7_n45.txt",
          "Codec_7_n17.txt",
          "Codec_7_n0.txt",
          "Codec_7_n47.txt",
          "Codec_7_n36.txt",
          "Codec_7_n18.txt",
          "Codec_7_n38.txt",
          "Codec_7_n46.txt",
          "Codec_7_n15.txt",
          "Codec_7_n14.txt",
          "Codec_7_n28.txt",
          "Codec_7_n40.txt",
          "Codec_7_n5.txt",
          "Codec_7_n10.txt",
          "Codec_7_n25.txt",
          "Codec_7_n33.txt",
          "Codec_7_n43.txt",
          "Codec_7_n34.txt",
          "Codec_7_n2.txt",
          "Codec_7_n24.txt",
          "Codec_7_n49.txt",
          "Codec_7_n35.txt",
          "Codec_7_n32.txt",
          "Codec_7_n11.txt",
          "Codec_7_n4.txt",
          "Codec_7_n26.txt",
          "Codec_7_n23.txt",
          "Codec_7_n8.txt",
          "Codec_7_n7.txt",
          "Codec_7_n9.txt",
          "Codec_7_n19.txt",
          "Codec_7_n29.txt",
          "Codec_7_n16.txt",
          "Codec_7_n20.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n/**\n * Encodes binary data using the base64 algorithm.\n *\n * @param binaryData\n *            binary data to encode\n * @return String containing Base64 characters.\n * @since 1.4\n */\npublic static String encodeBase64String(byte[] binaryData) {\n    return StringUtils.newStringUtf8(Base64.encodeBase64(binaryData, false));\n}\n",
        "index": 30,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 5,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.codec.binary.Base64Test::testByteToStringVariations",
          "org.apache.commons.codec.binary.Base64Test::testRfc4648Section10Encode"
        ],
        "failing_tests": [],
        "sum_entropy": -7.810638576598161,
        "mean_entropy": -0.10277156021839685,
        "pass_FIB_num": 36,
        "pass_FIB": [
          "Codec_7_n30.txt",
          "Codec_7_n39.txt",
          "Codec_7_n45.txt",
          "Codec_7_n17.txt",
          "Codec_7_n0.txt",
          "Codec_7_n47.txt",
          "Codec_7_n36.txt",
          "Codec_7_n18.txt",
          "Codec_7_n38.txt",
          "Codec_7_n46.txt",
          "Codec_7_n15.txt",
          "Codec_7_n14.txt",
          "Codec_7_n28.txt",
          "Codec_7_n40.txt",
          "Codec_7_n5.txt",
          "Codec_7_n10.txt",
          "Codec_7_n25.txt",
          "Codec_7_n33.txt",
          "Codec_7_n43.txt",
          "Codec_7_n34.txt",
          "Codec_7_n2.txt",
          "Codec_7_n24.txt",
          "Codec_7_n49.txt",
          "Codec_7_n35.txt",
          "Codec_7_n32.txt",
          "Codec_7_n11.txt",
          "Codec_7_n4.txt",
          "Codec_7_n26.txt",
          "Codec_7_n23.txt",
          "Codec_7_n8.txt",
          "Codec_7_n7.txt",
          "Codec_7_n9.txt",
          "Codec_7_n19.txt",
          "Codec_7_n29.txt",
          "Codec_7_n16.txt",
          "Codec_7_n20.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n/**\n * Encodes binary data using the base64 algorithm into a single block without line breaks.\n *\n * @param binaryData binary data to encode\n * @return String containing Base64 characters.\n * @since 1.4\n */\npublic static String encodeBase64String(byte[] binaryData) {\n    return StringUtils.newStringUtf8(encodeBase64(binaryData, false));\n}\n",
        "index": 29,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 5,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.codec.binary.Base64Test::testByteToStringVariations",
          "org.apache.commons.codec.binary.Base64Test::testRfc4648Section10Encode"
        ],
        "failing_tests": [],
        "sum_entropy": -8.169557974849573,
        "mean_entropy": -0.10341212626391864,
        "pass_FIB_num": 36,
        "pass_FIB": [
          "Codec_7_n30.txt",
          "Codec_7_n39.txt",
          "Codec_7_n45.txt",
          "Codec_7_n17.txt",
          "Codec_7_n0.txt",
          "Codec_7_n47.txt",
          "Codec_7_n36.txt",
          "Codec_7_n18.txt",
          "Codec_7_n38.txt",
          "Codec_7_n46.txt",
          "Codec_7_n15.txt",
          "Codec_7_n14.txt",
          "Codec_7_n28.txt",
          "Codec_7_n40.txt",
          "Codec_7_n5.txt",
          "Codec_7_n10.txt",
          "Codec_7_n25.txt",
          "Codec_7_n33.txt",
          "Codec_7_n43.txt",
          "Codec_7_n34.txt",
          "Codec_7_n2.txt",
          "Codec_7_n24.txt",
          "Codec_7_n49.txt",
          "Codec_7_n35.txt",
          "Codec_7_n32.txt",
          "Codec_7_n11.txt",
          "Codec_7_n4.txt",
          "Codec_7_n26.txt",
          "Codec_7_n23.txt",
          "Codec_7_n8.txt",
          "Codec_7_n7.txt",
          "Codec_7_n9.txt",
          "Codec_7_n19.txt",
          "Codec_7_n29.txt",
          "Codec_7_n16.txt",
          "Codec_7_n20.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Encodes binary data using the base64 algorithm into a single block without any chunking.\n     *\n     * @param binaryData binary data to encode\n     * @return String containing Base64 characters without chunking.\n     * @since 1.4\n     */\n    public static String encodeBase64String(byte[] binaryData) {\n        return StringUtils.newStringUtf8(encodeBase64(binaryData, false));\n    }\n",
        "index": 0,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 5,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.codec.binary.Base64Test::testByteToStringVariations",
          "org.apache.commons.codec.binary.Base64Test::testRfc4648Section10Encode"
        ],
        "failing_tests": [],
        "sum_entropy": -13.20092707013472,
        "mean_entropy": -0.14348833771885564,
        "pass_FIB_num": 36,
        "pass_FIB": [
          "Codec_7_n30.txt",
          "Codec_7_n39.txt",
          "Codec_7_n45.txt",
          "Codec_7_n17.txt",
          "Codec_7_n0.txt",
          "Codec_7_n47.txt",
          "Codec_7_n36.txt",
          "Codec_7_n18.txt",
          "Codec_7_n38.txt",
          "Codec_7_n46.txt",
          "Codec_7_n15.txt",
          "Codec_7_n14.txt",
          "Codec_7_n28.txt",
          "Codec_7_n40.txt",
          "Codec_7_n5.txt",
          "Codec_7_n10.txt",
          "Codec_7_n25.txt",
          "Codec_7_n33.txt",
          "Codec_7_n43.txt",
          "Codec_7_n34.txt",
          "Codec_7_n2.txt",
          "Codec_7_n24.txt",
          "Codec_7_n49.txt",
          "Codec_7_n35.txt",
          "Codec_7_n32.txt",
          "Codec_7_n11.txt",
          "Codec_7_n4.txt",
          "Codec_7_n26.txt",
          "Codec_7_n23.txt",
          "Codec_7_n8.txt",
          "Codec_7_n7.txt",
          "Codec_7_n9.txt",
          "Codec_7_n19.txt",
          "Codec_7_n29.txt",
          "Codec_7_n16.txt",
          "Codec_7_n20.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      }
    ]
  }
}