{
  "Math_5_src/main/java/org/apache/commons/math3/complex/Complex.java_298_321": {
    "patches": [
      {
        "patch": "\n    /** {@inheritDoc} */\n    public Complex reciprocal() {\n        if (isNaN) {\n            return NaN;\n        }\n\n        if (real == 0.0 && imaginary == 0.0) {\n            return INF;\n        }\n\n        if (isInfinite) {\n            return ZERO;\n        }\n\n        if (FastMath.abs(real) < FastMath.abs(imaginary)) {\n            double q = real / imaginary;\n            double scale = 1. / (real * q + imaginary);\n            return createComplex(scale * q, -scale);\n        } else {\n            double q = imaginary / real;\n            double scale = 1. / (imaginary * q + real);\n            return createComplex(scale, -scale * q);\n        }\n    }\n",
        "index": 30,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 10,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.math3.complex.ComplexTest::testReciprocalZero"
        ],
        "failing_tests": [],
        "sum_entropy": -0.7330624213970801,
        "mean_entropy": -0.004669187397433631,
        "pass_FIB_num": 31,
        "pass_FIB": [
          "Math_5_n16.txt",
          "Math_5_n44.txt",
          "Math_5_n23.txt",
          "Math_5_n30.txt",
          "Math_5_n7.txt",
          "Math_5_n45.txt",
          "Math_5_n31.txt",
          "Math_5_n41.txt",
          "Math_5_n29.txt",
          "Math_5_n34.txt",
          "Math_5_n5.txt",
          "Math_5_n11.txt",
          "Math_5_n2.txt",
          "Math_5_n17.txt",
          "Math_5_n36.txt",
          "Math_5_n18.txt",
          "Math_5_n46.txt",
          "Math_5_n0.txt",
          "Math_5_n25.txt",
          "Math_5_n10.txt",
          "Math_5_n33.txt",
          "Math_5_n37.txt",
          "Math_5_n13.txt",
          "Math_5_n3.txt",
          "Math_5_n1.txt",
          "Math_5_n20.txt",
          "Math_5_n48.txt",
          "Math_5_n24.txt",
          "Math_5_n32.txt",
          "Math_5_n19.txt",
          "Math_5_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /** {@inheritDoc} */\n    public Complex reciprocal() {\n        if (isNaN) {\n            return NaN;\n        }\n\n        if (real == 0.0 && imaginary == 0.0) {\n            return INF;\n        }\n\n        if (isInfinite) {\n            return ZERO;\n        }\n\n        if (FastMath.abs(real) < FastMath.abs(imaginary)) {\n            double q = real / imaginary;\n            double scale = 1. / (real * q + imaginary);\n            return createComplex(scale * q, -scale);\n        } else {\n            double q = imaginary / real;\n            double scale = 1. / (imaginary * q + real);\n            return createComplex(scale, -scale * q);\n        }\n    }\n",
        "index": 31,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 10,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.math3.complex.ComplexTest::testReciprocalZero"
        ],
        "failing_tests": [],
        "sum_entropy": -0.7330624213970801,
        "mean_entropy": -0.004669187397433631,
        "pass_FIB_num": 31,
        "pass_FIB": [
          "Math_5_n16.txt",
          "Math_5_n44.txt",
          "Math_5_n23.txt",
          "Math_5_n30.txt",
          "Math_5_n7.txt",
          "Math_5_n45.txt",
          "Math_5_n31.txt",
          "Math_5_n41.txt",
          "Math_5_n29.txt",
          "Math_5_n34.txt",
          "Math_5_n5.txt",
          "Math_5_n11.txt",
          "Math_5_n2.txt",
          "Math_5_n17.txt",
          "Math_5_n36.txt",
          "Math_5_n18.txt",
          "Math_5_n46.txt",
          "Math_5_n0.txt",
          "Math_5_n25.txt",
          "Math_5_n10.txt",
          "Math_5_n33.txt",
          "Math_5_n37.txt",
          "Math_5_n13.txt",
          "Math_5_n3.txt",
          "Math_5_n1.txt",
          "Math_5_n20.txt",
          "Math_5_n48.txt",
          "Math_5_n24.txt",
          "Math_5_n32.txt",
          "Math_5_n19.txt",
          "Math_5_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /** {@inheritDoc} */\n    public Complex reciprocal() {\n        if (isNaN) {\n            return NaN;\n        }\n\n        if (real == 0.0 && imaginary == 0.0) {\n            return INF;\n        }\n\n        if (isInfinite) {\n            return ZERO;\n        }\n\n        if (FastMath.abs(real) < FastMath.abs(imaginary)) {\n            double q = real / imaginary;\n            double scale = 1. / (real * q + imaginary);\n            return createComplex(scale * q, -scale);\n        } else {\n            double q = imaginary / real;\n            double scale = 1. / (imaginary * q + real);\n            return createComplex(scale, -scale * q);\n        }\n    }\n",
        "index": 32,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 10,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.math3.complex.ComplexTest::testReciprocalZero"
        ],
        "failing_tests": [],
        "sum_entropy": -0.7330624213970801,
        "mean_entropy": -0.004669187397433631,
        "pass_FIB_num": 31,
        "pass_FIB": [
          "Math_5_n16.txt",
          "Math_5_n44.txt",
          "Math_5_n23.txt",
          "Math_5_n30.txt",
          "Math_5_n7.txt",
          "Math_5_n45.txt",
          "Math_5_n31.txt",
          "Math_5_n41.txt",
          "Math_5_n29.txt",
          "Math_5_n34.txt",
          "Math_5_n5.txt",
          "Math_5_n11.txt",
          "Math_5_n2.txt",
          "Math_5_n17.txt",
          "Math_5_n36.txt",
          "Math_5_n18.txt",
          "Math_5_n46.txt",
          "Math_5_n0.txt",
          "Math_5_n25.txt",
          "Math_5_n10.txt",
          "Math_5_n33.txt",
          "Math_5_n37.txt",
          "Math_5_n13.txt",
          "Math_5_n3.txt",
          "Math_5_n1.txt",
          "Math_5_n20.txt",
          "Math_5_n48.txt",
          "Math_5_n24.txt",
          "Math_5_n32.txt",
          "Math_5_n19.txt",
          "Math_5_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /** {@inheritDoc} */\n    public Complex reciprocal() {\n        if (isNaN) {\n            return NaN;\n        }\n\n        if (real == 0.0 && imaginary == 0.0) {\n            return INF;\n        }\n\n        if (isInfinite) {\n            return ZERO;\n        }\n\n        if (FastMath.abs(real) < FastMath.abs(imaginary)) {\n            double q = real / imaginary;\n            double scale = 1. / (real * q + imaginary);\n            return createComplex(scale * q, -scale);\n        } else {\n            double q = imaginary / real;\n            double scale = 1. / (imaginary * q + real);\n            return createComplex(scale, -scale * q);\n        }\n    }\n",
        "index": 34,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 10,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.math3.complex.ComplexTest::testReciprocalZero"
        ],
        "failing_tests": [],
        "sum_entropy": -0.7330624213970801,
        "mean_entropy": -0.004669187397433631,
        "pass_FIB_num": 31,
        "pass_FIB": [
          "Math_5_n16.txt",
          "Math_5_n44.txt",
          "Math_5_n23.txt",
          "Math_5_n30.txt",
          "Math_5_n7.txt",
          "Math_5_n45.txt",
          "Math_5_n31.txt",
          "Math_5_n41.txt",
          "Math_5_n29.txt",
          "Math_5_n34.txt",
          "Math_5_n5.txt",
          "Math_5_n11.txt",
          "Math_5_n2.txt",
          "Math_5_n17.txt",
          "Math_5_n36.txt",
          "Math_5_n18.txt",
          "Math_5_n46.txt",
          "Math_5_n0.txt",
          "Math_5_n25.txt",
          "Math_5_n10.txt",
          "Math_5_n33.txt",
          "Math_5_n37.txt",
          "Math_5_n13.txt",
          "Math_5_n3.txt",
          "Math_5_n1.txt",
          "Math_5_n20.txt",
          "Math_5_n48.txt",
          "Math_5_n24.txt",
          "Math_5_n32.txt",
          "Math_5_n19.txt",
          "Math_5_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /** {@inheritDoc} */\n    public Complex reciprocal() {\n        if (isNaN) {\n            return NaN;\n        }\n\n        if (real == 0.0 && imaginary == 0.0) {\n            return INF;\n        }\n\n        if (isInfinite) {\n            return ZERO;\n        }\n\n        if (FastMath.abs(real) < FastMath.abs(imaginary)) {\n            double q = real / imaginary;\n            double scale = 1. / (real * q + imaginary);\n            return createComplex(scale * q, -scale);\n        } else {\n            double q = imaginary / real;\n            double scale = 1. / (imaginary * q + real);\n            return createComplex(scale, -scale * q);\n        }\n    }\n",
        "index": 36,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 10,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.math3.complex.ComplexTest::testReciprocalZero"
        ],
        "failing_tests": [],
        "sum_entropy": -0.7330624213970801,
        "mean_entropy": -0.004669187397433631,
        "pass_FIB_num": 31,
        "pass_FIB": [
          "Math_5_n16.txt",
          "Math_5_n44.txt",
          "Math_5_n23.txt",
          "Math_5_n30.txt",
          "Math_5_n7.txt",
          "Math_5_n45.txt",
          "Math_5_n31.txt",
          "Math_5_n41.txt",
          "Math_5_n29.txt",
          "Math_5_n34.txt",
          "Math_5_n5.txt",
          "Math_5_n11.txt",
          "Math_5_n2.txt",
          "Math_5_n17.txt",
          "Math_5_n36.txt",
          "Math_5_n18.txt",
          "Math_5_n46.txt",
          "Math_5_n0.txt",
          "Math_5_n25.txt",
          "Math_5_n10.txt",
          "Math_5_n33.txt",
          "Math_5_n37.txt",
          "Math_5_n13.txt",
          "Math_5_n3.txt",
          "Math_5_n1.txt",
          "Math_5_n20.txt",
          "Math_5_n48.txt",
          "Math_5_n24.txt",
          "Math_5_n32.txt",
          "Math_5_n19.txt",
          "Math_5_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /** {@inheritDoc} */\n    public Complex reciprocal() {\n        if (isNaN) {\n            return NaN;\n        }\n\n        if (real == 0.0 && imaginary == 0.0) {\n            return INF;\n        }\n\n        if (isInfinite) {\n            return ZERO;\n        }\n\n        if (FastMath.abs(real) < FastMath.abs(imaginary)) {\n            double q = real / imaginary;\n            double scale = 1. / (real * q + imaginary);\n            return createComplex(scale * q, -scale);\n        } else {\n            double q = imaginary / real;\n            double scale = 1. / (imaginary * q + real);\n            return createComplex(scale, -scale * q);\n        }\n    }\n",
        "index": 39,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 10,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.math3.complex.ComplexTest::testReciprocalZero"
        ],
        "failing_tests": [],
        "sum_entropy": -0.7330624213970801,
        "mean_entropy": -0.004669187397433631,
        "pass_FIB_num": 31,
        "pass_FIB": [
          "Math_5_n16.txt",
          "Math_5_n44.txt",
          "Math_5_n23.txt",
          "Math_5_n30.txt",
          "Math_5_n7.txt",
          "Math_5_n45.txt",
          "Math_5_n31.txt",
          "Math_5_n41.txt",
          "Math_5_n29.txt",
          "Math_5_n34.txt",
          "Math_5_n5.txt",
          "Math_5_n11.txt",
          "Math_5_n2.txt",
          "Math_5_n17.txt",
          "Math_5_n36.txt",
          "Math_5_n18.txt",
          "Math_5_n46.txt",
          "Math_5_n0.txt",
          "Math_5_n25.txt",
          "Math_5_n10.txt",
          "Math_5_n33.txt",
          "Math_5_n37.txt",
          "Math_5_n13.txt",
          "Math_5_n3.txt",
          "Math_5_n1.txt",
          "Math_5_n20.txt",
          "Math_5_n48.txt",
          "Math_5_n24.txt",
          "Math_5_n32.txt",
          "Math_5_n19.txt",
          "Math_5_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /** {@inheritDoc} */\n    public Complex reciprocal() {\n        if (isNaN) {\n            return NaN;\n        }\n\n        if (real == 0.0 && imaginary == 0.0) {\n            return INF;\n        }\n\n        if (isInfinite) {\n            return ZERO;\n        }\n\n        if (FastMath.abs(real) < FastMath.abs(imaginary)) {\n            double q = real / imaginary;\n            double scale = 1. / (real * q + imaginary);\n            return createComplex(scale * q, -scale);\n        } else {\n            double q = imaginary / real;\n            double scale = 1. / (imaginary * q + real);\n            return createComplex(scale, -scale * q);\n        }\n    }\n",
        "index": 40,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 10,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.math3.complex.ComplexTest::testReciprocalZero"
        ],
        "failing_tests": [],
        "sum_entropy": -0.7330624213970801,
        "mean_entropy": -0.004669187397433631,
        "pass_FIB_num": 31,
        "pass_FIB": [
          "Math_5_n16.txt",
          "Math_5_n44.txt",
          "Math_5_n23.txt",
          "Math_5_n30.txt",
          "Math_5_n7.txt",
          "Math_5_n45.txt",
          "Math_5_n31.txt",
          "Math_5_n41.txt",
          "Math_5_n29.txt",
          "Math_5_n34.txt",
          "Math_5_n5.txt",
          "Math_5_n11.txt",
          "Math_5_n2.txt",
          "Math_5_n17.txt",
          "Math_5_n36.txt",
          "Math_5_n18.txt",
          "Math_5_n46.txt",
          "Math_5_n0.txt",
          "Math_5_n25.txt",
          "Math_5_n10.txt",
          "Math_5_n33.txt",
          "Math_5_n37.txt",
          "Math_5_n13.txt",
          "Math_5_n3.txt",
          "Math_5_n1.txt",
          "Math_5_n20.txt",
          "Math_5_n48.txt",
          "Math_5_n24.txt",
          "Math_5_n32.txt",
          "Math_5_n19.txt",
          "Math_5_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /** {@inheritDoc} */\n    public Complex reciprocal() {\n        if (isNaN) {\n            return NaN;\n        }\n\n        if (real == 0.0 && imaginary == 0.0) {\n            return INF;\n        }\n\n        if (isInfinite) {\n            return ZERO;\n        }\n\n        if (FastMath.abs(real) < FastMath.abs(imaginary)) {\n            double q = real / imaginary;\n            double scale = 1. / (real * q + imaginary);\n            return createComplex(scale * q, -scale);\n        } else {\n            double q = imaginary / real;\n            double scale = 1. / (imaginary * q + real);\n            return createComplex(scale, -scale * q);\n        }\n    }\n",
        "index": 41,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 10,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.math3.complex.ComplexTest::testReciprocalZero"
        ],
        "failing_tests": [],
        "sum_entropy": -0.7330624213970801,
        "mean_entropy": -0.004669187397433631,
        "pass_FIB_num": 31,
        "pass_FIB": [
          "Math_5_n16.txt",
          "Math_5_n44.txt",
          "Math_5_n23.txt",
          "Math_5_n30.txt",
          "Math_5_n7.txt",
          "Math_5_n45.txt",
          "Math_5_n31.txt",
          "Math_5_n41.txt",
          "Math_5_n29.txt",
          "Math_5_n34.txt",
          "Math_5_n5.txt",
          "Math_5_n11.txt",
          "Math_5_n2.txt",
          "Math_5_n17.txt",
          "Math_5_n36.txt",
          "Math_5_n18.txt",
          "Math_5_n46.txt",
          "Math_5_n0.txt",
          "Math_5_n25.txt",
          "Math_5_n10.txt",
          "Math_5_n33.txt",
          "Math_5_n37.txt",
          "Math_5_n13.txt",
          "Math_5_n3.txt",
          "Math_5_n1.txt",
          "Math_5_n20.txt",
          "Math_5_n48.txt",
          "Math_5_n24.txt",
          "Math_5_n32.txt",
          "Math_5_n19.txt",
          "Math_5_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /** {@inheritDoc} */\n    public Complex reciprocal() {\n        if (isNaN) {\n            return NaN;\n        }\n\n        if (real == 0.0 && imaginary == 0.0) {\n            return INF;\n        }\n\n        if (isInfinite) {\n            return ZERO;\n        }\n\n        if (FastMath.abs(real) < FastMath.abs(imaginary)) {\n            double q = real / imaginary;\n            double scale = 1. / (real * q + imaginary);\n            return createComplex(scale * q, -scale);\n        } else {\n            double q = imaginary / real;\n            double scale = 1. / (imaginary * q + real);\n            return createComplex(scale, -scale * q);\n        }\n    }\n",
        "index": 42,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 10,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.math3.complex.ComplexTest::testReciprocalZero"
        ],
        "failing_tests": [],
        "sum_entropy": -0.7330624213970801,
        "mean_entropy": -0.004669187397433631,
        "pass_FIB_num": 31,
        "pass_FIB": [
          "Math_5_n16.txt",
          "Math_5_n44.txt",
          "Math_5_n23.txt",
          "Math_5_n30.txt",
          "Math_5_n7.txt",
          "Math_5_n45.txt",
          "Math_5_n31.txt",
          "Math_5_n41.txt",
          "Math_5_n29.txt",
          "Math_5_n34.txt",
          "Math_5_n5.txt",
          "Math_5_n11.txt",
          "Math_5_n2.txt",
          "Math_5_n17.txt",
          "Math_5_n36.txt",
          "Math_5_n18.txt",
          "Math_5_n46.txt",
          "Math_5_n0.txt",
          "Math_5_n25.txt",
          "Math_5_n10.txt",
          "Math_5_n33.txt",
          "Math_5_n37.txt",
          "Math_5_n13.txt",
          "Math_5_n3.txt",
          "Math_5_n1.txt",
          "Math_5_n20.txt",
          "Math_5_n48.txt",
          "Math_5_n24.txt",
          "Math_5_n32.txt",
          "Math_5_n19.txt",
          "Math_5_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /** {@inheritDoc} */\n    public Complex reciprocal() {\n        if (isNaN) {\n            return NaN;\n        }\n\n        if (real == 0.0 && imaginary == 0.0) {\n            return INF;\n        }\n\n        if (isInfinite) {\n            return ZERO;\n        }\n\n        if (FastMath.abs(real) < FastMath.abs(imaginary)) {\n            double q = real / imaginary;\n            double scale = 1. / (real * q + imaginary);\n            return createComplex(scale * q, -scale);\n        } else {\n            double q = imaginary / real;\n            double scale = 1. / (imaginary * q + real);\n            return createComplex(scale, -scale * q);\n        }\n    }\n",
        "index": 44,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 10,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.math3.complex.ComplexTest::testReciprocalZero"
        ],
        "failing_tests": [],
        "sum_entropy": -0.7330624213970801,
        "mean_entropy": -0.004669187397433631,
        "pass_FIB_num": 31,
        "pass_FIB": [
          "Math_5_n16.txt",
          "Math_5_n44.txt",
          "Math_5_n23.txt",
          "Math_5_n30.txt",
          "Math_5_n7.txt",
          "Math_5_n45.txt",
          "Math_5_n31.txt",
          "Math_5_n41.txt",
          "Math_5_n29.txt",
          "Math_5_n34.txt",
          "Math_5_n5.txt",
          "Math_5_n11.txt",
          "Math_5_n2.txt",
          "Math_5_n17.txt",
          "Math_5_n36.txt",
          "Math_5_n18.txt",
          "Math_5_n46.txt",
          "Math_5_n0.txt",
          "Math_5_n25.txt",
          "Math_5_n10.txt",
          "Math_5_n33.txt",
          "Math_5_n37.txt",
          "Math_5_n13.txt",
          "Math_5_n3.txt",
          "Math_5_n1.txt",
          "Math_5_n20.txt",
          "Math_5_n48.txt",
          "Math_5_n24.txt",
          "Math_5_n32.txt",
          "Math_5_n19.txt",
          "Math_5_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /** {@inheritDoc} */\n    public Complex reciprocal() {\n        if (isNaN) {\n            return NaN;\n        }\n\n        if (real == 0.0 && imaginary == 0.0) {\n            return INF;\n        }\n\n        if (isInfinite) {\n            return ZERO;\n        }\n\n        if (FastMath.abs(real) < FastMath.abs(imaginary)) {\n            double q = real / imaginary;\n            double scale = 1. / (real * q + imaginary);\n            return createComplex(scale * q, -scale);\n        } else {\n            double q = imaginary / real;\n            double scale = 1. / (imaginary * q + real);\n            return createComplex(scale, -scale * q);\n        }\n    }\n",
        "index": 45,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 10,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.math3.complex.ComplexTest::testReciprocalZero"
        ],
        "failing_tests": [],
        "sum_entropy": -0.7330624213970801,
        "mean_entropy": -0.004669187397433631,
        "pass_FIB_num": 31,
        "pass_FIB": [
          "Math_5_n16.txt",
          "Math_5_n44.txt",
          "Math_5_n23.txt",
          "Math_5_n30.txt",
          "Math_5_n7.txt",
          "Math_5_n45.txt",
          "Math_5_n31.txt",
          "Math_5_n41.txt",
          "Math_5_n29.txt",
          "Math_5_n34.txt",
          "Math_5_n5.txt",
          "Math_5_n11.txt",
          "Math_5_n2.txt",
          "Math_5_n17.txt",
          "Math_5_n36.txt",
          "Math_5_n18.txt",
          "Math_5_n46.txt",
          "Math_5_n0.txt",
          "Math_5_n25.txt",
          "Math_5_n10.txt",
          "Math_5_n33.txt",
          "Math_5_n37.txt",
          "Math_5_n13.txt",
          "Math_5_n3.txt",
          "Math_5_n1.txt",
          "Math_5_n20.txt",
          "Math_5_n48.txt",
          "Math_5_n24.txt",
          "Math_5_n32.txt",
          "Math_5_n19.txt",
          "Math_5_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /** {@inheritDoc} */\n    public Complex reciprocal() {\n        if (isNaN) {\n            return NaN;\n        }\n\n        if (real == 0.0 && imaginary == 0.0) {\n            return INF;\n        }\n\n        if (isInfinite) {\n            return ZERO;\n        }\n\n        if (FastMath.abs(real) < FastMath.abs(imaginary)) {\n            double q = real / imaginary;\n            double scale = 1. / (real * q + imaginary);\n            return createComplex(scale * q, -scale);\n        } else {\n            double q = imaginary / real;\n            double scale = 1. / (imaginary * q + real);\n            return createComplex(scale, -scale * q);\n        }\n    }\n",
        "index": 78,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 10,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.math3.complex.ComplexTest::testReciprocalZero"
        ],
        "failing_tests": [],
        "sum_entropy": -0.7434022967351298,
        "mean_entropy": -0.004735046476019935,
        "pass_FIB_num": 31,
        "pass_FIB": [
          "Math_5_n16.txt",
          "Math_5_n44.txt",
          "Math_5_n23.txt",
          "Math_5_n30.txt",
          "Math_5_n7.txt",
          "Math_5_n45.txt",
          "Math_5_n31.txt",
          "Math_5_n41.txt",
          "Math_5_n29.txt",
          "Math_5_n34.txt",
          "Math_5_n5.txt",
          "Math_5_n11.txt",
          "Math_5_n2.txt",
          "Math_5_n17.txt",
          "Math_5_n36.txt",
          "Math_5_n18.txt",
          "Math_5_n46.txt",
          "Math_5_n0.txt",
          "Math_5_n25.txt",
          "Math_5_n10.txt",
          "Math_5_n33.txt",
          "Math_5_n37.txt",
          "Math_5_n13.txt",
          "Math_5_n3.txt",
          "Math_5_n1.txt",
          "Math_5_n20.txt",
          "Math_5_n48.txt",
          "Math_5_n24.txt",
          "Math_5_n32.txt",
          "Math_5_n19.txt",
          "Math_5_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /** {@inheritDoc} */\n    public Complex reciprocal() {\n        if (isNaN) {\n            return NaN;\n        }\n\n        if (real == 0.0 && imaginary == 0.0) {\n            return INF;\n        }\n\n        if (isInfinite) {\n            return ZERO;\n        }\n\n        if (FastMath.abs(real) < FastMath.abs(imaginary)) {\n            double q = real / imaginary;\n            double scale = 1. / (real * q + imaginary);\n            return createComplex(scale * q, -scale);\n        } else {\n            double q = imaginary / real;\n            double scale = 1. / (imaginary * q + real);\n            return createComplex(scale, -scale * q);\n        }\n    }\n",
        "index": 79,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 10,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.math3.complex.ComplexTest::testReciprocalZero"
        ],
        "failing_tests": [],
        "sum_entropy": -0.7434022967351298,
        "mean_entropy": -0.004735046476019935,
        "pass_FIB_num": 31,
        "pass_FIB": [
          "Math_5_n16.txt",
          "Math_5_n44.txt",
          "Math_5_n23.txt",
          "Math_5_n30.txt",
          "Math_5_n7.txt",
          "Math_5_n45.txt",
          "Math_5_n31.txt",
          "Math_5_n41.txt",
          "Math_5_n29.txt",
          "Math_5_n34.txt",
          "Math_5_n5.txt",
          "Math_5_n11.txt",
          "Math_5_n2.txt",
          "Math_5_n17.txt",
          "Math_5_n36.txt",
          "Math_5_n18.txt",
          "Math_5_n46.txt",
          "Math_5_n0.txt",
          "Math_5_n25.txt",
          "Math_5_n10.txt",
          "Math_5_n33.txt",
          "Math_5_n37.txt",
          "Math_5_n13.txt",
          "Math_5_n3.txt",
          "Math_5_n1.txt",
          "Math_5_n20.txt",
          "Math_5_n48.txt",
          "Math_5_n24.txt",
          "Math_5_n32.txt",
          "Math_5_n19.txt",
          "Math_5_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /** {@inheritDoc} */\n    public Complex reciprocal() {\n        if (isNaN) {\n            return NaN;\n        }\n\n        if (real == 0.0 && imaginary == 0.0) {\n            return INF;\n        }\n\n        if (isInfinite) {\n            return ZERO;\n        }\n\n        if (FastMath.abs(real) < FastMath.abs(imaginary)) {\n            double q = real / imaginary;\n            double scale = 1. / (real * q + imaginary);\n            return createComplex(scale * q, -scale);\n        } else {\n            double q = imaginary / real;\n            double scale = 1. / (imaginary * q + real);\n            return createComplex(scale, -scale * q);\n        }\n    }\n",
        "index": 80,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 10,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.math3.complex.ComplexTest::testReciprocalZero"
        ],
        "failing_tests": [],
        "sum_entropy": -0.7434022967351298,
        "mean_entropy": -0.004735046476019935,
        "pass_FIB_num": 31,
        "pass_FIB": [
          "Math_5_n16.txt",
          "Math_5_n44.txt",
          "Math_5_n23.txt",
          "Math_5_n30.txt",
          "Math_5_n7.txt",
          "Math_5_n45.txt",
          "Math_5_n31.txt",
          "Math_5_n41.txt",
          "Math_5_n29.txt",
          "Math_5_n34.txt",
          "Math_5_n5.txt",
          "Math_5_n11.txt",
          "Math_5_n2.txt",
          "Math_5_n17.txt",
          "Math_5_n36.txt",
          "Math_5_n18.txt",
          "Math_5_n46.txt",
          "Math_5_n0.txt",
          "Math_5_n25.txt",
          "Math_5_n10.txt",
          "Math_5_n33.txt",
          "Math_5_n37.txt",
          "Math_5_n13.txt",
          "Math_5_n3.txt",
          "Math_5_n1.txt",
          "Math_5_n20.txt",
          "Math_5_n48.txt",
          "Math_5_n24.txt",
          "Math_5_n32.txt",
          "Math_5_n19.txt",
          "Math_5_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /** {@inheritDoc} */\n    public Complex reciprocal() {\n        if (isNaN) {\n            return NaN;\n        }\n\n        if (real == 0.0 && imaginary == 0.0) {\n            return INF;\n        }\n\n        if (isInfinite) {\n            return ZERO;\n        }\n\n        if (FastMath.abs(real) < FastMath.abs(imaginary)) {\n            double q = real / imaginary;\n            double scale = 1. / (real * q + imaginary);\n            return createComplex(scale * q, -scale);\n        } else {\n            double q = imaginary / real;\n            double scale = 1. / (imaginary * q + real);\n            return createComplex(scale, -scale * q);\n        }\n    }\n",
        "index": 81,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 10,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.math3.complex.ComplexTest::testReciprocalZero"
        ],
        "failing_tests": [],
        "sum_entropy": -0.7434022967351298,
        "mean_entropy": -0.004735046476019935,
        "pass_FIB_num": 31,
        "pass_FIB": [
          "Math_5_n16.txt",
          "Math_5_n44.txt",
          "Math_5_n23.txt",
          "Math_5_n30.txt",
          "Math_5_n7.txt",
          "Math_5_n45.txt",
          "Math_5_n31.txt",
          "Math_5_n41.txt",
          "Math_5_n29.txt",
          "Math_5_n34.txt",
          "Math_5_n5.txt",
          "Math_5_n11.txt",
          "Math_5_n2.txt",
          "Math_5_n17.txt",
          "Math_5_n36.txt",
          "Math_5_n18.txt",
          "Math_5_n46.txt",
          "Math_5_n0.txt",
          "Math_5_n25.txt",
          "Math_5_n10.txt",
          "Math_5_n33.txt",
          "Math_5_n37.txt",
          "Math_5_n13.txt",
          "Math_5_n3.txt",
          "Math_5_n1.txt",
          "Math_5_n20.txt",
          "Math_5_n48.txt",
          "Math_5_n24.txt",
          "Math_5_n32.txt",
          "Math_5_n19.txt",
          "Math_5_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /** {@inheritDoc} */\n    public Complex reciprocal() {\n        if (isNaN) {\n            return NaN;\n        }\n\n        if (real == 0.0 && imaginary == 0.0) {\n            return INF; // Changed from NaN to INF\n        }\n\n        if (isInfinite) {\n            return ZERO;\n        }\n\n        if (FastMath.abs(real) < FastMath.abs(imaginary)) {\n            double q = real / imaginary;\n            double scale = 1. / (real * q + imaginary);\n            return createComplex(scale * q, -scale);\n        } else {\n            double q = imaginary / real;\n            double scale = 1. / (imaginary * q + real);\n            return createComplex(scale, -scale * q);\n        }\n    }\n",
        "index": 33,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 10,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.math3.complex.ComplexTest::testReciprocalZero"
        ],
        "failing_tests": [],
        "sum_entropy": -4.925944896340454,
        "mean_entropy": -0.030036249367929597,
        "pass_FIB_num": 31,
        "pass_FIB": [
          "Math_5_n16.txt",
          "Math_5_n44.txt",
          "Math_5_n23.txt",
          "Math_5_n30.txt",
          "Math_5_n7.txt",
          "Math_5_n45.txt",
          "Math_5_n31.txt",
          "Math_5_n41.txt",
          "Math_5_n29.txt",
          "Math_5_n34.txt",
          "Math_5_n5.txt",
          "Math_5_n11.txt",
          "Math_5_n2.txt",
          "Math_5_n17.txt",
          "Math_5_n36.txt",
          "Math_5_n18.txt",
          "Math_5_n46.txt",
          "Math_5_n0.txt",
          "Math_5_n25.txt",
          "Math_5_n10.txt",
          "Math_5_n33.txt",
          "Math_5_n37.txt",
          "Math_5_n13.txt",
          "Math_5_n3.txt",
          "Math_5_n1.txt",
          "Math_5_n20.txt",
          "Math_5_n48.txt",
          "Math_5_n24.txt",
          "Math_5_n32.txt",
          "Math_5_n19.txt",
          "Math_5_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /** {@inheritDoc} */\n    public Complex reciprocal() {\n        if (isNaN) {\n            return NaN;\n        }\n\n        if (real == 0.0 && imaginary == 0.0) {\n            return INF; // Fixed to return INF instead of NaN\n        }\n\n        if (isInfinite) {\n            return ZERO;\n        }\n\n        if (FastMath.abs(real) < FastMath.abs(imaginary)) {\n            double q = real / imaginary;\n            double scale = 1. / (real * q + imaginary);\n            return createComplex(scale * q, -scale);\n        } else {\n            double q = imaginary / real;\n            double scale = 1. / (imaginary * q + real);\n            return createComplex(scale, -scale * q);\n        }\n    }\n",
        "index": 4,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 10,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.math3.complex.ComplexTest::testReciprocalZero"
        ],
        "failing_tests": [],
        "sum_entropy": -6.315285437430809,
        "mean_entropy": -0.03804388817729403,
        "pass_FIB_num": 31,
        "pass_FIB": [
          "Math_5_n16.txt",
          "Math_5_n44.txt",
          "Math_5_n23.txt",
          "Math_5_n30.txt",
          "Math_5_n7.txt",
          "Math_5_n45.txt",
          "Math_5_n31.txt",
          "Math_5_n41.txt",
          "Math_5_n29.txt",
          "Math_5_n34.txt",
          "Math_5_n5.txt",
          "Math_5_n11.txt",
          "Math_5_n2.txt",
          "Math_5_n17.txt",
          "Math_5_n36.txt",
          "Math_5_n18.txt",
          "Math_5_n46.txt",
          "Math_5_n0.txt",
          "Math_5_n25.txt",
          "Math_5_n10.txt",
          "Math_5_n33.txt",
          "Math_5_n37.txt",
          "Math_5_n13.txt",
          "Math_5_n3.txt",
          "Math_5_n1.txt",
          "Math_5_n20.txt",
          "Math_5_n48.txt",
          "Math_5_n24.txt",
          "Math_5_n32.txt",
          "Math_5_n19.txt",
          "Math_5_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /** {@inheritDoc} */\n    public Complex reciprocal() {\n        if (isNaN) {\n            return NaN;\n        }\n\n        if (real == 0.0 && imaginary == 0.0) {\n            return INF; // Fixed bug: return INF instead of NaN\n        }\n\n        if (isInfinite) {\n            return ZERO;\n        }\n\n        if (FastMath.abs(real) < FastMath.abs(imaginary)) {\n            double q = real / imaginary;\n            double scale = 1. / (real * q + imaginary);\n            return createComplex(scale * q, -scale);\n        } else {\n            double q = imaginary / real;\n            double scale = 1. / (imaginary * q + real);\n            return createComplex(scale, -scale * q);\n        }\n    }\n",
        "index": 6,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 10,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.math3.complex.ComplexTest::testReciprocalZero"
        ],
        "failing_tests": [],
        "sum_entropy": -6.778915274216123,
        "mean_entropy": -0.04059230703123427,
        "pass_FIB_num": 31,
        "pass_FIB": [
          "Math_5_n16.txt",
          "Math_5_n44.txt",
          "Math_5_n23.txt",
          "Math_5_n30.txt",
          "Math_5_n7.txt",
          "Math_5_n45.txt",
          "Math_5_n31.txt",
          "Math_5_n41.txt",
          "Math_5_n29.txt",
          "Math_5_n34.txt",
          "Math_5_n5.txt",
          "Math_5_n11.txt",
          "Math_5_n2.txt",
          "Math_5_n17.txt",
          "Math_5_n36.txt",
          "Math_5_n18.txt",
          "Math_5_n46.txt",
          "Math_5_n0.txt",
          "Math_5_n25.txt",
          "Math_5_n10.txt",
          "Math_5_n33.txt",
          "Math_5_n37.txt",
          "Math_5_n13.txt",
          "Math_5_n3.txt",
          "Math_5_n1.txt",
          "Math_5_n20.txt",
          "Math_5_n48.txt",
          "Math_5_n24.txt",
          "Math_5_n32.txt",
          "Math_5_n19.txt",
          "Math_5_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /** {@inheritDoc} */\n    public Complex reciprocal() {\n        if (isNaN) {\n            return NaN;\n        }\n\n        if (real == 0.0 && imaginary == 0.0) {\n            return INF; // Changed to return INF instead of NaN for Complex.ZERO\n        }\n\n        if (isInfinite) {\n            return ZERO;\n        }\n\n        if (FastMath.abs(real) < FastMath.abs(imaginary)) {\n            double q = real / imaginary;\n            double scale = 1. / (real * q + imaginary);\n            return createComplex(scale * q, -scale);\n        } else {\n            double q = imaginary / real;\n            double scale = 1. / (imaginary * q + real);\n            return createComplex(scale, -scale * q);\n        }\n    }\n",
        "index": 24,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 10,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.math3.complex.ComplexTest::testReciprocalZero"
        ],
        "failing_tests": [],
        "sum_entropy": -8.913791823603201,
        "mean_entropy": -0.052744330317178706,
        "pass_FIB_num": 31,
        "pass_FIB": [
          "Math_5_n16.txt",
          "Math_5_n44.txt",
          "Math_5_n23.txt",
          "Math_5_n30.txt",
          "Math_5_n7.txt",
          "Math_5_n45.txt",
          "Math_5_n31.txt",
          "Math_5_n41.txt",
          "Math_5_n29.txt",
          "Math_5_n34.txt",
          "Math_5_n5.txt",
          "Math_5_n11.txt",
          "Math_5_n2.txt",
          "Math_5_n17.txt",
          "Math_5_n36.txt",
          "Math_5_n18.txt",
          "Math_5_n46.txt",
          "Math_5_n0.txt",
          "Math_5_n25.txt",
          "Math_5_n10.txt",
          "Math_5_n33.txt",
          "Math_5_n37.txt",
          "Math_5_n13.txt",
          "Math_5_n3.txt",
          "Math_5_n1.txt",
          "Math_5_n20.txt",
          "Math_5_n48.txt",
          "Math_5_n24.txt",
          "Math_5_n32.txt",
          "Math_5_n19.txt",
          "Math_5_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /** {@inheritDoc} */\n    public Complex reciprocal() {\n        if (isNaN) {\n            return NaN;\n        }\n\n        if (real == 0.0 && imaginary == 0.0) {\n            return INF; // Fixing the return value to INF when real and imaginary parts are both 0\n        }\n\n        if (isInfinite) {\n            return ZERO;\n        }\n\n        if (FastMath.abs(real) < FastMath.abs(imaginary)) {\n            double q = real / imaginary;\n            double scale = 1. / (real * q + imaginary);\n            return createComplex(scale * q, -scale);\n        } else {\n            double q = imaginary / real;\n            double scale = 1. / (imaginary * q + real);\n            return createComplex(scale, -scale * q);\n        }\n    }\n",
        "index": 27,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 10,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.math3.complex.ComplexTest::testReciprocalZero"
        ],
        "failing_tests": [],
        "sum_entropy": -12.744973725565625,
        "mean_entropy": -0.07282842128894643,
        "pass_FIB_num": 31,
        "pass_FIB": [
          "Math_5_n16.txt",
          "Math_5_n44.txt",
          "Math_5_n23.txt",
          "Math_5_n30.txt",
          "Math_5_n7.txt",
          "Math_5_n45.txt",
          "Math_5_n31.txt",
          "Math_5_n41.txt",
          "Math_5_n29.txt",
          "Math_5_n34.txt",
          "Math_5_n5.txt",
          "Math_5_n11.txt",
          "Math_5_n2.txt",
          "Math_5_n17.txt",
          "Math_5_n36.txt",
          "Math_5_n18.txt",
          "Math_5_n46.txt",
          "Math_5_n0.txt",
          "Math_5_n25.txt",
          "Math_5_n10.txt",
          "Math_5_n33.txt",
          "Math_5_n37.txt",
          "Math_5_n13.txt",
          "Math_5_n3.txt",
          "Math_5_n1.txt",
          "Math_5_n20.txt",
          "Math_5_n48.txt",
          "Math_5_n24.txt",
          "Math_5_n32.txt",
          "Math_5_n19.txt",
          "Math_5_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      }
    ]
  }
}