{
  "JacksonDatabind_57_src/main/java/com/fasterxml/jackson/databind/ObjectReader.java_1432_1443": {
    "patches": [
      {
        "patch": "\n    /**\n     * Overloaded version of {@link #readValue(InputStream)}.\n     */\n    public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)\n        throws IOException, JsonProcessingException\n    {\n        if (_dataFormatReaders != null) {\n            return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);\n        }\n        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src, offset, length), \n                true));\n    }\n",
        "index": 16,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 302,
        "failing_relevant": 0,
        "passing_tests": [
          "com.fasterxml.jackson.databind.seq.ReadValuesTest::testRootBeans"
        ],
        "failing_tests": [],
        "sum_entropy": -0.43343257367105004,
        "mean_entropy": -0.0038356864926641595,
        "pass_FIB_num": 1,
        "pass_FIB": [
          "JacksonDatabind_57_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Overloaded version of {@link #readValue(InputStream)}.\n     */\n    public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)\n        throws IOException, JsonProcessingException\n    {\n        if (_dataFormatReaders != null) {\n            return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);\n        }\n        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src, offset, length), \n                true));\n    }\n",
        "index": 17,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 302,
        "failing_relevant": 0,
        "passing_tests": [
          "com.fasterxml.jackson.databind.seq.ReadValuesTest::testRootBeans"
        ],
        "failing_tests": [],
        "sum_entropy": -0.43343257367105004,
        "mean_entropy": -0.0038356864926641595,
        "pass_FIB_num": 1,
        "pass_FIB": [
          "JacksonDatabind_57_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Overloaded version of {@link #readValue(InputStream)}.\n     */\n    public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)\n        throws IOException, JsonProcessingException\n    {\n        if (_dataFormatReaders != null) {\n            return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);\n        }\n        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src, offset, length), \n                true));\n    }\n",
        "index": 18,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 302,
        "failing_relevant": 0,
        "passing_tests": [
          "com.fasterxml.jackson.databind.seq.ReadValuesTest::testRootBeans"
        ],
        "failing_tests": [],
        "sum_entropy": -0.43343257367105004,
        "mean_entropy": -0.0038356864926641595,
        "pass_FIB_num": 1,
        "pass_FIB": [
          "JacksonDatabind_57_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Overloaded version of {@link #readValue(InputStream)}.\n     */\n    public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)\n        throws IOException, JsonProcessingException\n    {\n        if (_dataFormatReaders != null) {\n            return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);\n        }\n        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src, offset, length), \n                true));\n    }\n",
        "index": 19,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 302,
        "failing_relevant": 0,
        "passing_tests": [
          "com.fasterxml.jackson.databind.seq.ReadValuesTest::testRootBeans"
        ],
        "failing_tests": [],
        "sum_entropy": -0.43343257367105004,
        "mean_entropy": -0.0038356864926641595,
        "pass_FIB_num": 1,
        "pass_FIB": [
          "JacksonDatabind_57_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Overloaded version of {@link #readValue(InputStream)}.\n     */\n    public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)\n        throws IOException, JsonProcessingException\n    {\n        if (_dataFormatReaders != null) {\n            return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);\n        }\n        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src, offset, length), \n                true));\n    }\n",
        "index": 20,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 302,
        "failing_relevant": 0,
        "passing_tests": [
          "com.fasterxml.jackson.databind.seq.ReadValuesTest::testRootBeans"
        ],
        "failing_tests": [],
        "sum_entropy": -0.43343257367105004,
        "mean_entropy": -0.0038356864926641595,
        "pass_FIB_num": 1,
        "pass_FIB": [
          "JacksonDatabind_57_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Overloaded version of {@link #readValue(InputStream)}.\n     */\n    public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)\n        throws IOException, JsonProcessingException\n    {\n        if (_dataFormatReaders != null) {\n            return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);\n        }\n        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src, offset, length), \n                true));\n    }\n",
        "index": 21,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 302,
        "failing_relevant": 0,
        "passing_tests": [
          "com.fasterxml.jackson.databind.seq.ReadValuesTest::testRootBeans"
        ],
        "failing_tests": [],
        "sum_entropy": -0.43343257367105004,
        "mean_entropy": -0.0038356864926641595,
        "pass_FIB_num": 1,
        "pass_FIB": [
          "JacksonDatabind_57_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Overloaded version of {@link #readValue(InputStream)}.\n     */\n    public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)\n        throws IOException, JsonProcessingException\n    {\n        if (_dataFormatReaders != null) {\n            return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);\n        }\n        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src, offset, length), \n                true));\n    }\n",
        "index": 22,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 302,
        "failing_relevant": 0,
        "passing_tests": [
          "com.fasterxml.jackson.databind.seq.ReadValuesTest::testRootBeans"
        ],
        "failing_tests": [],
        "sum_entropy": -0.43343257367105004,
        "mean_entropy": -0.0038356864926641595,
        "pass_FIB_num": 1,
        "pass_FIB": [
          "JacksonDatabind_57_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Overloaded version of {@link #readValue(InputStream)}.\n     */\n    public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)\n        throws IOException, JsonProcessingException\n    {\n        if (_dataFormatReaders != null) {\n            return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);\n        }\n        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src, offset, length), \n                true));\n    }\n",
        "index": 23,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 302,
        "failing_relevant": 0,
        "passing_tests": [
          "com.fasterxml.jackson.databind.seq.ReadValuesTest::testRootBeans"
        ],
        "failing_tests": [],
        "sum_entropy": -0.43343257367105004,
        "mean_entropy": -0.0038356864926641595,
        "pass_FIB_num": 1,
        "pass_FIB": [
          "JacksonDatabind_57_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Overloaded version of {@link #readValue(InputStream)}.\n     */\n    public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)\n        throws IOException, JsonProcessingException\n    {\n        if (_dataFormatReaders != null) {\n            return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);\n        }\n        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src, offset, length), \n                true));\n    }\n",
        "index": 24,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 302,
        "failing_relevant": 0,
        "passing_tests": [
          "com.fasterxml.jackson.databind.seq.ReadValuesTest::testRootBeans"
        ],
        "failing_tests": [],
        "sum_entropy": -0.43343257367105004,
        "mean_entropy": -0.0038356864926641595,
        "pass_FIB_num": 1,
        "pass_FIB": [
          "JacksonDatabind_57_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Overloaded version of {@link #readValue(InputStream)}.\n     */\n    public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)\n        throws IOException, JsonProcessingException\n    {\n        if (_dataFormatReaders != null) {\n            return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);\n        }\n        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src, offset, length), \n                true));\n    }\n",
        "index": 25,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 302,
        "failing_relevant": 0,
        "passing_tests": [
          "com.fasterxml.jackson.databind.seq.ReadValuesTest::testRootBeans"
        ],
        "failing_tests": [],
        "sum_entropy": -0.43343257367105004,
        "mean_entropy": -0.0038356864926641595,
        "pass_FIB_num": 1,
        "pass_FIB": [
          "JacksonDatabind_57_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Overloaded version of {@link #readValue(InputStream)}.\n     */\n    public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)\n        throws IOException, JsonProcessingException\n    {\n        if (_dataFormatReaders != null) {\n            return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);\n        }\n        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src, offset, length), \n                true));\n    }\n",
        "index": 26,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 302,
        "failing_relevant": 0,
        "passing_tests": [
          "com.fasterxml.jackson.databind.seq.ReadValuesTest::testRootBeans"
        ],
        "failing_tests": [],
        "sum_entropy": -0.43343257367105004,
        "mean_entropy": -0.0038356864926641595,
        "pass_FIB_num": 1,
        "pass_FIB": [
          "JacksonDatabind_57_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Overloaded version of {@link #readValue(InputStream)}.\n     */\n    public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)\n        throws IOException, JsonProcessingException\n    {\n        if (_dataFormatReaders != null) {\n            return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);\n        }\n        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src, offset, length), \n                true));\n    }\n",
        "index": 27,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 302,
        "failing_relevant": 0,
        "passing_tests": [
          "com.fasterxml.jackson.databind.seq.ReadValuesTest::testRootBeans"
        ],
        "failing_tests": [],
        "sum_entropy": -0.43343257367105004,
        "mean_entropy": -0.0038356864926641595,
        "pass_FIB_num": 1,
        "pass_FIB": [
          "JacksonDatabind_57_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Overloaded version of {@link #readValue(InputStream)}.\n     */\n    public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)\n        throws IOException, JsonProcessingException\n    {\n        if (_dataFormatReaders != null) {\n            return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);\n        }\n        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src, offset, length), \n                true));\n    }\n",
        "index": 28,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 302,
        "failing_relevant": 0,
        "passing_tests": [
          "com.fasterxml.jackson.databind.seq.ReadValuesTest::testRootBeans"
        ],
        "failing_tests": [],
        "sum_entropy": -0.43343257367105004,
        "mean_entropy": -0.0038356864926641595,
        "pass_FIB_num": 1,
        "pass_FIB": [
          "JacksonDatabind_57_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Overloaded version of {@link #readValue(InputStream)}.\n     */\n    public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)\n        throws IOException, JsonProcessingException\n    {\n        if (_dataFormatReaders != null) {\n            return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);\n        }\n        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src, offset, length), \n                true));\n    }\n",
        "index": 29,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 302,
        "failing_relevant": 0,
        "passing_tests": [
          "com.fasterxml.jackson.databind.seq.ReadValuesTest::testRootBeans"
        ],
        "failing_tests": [],
        "sum_entropy": -0.43343257367105004,
        "mean_entropy": -0.0038356864926641595,
        "pass_FIB_num": 1,
        "pass_FIB": [
          "JacksonDatabind_57_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Overloaded version of {@link #readValue(InputStream)}.\n     */\n    public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)\n        throws IOException, JsonProcessingException\n    {\n        if (_dataFormatReaders != null) {\n            return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);\n        }\n        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src, offset, length), \n                true));\n    }\n",
        "index": 30,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 302,
        "failing_relevant": 0,
        "passing_tests": [
          "com.fasterxml.jackson.databind.seq.ReadValuesTest::testRootBeans"
        ],
        "failing_tests": [],
        "sum_entropy": -0.43343257367105004,
        "mean_entropy": -0.0038356864926641595,
        "pass_FIB_num": 1,
        "pass_FIB": [
          "JacksonDatabind_57_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Overloaded version of {@link #readValue(InputStream)}.\n     */\n    public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)\n            throws IOException, JsonProcessingException {\n        if (_dataFormatReaders != null) {\n            return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);\n        }\n        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src, offset, length), true));\n    }\n",
        "index": 84,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 302,
        "failing_relevant": 0,
        "passing_tests": [
          "com.fasterxml.jackson.databind.seq.ReadValuesTest::testRootBeans"
        ],
        "failing_tests": [],
        "sum_entropy": -3.3720300205961586,
        "mean_entropy": -0.030936055234827144,
        "pass_FIB_num": 1,
        "pass_FIB": [
          "JacksonDatabind_57_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Overloaded version of {@link #readValue(InputStream)}.\n     */\n    public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)\n            throws IOException, JsonProcessingException {\n        if (_dataFormatReaders != null) {\n            return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);\n        }\n        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src, offset, length), true));\n    }\n",
        "index": 93,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 302,
        "failing_relevant": 0,
        "passing_tests": [
          "com.fasterxml.jackson.databind.seq.ReadValuesTest::testRootBeans"
        ],
        "failing_tests": [],
        "sum_entropy": -3.3720300205961586,
        "mean_entropy": -0.030936055234827144,
        "pass_FIB_num": 1,
        "pass_FIB": [
          "JacksonDatabind_57_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n/**\n * Overloaded version of {@link #readValue(InputStream)}.\n */\npublic <T> MappingIterator<T> readValues(byte[] src, int offset, int length)\n    throws IOException, JsonProcessingException\n{\n    if (_dataFormatReaders != null) {\n        return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);\n    }\n    return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src, offset, length), \n            true));\n}\n",
        "index": 74,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 302,
        "failing_relevant": 0,
        "passing_tests": [
          "com.fasterxml.jackson.databind.seq.ReadValuesTest::testRootBeans"
        ],
        "failing_tests": [],
        "sum_entropy": -3.62572752950709,
        "mean_entropy": -0.03388530401408495,
        "pass_FIB_num": 1,
        "pass_FIB": [
          "JacksonDatabind_57_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Overloaded version of {@link #readValue(InputStream)}.\n     */\n    public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)\n            throws IOException, JsonProcessingException {\n        if (_dataFormatReaders != null) {\n            return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);\n        }\n        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src, offset, length),\n                true));\n    }\n",
        "index": 66,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 302,
        "failing_relevant": 0,
        "passing_tests": [
          "com.fasterxml.jackson.databind.seq.ReadValuesTest::testRootBeans"
        ],
        "failing_tests": [],
        "sum_entropy": -3.7715035578643286,
        "mean_entropy": -0.034286395980584805,
        "pass_FIB_num": 1,
        "pass_FIB": [
          "JacksonDatabind_57_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Overloaded version of {@link #readValue(InputStream)}.\n     */\n    public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)\n            throws IOException, JsonProcessingException {\n        if (_dataFormatReaders != null) {\n            return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);\n        }\n        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src, offset, length),\n                true));\n    }\n",
        "index": 9,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 302,
        "failing_relevant": 0,
        "passing_tests": [
          "com.fasterxml.jackson.databind.seq.ReadValuesTest::testRootBeans"
        ],
        "failing_tests": [],
        "sum_entropy": -3.9167221547095794,
        "mean_entropy": -0.035606565042814356,
        "pass_FIB_num": 1,
        "pass_FIB": [
          "JacksonDatabind_57_n12.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      }
    ]
  }
}