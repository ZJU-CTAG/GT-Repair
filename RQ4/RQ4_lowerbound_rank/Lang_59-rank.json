{
  "Lang_59_src/java/org/apache/commons/lang/text/StrBuilder.java_867_895": {
    "patches": [
      {
        "patch": "\n    /**\n     * Appends an object to the builder padding on the right to a fixed length.\n     * The <code>toString</code> of the object is used.\n     * If the object is larger than the length, the right hand side is lost.\n     * If the object is null, null text value is used.\n     * \n     * @param obj  the object to append, null uses null text\n     * @param width  the fixed field width, zero or negative has no effect\n     * @param padChar  the pad character to use\n     * @return this, to enable chaining\n     */\n    public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n        if (width > 0) {\n            ensureCapacity(size + width);\n            String str = (obj == null ? getNullText() : obj.toString());\n            int strLen = str.length();\n            if (strLen >= width) {\n                str.getChars(0, width, buffer, size);\n            } else {\n                int padLen = width - strLen;\n                str.getChars(0, strLen, buffer, size);\n                for (int i = 0; i < padLen; i++) {\n                    buffer[size + strLen + i] = padChar;\n                }\n            }\n            size += width;\n        }\n        return this;\n    }\n",
        "index": 0,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.lang.text.StrBuilderAppendInsertTest::testLang299"
        ],
        "failing_tests": [],
        "sum_entropy": -0.4246575845176197,
        "mean_entropy": -0.0014694034066353623,
        "pass_FIB_num": 4,
        "pass_FIB": [
          "Lang_59_n11.txt",
          "Lang_59_n20.txt",
          "Lang_59_n48.txt",
          "Lang_59_n5.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Appends an object to the builder padding on the right to a fixed length.\n     * The <code>toString</code> of the object is used.\n     * If the object is larger than the length, the right hand side is lost.\n     * If the object is null, null text value is used.\n     * \n     * @param obj  the object to append, null uses null text\n     * @param width  the fixed field width, zero or negative has no effect\n     * @param padChar  the pad character to use\n     * @return this, to enable chaining\n     */\n    public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n        if (width > 0) {\n            ensureCapacity(size + width);\n            String str = (obj == null ? getNullText() : obj.toString());\n            int strLen = str.length();\n            if (strLen >= width) {\n                str.getChars(0, width, buffer, size);\n            } else {\n                int padLen = width - strLen;\n                str.getChars(0, strLen, buffer, size);\n                for (int i = 0; i < padLen; i++) {\n                    buffer[size + strLen + i] = padChar;\n                }\n            }\n            size += width;\n        }\n        return this;\n    }\n",
        "index": 1,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.lang.text.StrBuilderAppendInsertTest::testLang299"
        ],
        "failing_tests": [],
        "sum_entropy": -0.4246575845176197,
        "mean_entropy": -0.0014694034066353623,
        "pass_FIB_num": 4,
        "pass_FIB": [
          "Lang_59_n11.txt",
          "Lang_59_n20.txt",
          "Lang_59_n48.txt",
          "Lang_59_n5.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Appends an object to the builder padding on the right to a fixed length.\n     * The <code>toString</code> of the object is used.\n     * If the object is larger than the length, the right hand side is lost.\n     * If the object is null, null text value is used.\n     * \n     * @param obj  the object to append, null uses null text\n     * @param width  the fixed field width, zero or negative has no effect\n     * @param padChar  the pad character to use\n     * @return this, to enable chaining\n     */\n    public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n        if (width > 0) {\n            ensureCapacity(size + width);\n            String str = (obj == null ? getNullText() : obj.toString());\n            int strLen = str.length();\n            if (strLen >= width) {\n                str.getChars(0, width, buffer, size);\n            } else {\n                int padLen = width - strLen;\n                str.getChars(0, strLen, buffer, size);\n                for (int i = 0; i < padLen; i++) {\n                    buffer[size + strLen + i] = padChar;\n                }\n            }\n            size += width;\n        }\n        return this;\n    }\n",
        "index": 2,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.lang.text.StrBuilderAppendInsertTest::testLang299"
        ],
        "failing_tests": [],
        "sum_entropy": -0.4246575845176197,
        "mean_entropy": -0.0014694034066353623,
        "pass_FIB_num": 4,
        "pass_FIB": [
          "Lang_59_n11.txt",
          "Lang_59_n20.txt",
          "Lang_59_n48.txt",
          "Lang_59_n5.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Appends an object to the builder padding on the right to a fixed length.\n     * The <code>toString</code> of the object is used.\n     * If the object is larger than the length, the right hand side is lost.\n     * If the object is null, null text value is used.\n     * \n     * @param obj  the object to append, null uses null text\n     * @param width  the fixed field width, zero or negative has no effect\n     * @param padChar  the pad character to use\n     * @return this, to enable chaining\n     */\n    public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n        if (width > 0) {\n            ensureCapacity(size + width);\n            String str = (obj == null ? getNullText() : obj.toString());\n            int strLen = str.length();\n            if (strLen >= width) {\n                str.getChars(0, width, buffer, size);\n            } else {\n                int padLen = width - strLen;\n                str.getChars(0, strLen, buffer, size);\n                for (int i = 0; i < padLen; i++) {\n                    buffer[size + strLen + i] = padChar;\n                }\n            }\n            size += width;\n        }\n        return this;\n    }\n",
        "index": 3,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.lang.text.StrBuilderAppendInsertTest::testLang299"
        ],
        "failing_tests": [],
        "sum_entropy": -0.4246575845176197,
        "mean_entropy": -0.0014694034066353623,
        "pass_FIB_num": 4,
        "pass_FIB": [
          "Lang_59_n11.txt",
          "Lang_59_n20.txt",
          "Lang_59_n48.txt",
          "Lang_59_n5.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Appends an object to the builder padding on the right to a fixed length.\n     * The <code>toString</code> of the object is used.\n     * If the object is larger than the length, the right hand side is lost.\n     * If the object is null, null text value is used.\n     * \n     * @param obj  the object to append, null uses null text\n     * @param width  the fixed field width, zero or negative has no effect\n     * @param padChar  the pad character to use\n     * @return this, to enable chaining\n     */\n    public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n        if (width > 0) {\n            ensureCapacity(size + width);\n            String str = (obj == null ? getNullText() : obj.toString());\n            int strLen = str.length();\n            if (strLen >= width) {\n                str.getChars(0, width, buffer, size);\n            } else {\n                int padLen = width - strLen;\n                str.getChars(0, strLen, buffer, size);\n                for (int i = 0; i < padLen; i++) {\n                    buffer[size + strLen + i] = padChar;\n                }\n            }\n            size += width;\n        }\n        return this;\n    }\n",
        "index": 4,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.lang.text.StrBuilderAppendInsertTest::testLang299"
        ],
        "failing_tests": [],
        "sum_entropy": -0.4246575845176197,
        "mean_entropy": -0.0014694034066353623,
        "pass_FIB_num": 4,
        "pass_FIB": [
          "Lang_59_n11.txt",
          "Lang_59_n20.txt",
          "Lang_59_n48.txt",
          "Lang_59_n5.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Appends an object to the builder padding on the right to a fixed length.\n     * The <code>toString</code> of the object is used.\n     * If the object is larger than the length, the right hand side is lost.\n     * If the object is null, null text value is used.\n     * \n     * @param obj  the object to append, null uses null text\n     * @param width  the fixed field width, zero or negative has no effect\n     * @param padChar  the pad character to use\n     * @return this, to enable chaining\n     */\n    public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n        if (width > 0) {\n            ensureCapacity(size + width);\n            String str = (obj == null ? getNullText() : obj.toString());\n            int strLen = str.length();\n            if (strLen >= width) {\n                str.getChars(0, width, buffer, size);\n            } else {\n                int padLen = width - strLen;\n                str.getChars(0, strLen, buffer, size);\n                for (int i = 0; i < padLen; i++) {\n                    buffer[size + strLen + i] = padChar;\n                }\n            }\n            size += width;\n        }\n        return this;\n    }\n",
        "index": 5,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.lang.text.StrBuilderAppendInsertTest::testLang299"
        ],
        "failing_tests": [],
        "sum_entropy": -0.4246575845176197,
        "mean_entropy": -0.0014694034066353623,
        "pass_FIB_num": 4,
        "pass_FIB": [
          "Lang_59_n11.txt",
          "Lang_59_n20.txt",
          "Lang_59_n48.txt",
          "Lang_59_n5.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Appends an object to the builder padding on the right to a fixed length.\n     * The <code>toString</code> of the object is used.\n     * If the object is larger than the length, the right hand side is lost.\n     * If the object is null, null text value is used.\n     * \n     * @param obj  the object to append, null uses null text\n     * @param width  the fixed field width, zero or negative has no effect\n     * @param padChar  the pad character to use\n     * @return this, to enable chaining\n     */\n    public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n        if (width > 0) {\n            ensureCapacity(size + width);\n            String str = (obj == null ? getNullText() : obj.toString());\n            int strLen = str.length();\n            if (strLen >= width) {\n                str.getChars(0, width, buffer, size);\n            } else {\n                int padLen = width - strLen;\n                str.getChars(0, strLen, buffer, size);\n                for (int i = 0; i < padLen; i++) {\n                    buffer[size + strLen + i] = padChar;\n                }\n            }\n            size += width;\n        }\n        return this;\n    }\n",
        "index": 28,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.lang.text.StrBuilderAppendInsertTest::testLang299"
        ],
        "failing_tests": [],
        "sum_entropy": -0.4451103153774498,
        "mean_entropy": -0.0015401741016520753,
        "pass_FIB_num": 4,
        "pass_FIB": [
          "Lang_59_n11.txt",
          "Lang_59_n20.txt",
          "Lang_59_n48.txt",
          "Lang_59_n5.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Appends an object to the builder padding on the right to a fixed length.\n     * The <code>toString</code> of the object is used.\n     * If the object is larger than the length, the right hand side is lost.\n     * If the object is null, null text value is used.\n     * \n     * @param obj  the object to append, null uses null text\n     * @param width  the fixed field width, zero or negative has no effect\n     * @param padChar  the pad character to use\n     * @return this, to enable chaining\n     */\n    public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n        if (width > 0) {\n            ensureCapacity(size + width);\n            String str = (obj == null ? getNullText() : obj.toString());\n            int strLen = str.length();\n            if (strLen >= width) {\n                str.getChars(0, width, buffer, size);\n            } else {\n                int padLen = width - strLen;\n                str.getChars(0, strLen, buffer, size);\n                for (int i = 0; i < padLen; i++) {\n                    buffer[size + strLen + i] = padChar;\n                }\n            }\n            size += width;\n        }\n        return this;\n    }\n",
        "index": 29,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.lang.text.StrBuilderAppendInsertTest::testLang299"
        ],
        "failing_tests": [],
        "sum_entropy": -0.4451103153774498,
        "mean_entropy": -0.0015401741016520753,
        "pass_FIB_num": 4,
        "pass_FIB": [
          "Lang_59_n11.txt",
          "Lang_59_n20.txt",
          "Lang_59_n48.txt",
          "Lang_59_n5.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Appends an object to the builder padding on the right to a fixed length.\n     * The <code>toString</code> of the object is used.\n     * If the object is larger than the length, the right hand side is lost.\n     * If the object is null, null text value is used.\n     * \n     * @param obj  the object to append, null uses null text\n     * @param width  the fixed field width, zero or negative has no effect\n     * @param padChar  the pad character to use\n     * @return this, to enable chaining\n     */\n    public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n        if (width > 0) {\n            ensureCapacity(size + width);\n            String str = (obj == null ? getNullText() : obj.toString());\n            int strLen = str.length();\n            if (strLen >= width) {\n                str.getChars(0, width, buffer, size);\n            } else {\n                int padLen = width - strLen;\n                str.getChars(0, strLen, buffer, size);\n                for (int i = 0; i < padLen; i++) {\n                    buffer[size + strLen + i] = padChar;\n                }\n            }\n            size += width;\n        }\n        return this;\n    }\n",
        "index": 30,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.lang.text.StrBuilderAppendInsertTest::testLang299"
        ],
        "failing_tests": [],
        "sum_entropy": -0.4451103153774498,
        "mean_entropy": -0.0015401741016520753,
        "pass_FIB_num": 4,
        "pass_FIB": [
          "Lang_59_n11.txt",
          "Lang_59_n20.txt",
          "Lang_59_n48.txt",
          "Lang_59_n5.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Appends an object to the builder padding on the right to a fixed length.\n     * The <code>toString</code> of the object is used.\n     * If the object is larger than the length, the right hand side is lost.\n     * If the object is null, null text value is used.\n     * \n     * @param obj  the object to append, null uses null text\n     * @param width  the fixed field width, zero or negative has no effect\n     * @param padChar  the pad character to use\n     * @return this, to enable chaining\n     */\n    public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n        if (width > 0) {\n            ensureCapacity(size + width);\n            String str = (obj == null ? getNullText() : obj.toString());\n            int strLen = str.length();\n            if (strLen >= width) {\n                str.getChars(0, width, buffer, size);\n            } else {\n                int padLen = width - strLen;\n                str.getChars(0, strLen, buffer, size);\n                for (int i = 0; i < padLen; i++) {\n                    buffer[size + strLen + i] = padChar;\n                }\n            }\n            size += width;\n        }\n        return this;\n    }\n",
        "index": 31,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.lang.text.StrBuilderAppendInsertTest::testLang299"
        ],
        "failing_tests": [],
        "sum_entropy": -0.4451103153774498,
        "mean_entropy": -0.0015401741016520753,
        "pass_FIB_num": 4,
        "pass_FIB": [
          "Lang_59_n11.txt",
          "Lang_59_n20.txt",
          "Lang_59_n48.txt",
          "Lang_59_n5.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Appends an object to the builder padding on the right to a fixed length.\n     * The <code>toString</code> of the object is used.\n     * If the object is larger than the length, the right hand side is lost.\n     * If the object is null, null text value is used.\n     * \n     * @param obj  the object to append, null uses null text\n     * @param width  the fixed field width, zero or negative has no effect\n     * @param padChar  the pad character to use\n     * @return this, to enable chaining\n     */\n    public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n        if (width > 0) {\n            ensureCapacity(size + width);\n            String str = (obj == null ? getNullText() : obj.toString());\n            int strLen = str.length();\n            if (strLen >= width) {\n                str.getChars(0, width, buffer, size);\n            } else {\n                int padLen = width - strLen;\n                str.getChars(0, strLen, buffer, size);\n                for (int i = 0; i < padLen; i++) {\n                    buffer[size + strLen + i] = padChar;\n                }\n            }\n            size += width;\n        }\n        return this;\n    }\n",
        "index": 6,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.lang.text.StrBuilderAppendInsertTest::testLang299"
        ],
        "failing_tests": [],
        "sum_entropy": -0.4533807296375696,
        "mean_entropy": -0.0015687914520331127,
        "pass_FIB_num": 4,
        "pass_FIB": [
          "Lang_59_n11.txt",
          "Lang_59_n20.txt",
          "Lang_59_n48.txt",
          "Lang_59_n5.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Appends an object to the builder padding on the right to a fixed length.\n     * The <code>toString</code> of the object is used.\n     * If the object is larger than the length, the right hand side is lost.\n     * If the object is null, null text value is used.\n     * \n     * @param obj  the object to append, null uses null text\n     * @param width  the fixed field width, zero or negative has no effect\n     * @param padChar  the pad character to use\n     * @return this, to enable chaining\n     */\n    public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n        if (width > 0) {\n            ensureCapacity(size + width);\n            String str = (obj == null ? getNullText() : obj.toString());\n            int strLen = str.length();\n            if (strLen >= width) {\n                str.getChars(0, width, buffer, size);\n            } else {\n                int padLen = width - strLen;\n                str.getChars(0, strLen, buffer, size);\n                for (int i = 0; i < padLen; i++) {\n                    buffer[size + strLen + i] = padChar;\n                }\n            }\n            size += width;\n        }\n        return this;\n    }\n",
        "index": 7,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.lang.text.StrBuilderAppendInsertTest::testLang299"
        ],
        "failing_tests": [],
        "sum_entropy": -0.4533807296375696,
        "mean_entropy": -0.0015687914520331127,
        "pass_FIB_num": 4,
        "pass_FIB": [
          "Lang_59_n11.txt",
          "Lang_59_n20.txt",
          "Lang_59_n48.txt",
          "Lang_59_n5.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Appends an object to the builder padding on the right to a fixed length.\n     * The <code>toString</code> of the object is used.\n     * If the object is larger than the length, the right hand side is lost.\n     * If the object is null, null text value is used.\n     * \n     * @param obj  the object to append, null uses null text\n     * @param width  the fixed field width, zero or negative has no effect\n     * @param padChar  the pad character to use\n     * @return this, to enable chaining\n     */\n    public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n        if (width > 0) {\n            ensureCapacity(size + width);\n            String str = (obj == null ? getNullText() : obj.toString());\n            int strLen = str.length();\n            if (strLen >= width) {\n                str.getChars(0, width, buffer, size);\n            } else {\n                int padLen = width - strLen;\n                str.getChars(0, strLen, buffer, size);\n                for (int i = 0; i < padLen; i++) {\n                    buffer[size + strLen + i] = padChar;\n                }\n            }\n            size += width;\n        }\n        return this;\n    }\n",
        "index": 8,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.lang.text.StrBuilderAppendInsertTest::testLang299"
        ],
        "failing_tests": [],
        "sum_entropy": -0.4533807296375696,
        "mean_entropy": -0.0015687914520331127,
        "pass_FIB_num": 4,
        "pass_FIB": [
          "Lang_59_n11.txt",
          "Lang_59_n20.txt",
          "Lang_59_n48.txt",
          "Lang_59_n5.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Appends an object to the builder padding on the right to a fixed length.\n     * The <code>toString</code> of the object is used.\n     * If the object is larger than the length, the right hand side is lost.\n     * If the object is null, null text value is used.\n     * \n     * @param obj  the object to append, null uses null text\n     * @param width  the fixed field width, zero or negative has no effect\n     * @param padChar  the pad character to use\n     * @return this, to enable chaining\n     */\n    public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n        if (width > 0) {\n            ensureCapacity(size + width);\n            String str = (obj == null ? getNullText() : obj.toString());\n            int strLen = str.length();\n            if (strLen >= width) {\n                str.getChars(0, width, buffer, size);\n            } else {\n                int padLen = width - strLen;\n                str.getChars(0, strLen, buffer, size);\n                for (int i = 0; i < padLen; i++) {\n                    buffer[size + strLen + i] = padChar;\n                }\n            }\n            size += width;\n        }\n        return this;\n    }\n",
        "index": 9,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.lang.text.StrBuilderAppendInsertTest::testLang299"
        ],
        "failing_tests": [],
        "sum_entropy": -0.4533807296375696,
        "mean_entropy": -0.0015687914520331127,
        "pass_FIB_num": 4,
        "pass_FIB": [
          "Lang_59_n11.txt",
          "Lang_59_n20.txt",
          "Lang_59_n48.txt",
          "Lang_59_n5.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Appends an object to the builder padding on the right to a fixed length.\n     * The <code>toString</code> of the object is used.\n     * If the object is larger than the length, the right hand side is lost.\n     * If the object is null, null text value is used.\n     * \n     * @param obj  the object to append, null uses null text\n     * @param width  the fixed field width, zero or negative has no effect\n     * @param padChar  the pad character to use\n     * @return this, to enable chaining\n     */\n    public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n        if (width > 0) {\n            ensureCapacity(size + width);\n            String str = (obj == null ? getNullText() : obj.toString());\n            int strLen = str.length();\n            if (strLen >= width) {\n                str.getChars(0, width, buffer, size);\n            } else {\n                int padLen = width - strLen;\n                str.getChars(0, strLen, buffer, size);\n                for (int i = 0; i < padLen; i++) {\n                    buffer[size + strLen + i] = padChar;\n                }\n            }\n            size += width;\n        }\n        return this;\n    }\n",
        "index": 22,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.lang.text.StrBuilderAppendInsertTest::testLang299"
        ],
        "failing_tests": [],
        "sum_entropy": -0.4551727875727098,
        "mean_entropy": -0.0015749923445422483,
        "pass_FIB_num": 4,
        "pass_FIB": [
          "Lang_59_n11.txt",
          "Lang_59_n20.txt",
          "Lang_59_n48.txt",
          "Lang_59_n5.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n        if (width > 0) {\n            ensureCapacity(size + width);\n            String str = (obj == null ? getNullText() : obj.toString());\n            int strLen = str.length();\n            if (strLen >= width) {\n                str.getChars(0, width, buffer, size);\n            } else {\n                int padLen = width - strLen;\n                str.getChars(0, strLen, buffer, size);\n                for (int i = 0; i < padLen; i++) {\n                    buffer[size + strLen + i] = padChar;\n                }\n            }\n            size += width;\n        }\n        return this;\n    }\n",
        "index": 10,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.lang.text.StrBuilderAppendInsertTest::testLang299"
        ],
        "failing_tests": [],
        "sum_entropy": -2.3173107898463527,
        "mean_entropy": -0.014574281697146873,
        "pass_FIB_num": 4,
        "pass_FIB": [
          "Lang_59_n11.txt",
          "Lang_59_n20.txt",
          "Lang_59_n48.txt",
          "Lang_59_n5.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n        if (width > 0) {\n            ensureCapacity(size + width);\n            String str = (obj == null ? getNullText() : obj.toString());\n            int strLen = str.length();\n            if (strLen >= width) {\n                str.getChars(0, width, buffer, size);\n            } else {\n                int padLen = width - strLen;\n                str.getChars(0, strLen, buffer, size);\n                for (int i = 0; i < padLen; i++) {\n                    buffer[size + strLen + i] = padChar;\n                }\n            }\n            size += width;\n        }\n        return this;\n    }\n",
        "index": 11,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.lang.text.StrBuilderAppendInsertTest::testLang299"
        ],
        "failing_tests": [],
        "sum_entropy": -2.3173107898463527,
        "mean_entropy": -0.014574281697146873,
        "pass_FIB_num": 4,
        "pass_FIB": [
          "Lang_59_n11.txt",
          "Lang_59_n20.txt",
          "Lang_59_n48.txt",
          "Lang_59_n5.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n        if (width > 0) {\n            ensureCapacity(size + width);\n            String str = (obj == null ? getNullText() : obj.toString());\n            int strLen = str.length();\n            if (strLen >= width) {\n                str.getChars(0, width, buffer, size);\n            } else {\n                int padLen = width - strLen;\n                str.getChars(0, strLen, buffer, size);\n                for (int i = 0; i < padLen; i++) {\n                    buffer[size + strLen + i] = padChar;\n                }\n            }\n            size += width;\n        }\n        return this;\n    }\n",
        "index": 41,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.lang.text.StrBuilderAppendInsertTest::testLang299"
        ],
        "failing_tests": [],
        "sum_entropy": -2.318570679316352,
        "mean_entropy": -0.014582205530291522,
        "pass_FIB_num": 4,
        "pass_FIB": [
          "Lang_59_n11.txt",
          "Lang_59_n20.txt",
          "Lang_59_n48.txt",
          "Lang_59_n5.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Appends an object to the builder padding on the right to a fixed length.\n     * The <code>toString</code> of the object is used.\n     * If the object is larger than the length, the right hand side is lost.\n     * If the object is null, null text value is used.\n     * \n     * @param obj  the object to append, null uses null text\n     * @param width  the fixed field width, zero or negative has no effect\n     * @param padChar  the pad character to use\n     * @return this, to enable chaining\n     */\n    public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n        if (width > 0) {\n            ensureCapacity(size + width);\n            String str = (obj == null ? getNullText() : obj.toString());\n            int strLen = str.length();\n            if (strLen >= width) {\n                str.getChars(0, width, buffer, size); // Fixing the bug here\n            } else {\n                int padLen = width - strLen;\n                str.getChars(0, strLen, buffer, size);\n                for (int i = 0; i < padLen; i++) {\n                    buffer[size + strLen + i] = padChar;\n                }\n            }\n            size += width;\n        }\n        return this;\n    }\n",
        "index": 33,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.lang.text.StrBuilderAppendInsertTest::testLang299"
        ],
        "failing_tests": [],
        "sum_entropy": -8.311124390021996,
        "mean_entropy": -0.0280781229392635,
        "pass_FIB_num": 4,
        "pass_FIB": [
          "Lang_59_n11.txt",
          "Lang_59_n20.txt",
          "Lang_59_n48.txt",
          "Lang_59_n5.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n        if (width > 0) {\n            ensureCapacity(size + width);\n            String str = (obj == null ? getNullText() : obj.toString());\n            int strLen = str.length();\n            if (strLen >= width) {\n                str.getChars(0, width, buffer, size);  // Fixed the bug here\n            } else {\n                int padLen = width - strLen;\n                str.getChars(0, strLen, buffer, size);\n                for (int i = 0; i < padLen; i++) {\n                    buffer[size + strLen + i] = padChar;\n                }\n            }\n            size += width;\n        }\n        return this;\n    }\n",
        "index": 38,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.lang.text.StrBuilderAppendInsertTest::testLang299"
        ],
        "failing_tests": [],
        "sum_entropy": -8.276010177880181,
        "mean_entropy": -0.0498554829992782,
        "pass_FIB_num": 4,
        "pass_FIB": [
          "Lang_59_n11.txt",
          "Lang_59_n20.txt",
          "Lang_59_n48.txt",
          "Lang_59_n5.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      }
    ]
  }
}