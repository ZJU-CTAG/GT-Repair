{
  "Jsoup_40_src/main/java/org/jsoup/nodes/DocumentType.java_12_26": {
    "patches": [
      {
        "patch": "\n    /**\n     * Create a new doctype element.\n     * @param name the doctype's name\n     * @param publicId the doctype's public ID\n     * @param systemId the doctype's system ID\n     * @param baseUri the doctype's base URI\n     */\n    public DocumentType(String name, String publicId, String systemId, String baseUri) {\n        super(baseUri);\n\n        Validate.notNull(name);\n        attr(\"name\", name);\n        attr(\"publicId\", publicId);\n        attr(\"systemId\", systemId);\n    }\n",
        "index": 23,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 17,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.DocumentTypeTest::constructorValidationOkWithBlankName",
          "org.jsoup.parser.HtmlParserTest::handlesInvalidDoctypes"
        ],
        "failing_tests": [],
        "sum_entropy": -2.4677675981835305,
        "mean_entropy": -0.020394773538706865,
        "pass_FIB_num": 20,
        "pass_FIB": [
          "Jsoup_40_n27.txt",
          "Jsoup_40_n33.txt",
          "Jsoup_40_n45.txt",
          "Jsoup_40_n6.txt",
          "Jsoup_40_n8.txt",
          "Jsoup_40_n10.txt",
          "Jsoup_40_n18.txt",
          "Jsoup_40_n46.txt",
          "Jsoup_40_n49.txt",
          "Jsoup_40_n13.txt",
          "Jsoup_40_n44.txt",
          "Jsoup_40_n3.txt",
          "Jsoup_40_n47.txt",
          "Jsoup_40_n41.txt",
          "Jsoup_40_n9.txt",
          "Jsoup_40_n25.txt",
          "Jsoup_40_n42.txt",
          "Jsoup_40_n15.txt",
          "Jsoup_40_n24.txt",
          "Jsoup_40_n14.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "wrong"
      },
      {
        "patch": "\n    /**\n     * Create a new doctype element.\n     * @param name the doctype's name\n     * @param publicId the doctype's public ID\n     * @param systemId the doctype's system ID\n     * @param baseUri the doctype's base URI\n     */\n    public DocumentType(String name, String publicId, String systemId, String baseUri) {\n        super(baseUri);\n\n        Validate.notNull(name);\n        attr(\"name\", name);\n        attr(\"publicId\", publicId);\n        attr(\"systemId\", systemId);\n    }\n",
        "index": 24,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 17,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.DocumentTypeTest::constructorValidationOkWithBlankName",
          "org.jsoup.parser.HtmlParserTest::handlesInvalidDoctypes"
        ],
        "failing_tests": [],
        "sum_entropy": -2.4677675981835305,
        "mean_entropy": -0.020394773538706865,
        "pass_FIB_num": 20,
        "pass_FIB": [
          "Jsoup_40_n27.txt",
          "Jsoup_40_n33.txt",
          "Jsoup_40_n45.txt",
          "Jsoup_40_n6.txt",
          "Jsoup_40_n8.txt",
          "Jsoup_40_n10.txt",
          "Jsoup_40_n18.txt",
          "Jsoup_40_n46.txt",
          "Jsoup_40_n49.txt",
          "Jsoup_40_n13.txt",
          "Jsoup_40_n44.txt",
          "Jsoup_40_n3.txt",
          "Jsoup_40_n47.txt",
          "Jsoup_40_n41.txt",
          "Jsoup_40_n9.txt",
          "Jsoup_40_n25.txt",
          "Jsoup_40_n42.txt",
          "Jsoup_40_n15.txt",
          "Jsoup_40_n24.txt",
          "Jsoup_40_n14.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "wrong"
      },
      {
        "patch": "\n    /**\n     * Create a new doctype element.\n     * @param name the doctype's name\n     * @param publicId the doctype's public ID\n     * @param systemId the doctype's system ID\n     * @param baseUri the doctype's base URI\n     */\n    public DocumentType(String name, String publicId, String systemId, String baseUri) {\n        super(baseUri);\n\n        Validate.notNull(name);\n        attr(\"name\", name);\n        attr(\"publicId\", publicId);\n        attr(\"systemId\", systemId);\n    }\n",
        "index": 30,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 17,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.DocumentTypeTest::constructorValidationOkWithBlankName",
          "org.jsoup.parser.HtmlParserTest::handlesInvalidDoctypes"
        ],
        "failing_tests": [],
        "sum_entropy": -2.4677675981835305,
        "mean_entropy": -0.020394773538706865,
        "pass_FIB_num": 20,
        "pass_FIB": [
          "Jsoup_40_n27.txt",
          "Jsoup_40_n33.txt",
          "Jsoup_40_n45.txt",
          "Jsoup_40_n6.txt",
          "Jsoup_40_n8.txt",
          "Jsoup_40_n10.txt",
          "Jsoup_40_n18.txt",
          "Jsoup_40_n46.txt",
          "Jsoup_40_n49.txt",
          "Jsoup_40_n13.txt",
          "Jsoup_40_n44.txt",
          "Jsoup_40_n3.txt",
          "Jsoup_40_n47.txt",
          "Jsoup_40_n41.txt",
          "Jsoup_40_n9.txt",
          "Jsoup_40_n25.txt",
          "Jsoup_40_n42.txt",
          "Jsoup_40_n15.txt",
          "Jsoup_40_n24.txt",
          "Jsoup_40_n14.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "wrong"
      },
      {
        "patch": "\n    /**\n     * Create a new doctype element.\n     * @param name the doctype's name\n     * @param publicId the doctype's public ID\n     * @param systemId the doctype's system ID\n     * @param baseUri the doctype's base URI\n     */\n    public DocumentType(String name, String publicId, String systemId, String baseUri) {\n        super(baseUri);\n\n        Validate.notNull(name);\n        attr(\"name\", name);\n        attr(\"publicId\", publicId);\n        attr(\"systemId\", systemId);\n    }\n",
        "index": 95,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 17,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.DocumentTypeTest::constructorValidationOkWithBlankName",
          "org.jsoup.parser.HtmlParserTest::handlesInvalidDoctypes"
        ],
        "failing_tests": [],
        "sum_entropy": -2.486518388065199,
        "mean_entropy": -0.020549738744340487,
        "pass_FIB_num": 20,
        "pass_FIB": [
          "Jsoup_40_n27.txt",
          "Jsoup_40_n33.txt",
          "Jsoup_40_n45.txt",
          "Jsoup_40_n6.txt",
          "Jsoup_40_n8.txt",
          "Jsoup_40_n10.txt",
          "Jsoup_40_n18.txt",
          "Jsoup_40_n46.txt",
          "Jsoup_40_n49.txt",
          "Jsoup_40_n13.txt",
          "Jsoup_40_n44.txt",
          "Jsoup_40_n3.txt",
          "Jsoup_40_n47.txt",
          "Jsoup_40_n41.txt",
          "Jsoup_40_n9.txt",
          "Jsoup_40_n25.txt",
          "Jsoup_40_n42.txt",
          "Jsoup_40_n15.txt",
          "Jsoup_40_n24.txt",
          "Jsoup_40_n14.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "wrong"
      },
      {
        "patch": "\n    /**\n     * Create a new doctype element.\n     * @param name the doctype's name\n     * @param publicId the doctype's public ID\n     * @param systemId the doctype's system ID\n     * @param baseUri the doctype's base URI\n     */\n    public DocumentType(String name, String publicId, String systemId, String baseUri) {\n        super(baseUri);\n\n        Validate.notNull(name);\n        attr(\"name\", name);\n        attr(\"publicId\", publicId);\n        attr(\"systemId\", systemId);\n    }\n",
        "index": 97,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 17,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.DocumentTypeTest::constructorValidationOkWithBlankName",
          "org.jsoup.parser.HtmlParserTest::handlesInvalidDoctypes"
        ],
        "failing_tests": [],
        "sum_entropy": -2.59539703101698,
        "mean_entropy": -0.02144956223980975,
        "pass_FIB_num": 20,
        "pass_FIB": [
          "Jsoup_40_n27.txt",
          "Jsoup_40_n33.txt",
          "Jsoup_40_n45.txt",
          "Jsoup_40_n6.txt",
          "Jsoup_40_n8.txt",
          "Jsoup_40_n10.txt",
          "Jsoup_40_n18.txt",
          "Jsoup_40_n46.txt",
          "Jsoup_40_n49.txt",
          "Jsoup_40_n13.txt",
          "Jsoup_40_n44.txt",
          "Jsoup_40_n3.txt",
          "Jsoup_40_n47.txt",
          "Jsoup_40_n41.txt",
          "Jsoup_40_n9.txt",
          "Jsoup_40_n25.txt",
          "Jsoup_40_n42.txt",
          "Jsoup_40_n15.txt",
          "Jsoup_40_n24.txt",
          "Jsoup_40_n14.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "wrong"
      },
      {
        "patch": "\n    /**\n     * Create a new doctype element.\n     * @param name the doctype's name\n     * @param publicId the doctype's public ID\n     * @param systemId the doctype's system ID\n     * @param baseUri the doctype's base URI\n     */\n    public DocumentType(String name, String publicId, String systemId, String baseUri) {\n        super(baseUri);\n\n        Validate.notNull(name);\n        attr(\"name\", name);\n        attr(\"publicId\", publicId);\n        attr(\"systemId\", systemId);\n    }\n",
        "index": 32,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 17,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.DocumentTypeTest::constructorValidationOkWithBlankName",
          "org.jsoup.parser.HtmlParserTest::handlesInvalidDoctypes"
        ],
        "failing_tests": [],
        "sum_entropy": -2.6649557385181506,
        "mean_entropy": -0.022024427591059097,
        "pass_FIB_num": 20,
        "pass_FIB": [
          "Jsoup_40_n27.txt",
          "Jsoup_40_n33.txt",
          "Jsoup_40_n45.txt",
          "Jsoup_40_n6.txt",
          "Jsoup_40_n8.txt",
          "Jsoup_40_n10.txt",
          "Jsoup_40_n18.txt",
          "Jsoup_40_n46.txt",
          "Jsoup_40_n49.txt",
          "Jsoup_40_n13.txt",
          "Jsoup_40_n44.txt",
          "Jsoup_40_n3.txt",
          "Jsoup_40_n47.txt",
          "Jsoup_40_n41.txt",
          "Jsoup_40_n9.txt",
          "Jsoup_40_n25.txt",
          "Jsoup_40_n42.txt",
          "Jsoup_40_n15.txt",
          "Jsoup_40_n24.txt",
          "Jsoup_40_n14.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "wrong"
      },
      {
        "patch": "\n    /**\n     * Create a new doctype element.\n     * @param name the doctype's name\n     * @param publicId the doctype's public ID\n     * @param systemId the doctype's system ID\n     * @param baseUri the doctype's base URI\n     */\n    public DocumentType(String name, String publicId, String systemId, String baseUri) {\n        super(baseUri);\n\n        Validate.notNull(name);\n        attr(\"name\", name);\n        attr(\"publicId\", publicId);\n        attr(\"systemId\", systemId);\n    }\n",
        "index": 75,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 17,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.DocumentTypeTest::constructorValidationOkWithBlankName",
          "org.jsoup.parser.HtmlParserTest::handlesInvalidDoctypes"
        ],
        "failing_tests": [],
        "sum_entropy": -3.075441741177071,
        "mean_entropy": -0.02541687389402538,
        "pass_FIB_num": 20,
        "pass_FIB": [
          "Jsoup_40_n27.txt",
          "Jsoup_40_n33.txt",
          "Jsoup_40_n45.txt",
          "Jsoup_40_n6.txt",
          "Jsoup_40_n8.txt",
          "Jsoup_40_n10.txt",
          "Jsoup_40_n18.txt",
          "Jsoup_40_n46.txt",
          "Jsoup_40_n49.txt",
          "Jsoup_40_n13.txt",
          "Jsoup_40_n44.txt",
          "Jsoup_40_n3.txt",
          "Jsoup_40_n47.txt",
          "Jsoup_40_n41.txt",
          "Jsoup_40_n9.txt",
          "Jsoup_40_n25.txt",
          "Jsoup_40_n42.txt",
          "Jsoup_40_n15.txt",
          "Jsoup_40_n24.txt",
          "Jsoup_40_n14.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "wrong"
      },
      {
        "patch": "\n    /**\n     * Create a new doctype element.\n     * @param name the doctype's name\n     * @param publicId the doctype's public ID\n     * @param systemId the doctype's system ID\n     * @param baseUri the doctype's base URI\n     */\n    public DocumentType(String name, String publicId, String systemId, String baseUri) {\n        super(baseUri);\n\n        Validate.notNull(name);\n        attr(\"name\", name);\n        attr(\"publicId\", publicId);\n        attr(\"systemId\", systemId);\n    }\n",
        "index": 76,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 17,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.DocumentTypeTest::constructorValidationOkWithBlankName",
          "org.jsoup.parser.HtmlParserTest::handlesInvalidDoctypes"
        ],
        "failing_tests": [],
        "sum_entropy": -3.075441741177071,
        "mean_entropy": -0.02541687389402538,
        "pass_FIB_num": 20,
        "pass_FIB": [
          "Jsoup_40_n27.txt",
          "Jsoup_40_n33.txt",
          "Jsoup_40_n45.txt",
          "Jsoup_40_n6.txt",
          "Jsoup_40_n8.txt",
          "Jsoup_40_n10.txt",
          "Jsoup_40_n18.txt",
          "Jsoup_40_n46.txt",
          "Jsoup_40_n49.txt",
          "Jsoup_40_n13.txt",
          "Jsoup_40_n44.txt",
          "Jsoup_40_n3.txt",
          "Jsoup_40_n47.txt",
          "Jsoup_40_n41.txt",
          "Jsoup_40_n9.txt",
          "Jsoup_40_n25.txt",
          "Jsoup_40_n42.txt",
          "Jsoup_40_n15.txt",
          "Jsoup_40_n24.txt",
          "Jsoup_40_n14.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "wrong"
      },
      {
        "patch": "\n/**\n * Create a new doctype element.\n * @param name the doctype's name\n * @param publicId the doctype's public ID\n * @param systemId the doctype's system ID\n * @param baseUri the doctype's base URI\n */\npublic DocumentType(String name, String publicId, String systemId, String baseUri) {\n    super(baseUri);\n\n    Validate.notNull(name);\n    attr(\"name\", name);\n    attr(\"publicId\", publicId);\n    attr(\"systemId\", systemId);\n}\n",
        "index": 34,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 17,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.DocumentTypeTest::constructorValidationOkWithBlankName",
          "org.jsoup.parser.HtmlParserTest::handlesInvalidDoctypes"
        ],
        "failing_tests": [],
        "sum_entropy": -3.4635332538751697,
        "mean_entropy": -0.03092440405245687,
        "pass_FIB_num": 20,
        "pass_FIB": [
          "Jsoup_40_n27.txt",
          "Jsoup_40_n33.txt",
          "Jsoup_40_n45.txt",
          "Jsoup_40_n6.txt",
          "Jsoup_40_n8.txt",
          "Jsoup_40_n10.txt",
          "Jsoup_40_n18.txt",
          "Jsoup_40_n46.txt",
          "Jsoup_40_n49.txt",
          "Jsoup_40_n13.txt",
          "Jsoup_40_n44.txt",
          "Jsoup_40_n3.txt",
          "Jsoup_40_n47.txt",
          "Jsoup_40_n41.txt",
          "Jsoup_40_n9.txt",
          "Jsoup_40_n25.txt",
          "Jsoup_40_n42.txt",
          "Jsoup_40_n15.txt",
          "Jsoup_40_n24.txt",
          "Jsoup_40_n14.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "wrong"
      },
      {
        "patch": "\n/**\n * Create a new doctype element.\n * @param name the doctype's name\n * @param publicId the doctype's public ID\n * @param systemId the doctype's system ID\n * @param baseUri the doctype's base URI\n */\npublic DocumentType(String name, String publicId, String systemId, String baseUri) {\n    super(baseUri);\n\n    Validate.notNull(name);\n    attr(\"name\", name);\n    attr(\"publicId\", publicId);\n    attr(\"systemId\", systemId);\n}\n",
        "index": 35,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 17,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.DocumentTypeTest::constructorValidationOkWithBlankName",
          "org.jsoup.parser.HtmlParserTest::handlesInvalidDoctypes"
        ],
        "failing_tests": [],
        "sum_entropy": -3.4635332538751697,
        "mean_entropy": -0.03092440405245687,
        "pass_FIB_num": 20,
        "pass_FIB": [
          "Jsoup_40_n27.txt",
          "Jsoup_40_n33.txt",
          "Jsoup_40_n45.txt",
          "Jsoup_40_n6.txt",
          "Jsoup_40_n8.txt",
          "Jsoup_40_n10.txt",
          "Jsoup_40_n18.txt",
          "Jsoup_40_n46.txt",
          "Jsoup_40_n49.txt",
          "Jsoup_40_n13.txt",
          "Jsoup_40_n44.txt",
          "Jsoup_40_n3.txt",
          "Jsoup_40_n47.txt",
          "Jsoup_40_n41.txt",
          "Jsoup_40_n9.txt",
          "Jsoup_40_n25.txt",
          "Jsoup_40_n42.txt",
          "Jsoup_40_n15.txt",
          "Jsoup_40_n24.txt",
          "Jsoup_40_n14.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "wrong"
      },
      {
        "patch": "\n/**\n * Create a new doctype element.\n * @param name the doctype's name\n * @param publicId the doctype's public ID\n * @param systemId the doctype's system ID\n * @param baseUri the doctype's base URI\n */\npublic DocumentType(String name, String publicId, String systemId, String baseUri) {\n    super(baseUri);\n\n    Validate.notNull(name);\n    attr(\"name\", name);\n    attr(\"publicId\", publicId);\n    attr(\"systemId\", systemId);\n}\n",
        "index": 44,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 17,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.DocumentTypeTest::constructorValidationOkWithBlankName",
          "org.jsoup.parser.HtmlParserTest::handlesInvalidDoctypes"
        ],
        "failing_tests": [],
        "sum_entropy": -3.4635332538751697,
        "mean_entropy": -0.03092440405245687,
        "pass_FIB_num": 20,
        "pass_FIB": [
          "Jsoup_40_n27.txt",
          "Jsoup_40_n33.txt",
          "Jsoup_40_n45.txt",
          "Jsoup_40_n6.txt",
          "Jsoup_40_n8.txt",
          "Jsoup_40_n10.txt",
          "Jsoup_40_n18.txt",
          "Jsoup_40_n46.txt",
          "Jsoup_40_n49.txt",
          "Jsoup_40_n13.txt",
          "Jsoup_40_n44.txt",
          "Jsoup_40_n3.txt",
          "Jsoup_40_n47.txt",
          "Jsoup_40_n41.txt",
          "Jsoup_40_n9.txt",
          "Jsoup_40_n25.txt",
          "Jsoup_40_n42.txt",
          "Jsoup_40_n15.txt",
          "Jsoup_40_n24.txt",
          "Jsoup_40_n14.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "wrong"
      },
      {
        "patch": "\n    /**\n     * Create a new doctype element.\n     * @param name the doctype's name\n     * @param publicId the doctype's public ID\n     * @param systemId the doctype's system ID\n     * @param baseUri the doctype's base URI\n     */\n    public DocumentType(String name, String publicId, String systemId, String baseUri) {\n        super(baseUri);\n\n        Validate.notNull(name);\n        Validate.notNull(publicId);\n        Validate.notNull(systemId);\n\n        attr(\"name\", name);\n        attr(\"publicId\", publicId);\n        attr(\"systemId\", systemId);\n    }\n",
        "index": 61,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 17,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.DocumentTypeTest::constructorValidationOkWithBlankName",
          "org.jsoup.parser.HtmlParserTest::handlesInvalidDoctypes"
        ],
        "failing_tests": [],
        "sum_entropy": -4.182338021516151,
        "mean_entropy": -0.03144615053771542,
        "pass_FIB_num": 20,
        "pass_FIB": [
          "Jsoup_40_n27.txt",
          "Jsoup_40_n33.txt",
          "Jsoup_40_n45.txt",
          "Jsoup_40_n6.txt",
          "Jsoup_40_n8.txt",
          "Jsoup_40_n10.txt",
          "Jsoup_40_n18.txt",
          "Jsoup_40_n46.txt",
          "Jsoup_40_n49.txt",
          "Jsoup_40_n13.txt",
          "Jsoup_40_n44.txt",
          "Jsoup_40_n3.txt",
          "Jsoup_40_n47.txt",
          "Jsoup_40_n41.txt",
          "Jsoup_40_n9.txt",
          "Jsoup_40_n25.txt",
          "Jsoup_40_n42.txt",
          "Jsoup_40_n15.txt",
          "Jsoup_40_n24.txt",
          "Jsoup_40_n14.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "wrong"
      },
      {
        "patch": "\n    /**\n     * Create a new doctype element.\n     * @param name the doctype's name\n     * @param publicId the doctype's public ID\n     * @param systemId the doctype's system ID\n     * @param baseUri the doctype's base URI\n     */\n    public DocumentType(String name, String publicId, String systemId, String baseUri) {\n        super(baseUri);\n\n        Validate.notNull(name);\n        Validate.notNull(publicId);\n        Validate.notNull(systemId);\n\n        attr(\"name\", name);\n        attr(\"publicId\", publicId);\n        attr(\"systemId\", systemId);\n    }\n",
        "index": 88,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 17,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.DocumentTypeTest::constructorValidationOkWithBlankName",
          "org.jsoup.parser.HtmlParserTest::handlesInvalidDoctypes"
        ],
        "failing_tests": [],
        "sum_entropy": -4.19275716557005,
        "mean_entropy": -0.03152448996669211,
        "pass_FIB_num": 20,
        "pass_FIB": [
          "Jsoup_40_n27.txt",
          "Jsoup_40_n33.txt",
          "Jsoup_40_n45.txt",
          "Jsoup_40_n6.txt",
          "Jsoup_40_n8.txt",
          "Jsoup_40_n10.txt",
          "Jsoup_40_n18.txt",
          "Jsoup_40_n46.txt",
          "Jsoup_40_n49.txt",
          "Jsoup_40_n13.txt",
          "Jsoup_40_n44.txt",
          "Jsoup_40_n3.txt",
          "Jsoup_40_n47.txt",
          "Jsoup_40_n41.txt",
          "Jsoup_40_n9.txt",
          "Jsoup_40_n25.txt",
          "Jsoup_40_n42.txt",
          "Jsoup_40_n15.txt",
          "Jsoup_40_n24.txt",
          "Jsoup_40_n14.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "wrong"
      },
      {
        "patch": "\n/**\n * Create a new doctype element.\n * @param name the doctype's name\n * @param publicId the doctype's public ID\n * @param systemId the doctype's system ID\n * @param baseUri the doctype's base URI\n */\npublic DocumentType(String name, String publicId, String systemId, String baseUri) {\n    super(baseUri);\n\n    Validate.notNull(name);\n    attr(\"name\", name);\n    attr(\"publicId\", publicId);\n    attr(\"systemId\", systemId);\n}\n",
        "index": 0,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 17,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.DocumentTypeTest::constructorValidationOkWithBlankName",
          "org.jsoup.parser.HtmlParserTest::handlesInvalidDoctypes"
        ],
        "failing_tests": [],
        "sum_entropy": -3.56038585333993,
        "mean_entropy": -0.031789159404820806,
        "pass_FIB_num": 20,
        "pass_FIB": [
          "Jsoup_40_n27.txt",
          "Jsoup_40_n33.txt",
          "Jsoup_40_n45.txt",
          "Jsoup_40_n6.txt",
          "Jsoup_40_n8.txt",
          "Jsoup_40_n10.txt",
          "Jsoup_40_n18.txt",
          "Jsoup_40_n46.txt",
          "Jsoup_40_n49.txt",
          "Jsoup_40_n13.txt",
          "Jsoup_40_n44.txt",
          "Jsoup_40_n3.txt",
          "Jsoup_40_n47.txt",
          "Jsoup_40_n41.txt",
          "Jsoup_40_n9.txt",
          "Jsoup_40_n25.txt",
          "Jsoup_40_n42.txt",
          "Jsoup_40_n15.txt",
          "Jsoup_40_n24.txt",
          "Jsoup_40_n14.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "wrong"
      },
      {
        "patch": "\n/**\n * Create a new doctype element.\n * @param name the doctype's name\n * @param publicId the doctype's public ID\n * @param systemId the doctype's system ID\n * @param baseUri the doctype's base URI\n */\npublic DocumentType(String name, String publicId, String systemId, String baseUri) {\n    super(baseUri);\n\n    Validate.notNull(name);\n    attr(\"name\", name);\n    attr(\"publicId\", publicId);\n    attr(\"systemId\", systemId);\n}\n",
        "index": 11,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 17,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.DocumentTypeTest::constructorValidationOkWithBlankName",
          "org.jsoup.parser.HtmlParserTest::handlesInvalidDoctypes"
        ],
        "failing_tests": [],
        "sum_entropy": -3.56038585333993,
        "mean_entropy": -0.031789159404820806,
        "pass_FIB_num": 20,
        "pass_FIB": [
          "Jsoup_40_n27.txt",
          "Jsoup_40_n33.txt",
          "Jsoup_40_n45.txt",
          "Jsoup_40_n6.txt",
          "Jsoup_40_n8.txt",
          "Jsoup_40_n10.txt",
          "Jsoup_40_n18.txt",
          "Jsoup_40_n46.txt",
          "Jsoup_40_n49.txt",
          "Jsoup_40_n13.txt",
          "Jsoup_40_n44.txt",
          "Jsoup_40_n3.txt",
          "Jsoup_40_n47.txt",
          "Jsoup_40_n41.txt",
          "Jsoup_40_n9.txt",
          "Jsoup_40_n25.txt",
          "Jsoup_40_n42.txt",
          "Jsoup_40_n15.txt",
          "Jsoup_40_n24.txt",
          "Jsoup_40_n14.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "wrong"
      },
      {
        "patch": "\npublic DocumentType(String name, String publicId, String systemId, String baseUri) {\n    super(baseUri);\n\n    Validate.notNull(name);\n    attr(\"name\", name);\n    attr(\"publicId\", publicId);\n    attr(\"systemId\", systemId);\n}\n",
        "index": 45,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 17,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.DocumentTypeTest::constructorValidationOkWithBlankName",
          "org.jsoup.parser.HtmlParserTest::handlesInvalidDoctypes"
        ],
        "failing_tests": [],
        "sum_entropy": -5.247703231834282,
        "mean_entropy": -0.09370898628275504,
        "pass_FIB_num": 20,
        "pass_FIB": [
          "Jsoup_40_n27.txt",
          "Jsoup_40_n33.txt",
          "Jsoup_40_n45.txt",
          "Jsoup_40_n6.txt",
          "Jsoup_40_n8.txt",
          "Jsoup_40_n10.txt",
          "Jsoup_40_n18.txt",
          "Jsoup_40_n46.txt",
          "Jsoup_40_n49.txt",
          "Jsoup_40_n13.txt",
          "Jsoup_40_n44.txt",
          "Jsoup_40_n3.txt",
          "Jsoup_40_n47.txt",
          "Jsoup_40_n41.txt",
          "Jsoup_40_n9.txt",
          "Jsoup_40_n25.txt",
          "Jsoup_40_n42.txt",
          "Jsoup_40_n15.txt",
          "Jsoup_40_n24.txt",
          "Jsoup_40_n14.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "wrong"
      },
      {
        "patch": "\n/**\n * Create a new doctype element.\n * @param name the doctype's name\n * @param publicId the doctype's public ID\n * @param systemId the doctype's system ID\n * @param baseUri the doctype's base URI\n */\npublic DocumentType(String name, String publicId, String systemId, String baseUri) {\n    super(baseUri);\n\n    if (name == null) {\n        name = \"\"; // Handle null name to prevent IllegalArgumentException\n    }\n    attr(\"name\", name);\n    attr(\"publicId\", publicId);\n    attr(\"systemId\", systemId);\n}\n",
        "index": 63,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 17,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.DocumentTypeTest::constructorValidationOkWithBlankName",
          "org.jsoup.parser.HtmlParserTest::handlesInvalidDoctypes"
        ],
        "failing_tests": [],
        "sum_entropy": -14.592253292079574,
        "mean_entropy": -0.11311824257426027,
        "pass_FIB_num": 20,
        "pass_FIB": [
          "Jsoup_40_n27.txt",
          "Jsoup_40_n33.txt",
          "Jsoup_40_n45.txt",
          "Jsoup_40_n6.txt",
          "Jsoup_40_n8.txt",
          "Jsoup_40_n10.txt",
          "Jsoup_40_n18.txt",
          "Jsoup_40_n46.txt",
          "Jsoup_40_n49.txt",
          "Jsoup_40_n13.txt",
          "Jsoup_40_n44.txt",
          "Jsoup_40_n3.txt",
          "Jsoup_40_n47.txt",
          "Jsoup_40_n41.txt",
          "Jsoup_40_n9.txt",
          "Jsoup_40_n25.txt",
          "Jsoup_40_n42.txt",
          "Jsoup_40_n15.txt",
          "Jsoup_40_n24.txt",
          "Jsoup_40_n14.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "wrong"
      },
      {
        "patch": "\n/**\n * Create a new doctype element.\n * @param name the doctype's name\n * @param publicId the doctype's public ID\n * @param systemId the doctype's system ID\n * @param baseUri the doctype's base URI\n */\npublic DocumentType(String name, String publicId, String systemId, String baseUri) {\n    super(baseUri);\n\n    // Validate that name is not empty before setting attributes\n    Validate.notNull(name, \"Name must not be null\");\n    attr(\"name\", name);\n    \n    // Set publicId and systemId\n    attr(\"publicId\", publicId);\n    attr(\"systemId\", systemId);\n}\n",
        "index": 78,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 17,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.DocumentTypeTest::constructorValidationOkWithBlankName",
          "org.jsoup.parser.HtmlParserTest::handlesInvalidDoctypes"
        ],
        "failing_tests": [],
        "sum_entropy": -19.987577608393266,
        "mean_entropy": -0.14175586956307282,
        "pass_FIB_num": 20,
        "pass_FIB": [
          "Jsoup_40_n27.txt",
          "Jsoup_40_n33.txt",
          "Jsoup_40_n45.txt",
          "Jsoup_40_n6.txt",
          "Jsoup_40_n8.txt",
          "Jsoup_40_n10.txt",
          "Jsoup_40_n18.txt",
          "Jsoup_40_n46.txt",
          "Jsoup_40_n49.txt",
          "Jsoup_40_n13.txt",
          "Jsoup_40_n44.txt",
          "Jsoup_40_n3.txt",
          "Jsoup_40_n47.txt",
          "Jsoup_40_n41.txt",
          "Jsoup_40_n9.txt",
          "Jsoup_40_n25.txt",
          "Jsoup_40_n42.txt",
          "Jsoup_40_n15.txt",
          "Jsoup_40_n24.txt",
          "Jsoup_40_n14.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "wrong"
      },
      {
        "patch": "\npublic DocumentType(String name, String publicId, String systemId, String baseUri) {\n    super(baseUri);\n\n    Validate.notNull(name); // Change to Validate.notNull to check for null instead of empty\n    attr(\"name\", name);\n    attr(\"publicId\", publicId);\n    attr(\"systemId\", systemId);\n}\n",
        "index": 4,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 17,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.DocumentTypeTest::constructorValidationOkWithBlankName",
          "org.jsoup.parser.HtmlParserTest::handlesInvalidDoctypes"
        ],
        "failing_tests": [],
        "sum_entropy": -11.394447409372294,
        "mean_entropy": -0.16513691897641006,
        "pass_FIB_num": 20,
        "pass_FIB": [
          "Jsoup_40_n27.txt",
          "Jsoup_40_n33.txt",
          "Jsoup_40_n45.txt",
          "Jsoup_40_n6.txt",
          "Jsoup_40_n8.txt",
          "Jsoup_40_n10.txt",
          "Jsoup_40_n18.txt",
          "Jsoup_40_n46.txt",
          "Jsoup_40_n49.txt",
          "Jsoup_40_n13.txt",
          "Jsoup_40_n44.txt",
          "Jsoup_40_n3.txt",
          "Jsoup_40_n47.txt",
          "Jsoup_40_n41.txt",
          "Jsoup_40_n9.txt",
          "Jsoup_40_n25.txt",
          "Jsoup_40_n42.txt",
          "Jsoup_40_n15.txt",
          "Jsoup_40_n24.txt",
          "Jsoup_40_n14.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "wrong"
      },
      {
        "patch": "\n    /**\n     * Create a new doctype element.\n     * @param name the doctype's name\n     * @param publicId the doctype's public ID\n     * @param systemId the doctype's system ID\n     * @param baseUri the doctype's base URI\n     */\n    public DocumentType(String name, String publicId, String systemId, String baseUri) {\n        super(baseUri);\n\n        // Check for empty name and handle it appropriately\n        if (name == null || name.isEmpty()) {\n            // Handle missing doctype name as per spec\n            missingDoctype();\n        } else {\n            attr(\"name\", name);\n            attr(\"publicId\", publicId);\n            attr(\"systemId\", systemId);\n        }\n    }\n\n    // Method to handle missing doctype name as per the spec\n    private void missingDoctype() {\n        // Set name, publicId, and systemId as missing\n        missing(\"name\");\n        missing(\"publicId\");\n        missing(\"systemId\");\n    }\n\n    // Method to set attribute as missing\n    private void missing(String attributeName) {\n        attributes().put(attributeName, \"\");\n    }\n",
        "index": 55,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 2,
        "passing_trigger": 2,
        "total_relevant": 17,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.DocumentTypeTest::constructorValidationOkWithBlankName",
          "org.jsoup.parser.HtmlParserTest::handlesInvalidDoctypes"
        ],
        "failing_tests": [],
        "sum_entropy": -44.83614225947888,
        "mean_entropy": -0.18527331512181358,
        "pass_FIB_num": 20,
        "pass_FIB": [
          "Jsoup_40_n27.txt",
          "Jsoup_40_n33.txt",
          "Jsoup_40_n45.txt",
          "Jsoup_40_n6.txt",
          "Jsoup_40_n8.txt",
          "Jsoup_40_n10.txt",
          "Jsoup_40_n18.txt",
          "Jsoup_40_n46.txt",
          "Jsoup_40_n49.txt",
          "Jsoup_40_n13.txt",
          "Jsoup_40_n44.txt",
          "Jsoup_40_n3.txt",
          "Jsoup_40_n47.txt",
          "Jsoup_40_n41.txt",
          "Jsoup_40_n9.txt",
          "Jsoup_40_n25.txt",
          "Jsoup_40_n42.txt",
          "Jsoup_40_n15.txt",
          "Jsoup_40_n24.txt",
          "Jsoup_40_n14.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "wrong"
      }
    ]
  }
}