{
  "Jsoup_57_src/main/java/org/jsoup/nodes/Attributes.java_114_127": {
    "patches": [
      {
        "patch": "\n    /**\n     * Remove an attribute by key. <b>Case insensitive.</b>\n     * @param key attribute key to remove\n     */\n    public void removeIgnoreCase(String key) {\n        Validate.notEmpty(key);\n        if (attributes == null)\n            return;\n        for (Iterator<Map.Entry<String, Attribute>> iter = attributes.entrySet().iterator(); iter.hasNext();) {\n            Map.Entry<String, Attribute> entry = iter.next();\n            if (entry.getKey().equalsIgnoreCase(key)) {\n                iter.remove();\n            }\n        }\n    }\n",
        "index": 34,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 21,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.ElementTest::testChainedRemoveAttributes"
        ],
        "failing_tests": [],
        "sum_entropy": -2.19167113068728,
        "mean_entropy": -0.020107074593461286,
        "pass_FIB_num": 11,
        "pass_FIB": [
          "Jsoup_57_n23.txt",
          "Jsoup_57_n14.txt",
          "Jsoup_57_n1.txt",
          "Jsoup_57_n8.txt",
          "Jsoup_57_n33.txt",
          "Jsoup_57_n4.txt",
          "Jsoup_57_n27.txt",
          "Jsoup_57_n13.txt",
          "Jsoup_57_n34.txt",
          "Jsoup_57_n10.txt",
          "Jsoup_57_n44.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Remove an attribute by key. <b>Case insensitive.</b>\n     * @param key attribute key to remove\n     */\n    public void removeIgnoreCase(String key) {\n        Validate.notEmpty(key);\n        if (attributes == null)\n            return;\n        for (Iterator<Map.Entry<String, Attribute>> iter = attributes.entrySet().iterator(); iter.hasNext();) {\n            Map.Entry<String, Attribute> entry = iter.next();\n            if (entry.getKey().equalsIgnoreCase(key)) {\n                iter.remove();\n            }\n        }\n    }\n",
        "index": 35,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 21,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.ElementTest::testChainedRemoveAttributes"
        ],
        "failing_tests": [],
        "sum_entropy": -2.19167113068728,
        "mean_entropy": -0.020107074593461286,
        "pass_FIB_num": 11,
        "pass_FIB": [
          "Jsoup_57_n23.txt",
          "Jsoup_57_n14.txt",
          "Jsoup_57_n1.txt",
          "Jsoup_57_n8.txt",
          "Jsoup_57_n33.txt",
          "Jsoup_57_n4.txt",
          "Jsoup_57_n27.txt",
          "Jsoup_57_n13.txt",
          "Jsoup_57_n34.txt",
          "Jsoup_57_n10.txt",
          "Jsoup_57_n44.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Remove an attribute by key. <b>Case insensitive.</b>\n     * @param key attribute key to remove\n     */\n    public void removeIgnoreCase(String key) {\n        Validate.notEmpty(key);\n        if (attributes == null)\n            return;\n        for (Iterator<Map.Entry<String, Attribute>> iter = attributes.entrySet().iterator(); iter.hasNext();) {\n            Map.Entry<String, Attribute> entry = iter.next();\n            if (entry.getKey().equalsIgnoreCase(key)) {\n                iter.remove();\n            }\n        }\n    }\n",
        "index": 46,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 21,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.ElementTest::testChainedRemoveAttributes"
        ],
        "failing_tests": [],
        "sum_entropy": -2.19167113068728,
        "mean_entropy": -0.020107074593461286,
        "pass_FIB_num": 11,
        "pass_FIB": [
          "Jsoup_57_n23.txt",
          "Jsoup_57_n14.txt",
          "Jsoup_57_n1.txt",
          "Jsoup_57_n8.txt",
          "Jsoup_57_n33.txt",
          "Jsoup_57_n4.txt",
          "Jsoup_57_n27.txt",
          "Jsoup_57_n13.txt",
          "Jsoup_57_n34.txt",
          "Jsoup_57_n10.txt",
          "Jsoup_57_n44.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Remove an attribute by key. <b>Case insensitive.</b>\n     * @param key attribute key to remove\n     */\n    public void removeIgnoreCase(String key) {\n        Validate.notEmpty(key);\n        if (attributes == null)\n            return;\n        for (Iterator<Map.Entry<String, Attribute>> iter = attributes.entrySet().iterator(); iter.hasNext();) {\n            Map.Entry<String, Attribute> entry = iter.next();\n            if (entry.getKey().equalsIgnoreCase(key)) {\n                iter.remove();\n            }\n        }\n    }\n",
        "index": 9,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 21,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.ElementTest::testChainedRemoveAttributes"
        ],
        "failing_tests": [],
        "sum_entropy": -2.204848615388439,
        "mean_entropy": -0.020227968948517788,
        "pass_FIB_num": 11,
        "pass_FIB": [
          "Jsoup_57_n23.txt",
          "Jsoup_57_n14.txt",
          "Jsoup_57_n1.txt",
          "Jsoup_57_n8.txt",
          "Jsoup_57_n33.txt",
          "Jsoup_57_n4.txt",
          "Jsoup_57_n27.txt",
          "Jsoup_57_n13.txt",
          "Jsoup_57_n34.txt",
          "Jsoup_57_n10.txt",
          "Jsoup_57_n44.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Remove an attribute by key. <b>Case insensitive.</b>\n     * @param key attribute key to remove\n     */\n    public void removeIgnoreCase(String key) {\n        Validate.notEmpty(key);\n        if (attributes == null)\n            return;\n        for (Iterator<Map.Entry<String, Attribute>> iter = attributes.entrySet().iterator(); iter.hasNext();) {\n            Map.Entry<String, Attribute> entry = iter.next();\n            if (entry.getKey().equalsIgnoreCase(key)) {\n                iter.remove();\n            }\n        }\n    }\n",
        "index": 12,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 21,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.ElementTest::testChainedRemoveAttributes"
        ],
        "failing_tests": [],
        "sum_entropy": -2.204848615388439,
        "mean_entropy": -0.020227968948517788,
        "pass_FIB_num": 11,
        "pass_FIB": [
          "Jsoup_57_n23.txt",
          "Jsoup_57_n14.txt",
          "Jsoup_57_n1.txt",
          "Jsoup_57_n8.txt",
          "Jsoup_57_n33.txt",
          "Jsoup_57_n4.txt",
          "Jsoup_57_n27.txt",
          "Jsoup_57_n13.txt",
          "Jsoup_57_n34.txt",
          "Jsoup_57_n10.txt",
          "Jsoup_57_n44.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Remove an attribute by key. <b>Case insensitive.</b>\n     * @param key attribute key to remove\n     */\n    public void removeIgnoreCase(String key) {\n        Validate.notEmpty(key);\n        if (attributes == null)\n            return;\n        for (Iterator<Map.Entry<String, Attribute>> iter = attributes.entrySet().iterator(); iter.hasNext();) {\n            Map.Entry<String, Attribute> entry = iter.next();\n            if (entry.getKey().equalsIgnoreCase(key)) {\n                iter.remove();\n            }\n        }\n    }\n",
        "index": 14,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 21,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.ElementTest::testChainedRemoveAttributes"
        ],
        "failing_tests": [],
        "sum_entropy": -2.204848615388439,
        "mean_entropy": -0.020227968948517788,
        "pass_FIB_num": 11,
        "pass_FIB": [
          "Jsoup_57_n23.txt",
          "Jsoup_57_n14.txt",
          "Jsoup_57_n1.txt",
          "Jsoup_57_n8.txt",
          "Jsoup_57_n33.txt",
          "Jsoup_57_n4.txt",
          "Jsoup_57_n27.txt",
          "Jsoup_57_n13.txt",
          "Jsoup_57_n34.txt",
          "Jsoup_57_n10.txt",
          "Jsoup_57_n44.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Remove an attribute by key. <b>Case insensitive.</b>\n     * @param key attribute key to remove\n     */\n    public void removeIgnoreCase(String key) {\n        Validate.notEmpty(key);\n        if (attributes == null)\n            return;\n        for (Iterator<Map.Entry<String, Attribute>> iter = attributes.entrySet().iterator(); iter.hasNext();) {\n            Map.Entry<String, Attribute> entry = iter.next();\n            if (entry.getKey().equalsIgnoreCase(key)) {\n                iter.remove();\n            }\n        }\n    }\n",
        "index": 53,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 21,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.ElementTest::testChainedRemoveAttributes"
        ],
        "failing_tests": [],
        "sum_entropy": -2.254018640222999,
        "mean_entropy": -0.02067907009378898,
        "pass_FIB_num": 11,
        "pass_FIB": [
          "Jsoup_57_n23.txt",
          "Jsoup_57_n14.txt",
          "Jsoup_57_n1.txt",
          "Jsoup_57_n8.txt",
          "Jsoup_57_n33.txt",
          "Jsoup_57_n4.txt",
          "Jsoup_57_n27.txt",
          "Jsoup_57_n13.txt",
          "Jsoup_57_n34.txt",
          "Jsoup_57_n10.txt",
          "Jsoup_57_n44.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Remove an attribute by key. <b>Case insensitive.</b>\n     * @param key attribute key to remove\n     */\n    public void removeIgnoreCase(String key) {\n        Validate.notEmpty(key);\n        if (attributes == null)\n            return;\n        for (Iterator<Map.Entry<String, Attribute>> iter = attributes.entrySet().iterator(); iter.hasNext();) {\n            Map.Entry<String, Attribute> entry = iter.next();\n            if (entry.getKey().equalsIgnoreCase(key)) {\n                iter.remove();\n            }\n        }\n    }\n",
        "index": 58,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 21,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.ElementTest::testChainedRemoveAttributes"
        ],
        "failing_tests": [],
        "sum_entropy": -2.254018640222999,
        "mean_entropy": -0.02067907009378898,
        "pass_FIB_num": 11,
        "pass_FIB": [
          "Jsoup_57_n23.txt",
          "Jsoup_57_n14.txt",
          "Jsoup_57_n1.txt",
          "Jsoup_57_n8.txt",
          "Jsoup_57_n33.txt",
          "Jsoup_57_n4.txt",
          "Jsoup_57_n27.txt",
          "Jsoup_57_n13.txt",
          "Jsoup_57_n34.txt",
          "Jsoup_57_n10.txt",
          "Jsoup_57_n44.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Remove an attribute by key. <b>Case insensitive.</b>\n     * @param key attribute key to remove\n     */\n    public void removeIgnoreCase(String key) {\n        Validate.notEmpty(key);\n        if (attributes == null)\n            return;\n        for (Iterator<Map.Entry<String, Attribute>> iter = attributes.entrySet().iterator(); iter.hasNext();) {\n            Map.Entry<String, Attribute> entry = iter.next();\n            if (entry.getKey().equalsIgnoreCase(key)) {\n                iter.remove();\n            }\n        }\n    }\n",
        "index": 59,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 21,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.ElementTest::testChainedRemoveAttributes"
        ],
        "failing_tests": [],
        "sum_entropy": -2.254018640222999,
        "mean_entropy": -0.02067907009378898,
        "pass_FIB_num": 11,
        "pass_FIB": [
          "Jsoup_57_n23.txt",
          "Jsoup_57_n14.txt",
          "Jsoup_57_n1.txt",
          "Jsoup_57_n8.txt",
          "Jsoup_57_n33.txt",
          "Jsoup_57_n4.txt",
          "Jsoup_57_n27.txt",
          "Jsoup_57_n13.txt",
          "Jsoup_57_n34.txt",
          "Jsoup_57_n10.txt",
          "Jsoup_57_n44.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Remove an attribute by key. <b>Case insensitive.</b>\n     * @param key attribute key to remove\n     */\n    public void removeIgnoreCase(String key) {\n        Validate.notEmpty(key);\n        if (attributes == null)\n            return;\n        for (Iterator<Map.Entry<String, Attribute>> iter = attributes.entrySet().iterator(); iter.hasNext();) {\n            Map.Entry<String, Attribute> entry = iter.next();\n            if (entry.getKey().equalsIgnoreCase(key)) {\n                iter.remove();\n            }\n        }\n    }\n",
        "index": 67,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 21,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.ElementTest::testChainedRemoveAttributes"
        ],
        "failing_tests": [],
        "sum_entropy": -2.2700674032165398,
        "mean_entropy": -0.020826306451527887,
        "pass_FIB_num": 11,
        "pass_FIB": [
          "Jsoup_57_n23.txt",
          "Jsoup_57_n14.txt",
          "Jsoup_57_n1.txt",
          "Jsoup_57_n8.txt",
          "Jsoup_57_n33.txt",
          "Jsoup_57_n4.txt",
          "Jsoup_57_n27.txt",
          "Jsoup_57_n13.txt",
          "Jsoup_57_n34.txt",
          "Jsoup_57_n10.txt",
          "Jsoup_57_n44.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Remove an attribute by key. <b>Case insensitive.</b>\n     * @param key attribute key to remove\n     */\n    public void removeIgnoreCase(String key) {\n        Validate.notEmpty(key);\n        if (attributes == null)\n            return;\n        for (Iterator<Map.Entry<String, Attribute>> iter = attributes.entrySet().iterator(); iter.hasNext();) {\n            Map.Entry<String, Attribute> entry = iter.next();\n            if (entry.getKey().equalsIgnoreCase(key)) {\n                iter.remove();\n            }\n        }\n    }\n",
        "index": 72,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 21,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.ElementTest::testChainedRemoveAttributes"
        ],
        "failing_tests": [],
        "sum_entropy": -2.2700674032165398,
        "mean_entropy": -0.020826306451527887,
        "pass_FIB_num": 11,
        "pass_FIB": [
          "Jsoup_57_n23.txt",
          "Jsoup_57_n14.txt",
          "Jsoup_57_n1.txt",
          "Jsoup_57_n8.txt",
          "Jsoup_57_n33.txt",
          "Jsoup_57_n4.txt",
          "Jsoup_57_n27.txt",
          "Jsoup_57_n13.txt",
          "Jsoup_57_n34.txt",
          "Jsoup_57_n10.txt",
          "Jsoup_57_n44.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Remove an attribute by key. <b>Case insensitive.</b>\n     * @param key attribute key to remove\n     */\n    public void removeIgnoreCase(String key) {\n        Validate.notEmpty(key);\n        if (attributes == null)\n            return;\n        for (Iterator<Map.Entry<String, Attribute>> iter = attributes.entrySet().iterator(); iter.hasNext();) {\n            Map.Entry<String, Attribute> entry = iter.next();\n            if (entry.getKey().equalsIgnoreCase(key)) {\n                iter.remove();\n            }\n        }\n    }\n",
        "index": 73,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 21,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.ElementTest::testChainedRemoveAttributes"
        ],
        "failing_tests": [],
        "sum_entropy": -2.2700674032165398,
        "mean_entropy": -0.020826306451527887,
        "pass_FIB_num": 11,
        "pass_FIB": [
          "Jsoup_57_n23.txt",
          "Jsoup_57_n14.txt",
          "Jsoup_57_n1.txt",
          "Jsoup_57_n8.txt",
          "Jsoup_57_n33.txt",
          "Jsoup_57_n4.txt",
          "Jsoup_57_n27.txt",
          "Jsoup_57_n13.txt",
          "Jsoup_57_n34.txt",
          "Jsoup_57_n10.txt",
          "Jsoup_57_n44.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Remove an attribute by key. <b>Case insensitive.</b>\n     * @param key attribute key to remove\n     */\n    public void removeIgnoreCase(String key) {\n        Validate.notEmpty(key);\n        if (attributes == null)\n            return;\n        for (Iterator<Map.Entry<String, Attribute>> iter = attributes.entrySet().iterator(); iter.hasNext();) {\n            Map.Entry<String, Attribute> entry = iter.next();\n            if (entry.getKey().equalsIgnoreCase(key)) {\n                iter.remove();\n            }\n        }\n    }\n",
        "index": 77,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 21,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.ElementTest::testChainedRemoveAttributes"
        ],
        "failing_tests": [],
        "sum_entropy": -2.2700674032165398,
        "mean_entropy": -0.020826306451527887,
        "pass_FIB_num": 11,
        "pass_FIB": [
          "Jsoup_57_n23.txt",
          "Jsoup_57_n14.txt",
          "Jsoup_57_n1.txt",
          "Jsoup_57_n8.txt",
          "Jsoup_57_n33.txt",
          "Jsoup_57_n4.txt",
          "Jsoup_57_n27.txt",
          "Jsoup_57_n13.txt",
          "Jsoup_57_n34.txt",
          "Jsoup_57_n10.txt",
          "Jsoup_57_n44.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Remove an attribute by key. <b>Case insensitive.</b>\n     * @param key attribute key to remove\n     */\n    public void removeIgnoreCase(String key) {\n        Validate.notEmpty(key);\n        if (attributes == null)\n            return;\n        for (Iterator<Map.Entry<String, Attribute>> iter = attributes.entrySet().iterator(); iter.hasNext();) {\n            Map.Entry<String, Attribute> entry = iter.next();\n            if (entry.getKey().equalsIgnoreCase(key)) {\n                iter.remove();\n            }\n        }\n    }\n",
        "index": 91,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 21,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.ElementTest::testChainedRemoveAttributes"
        ],
        "failing_tests": [],
        "sum_entropy": -2.3408996056410807,
        "mean_entropy": -0.021476143171019087,
        "pass_FIB_num": 11,
        "pass_FIB": [
          "Jsoup_57_n23.txt",
          "Jsoup_57_n14.txt",
          "Jsoup_57_n1.txt",
          "Jsoup_57_n8.txt",
          "Jsoup_57_n33.txt",
          "Jsoup_57_n4.txt",
          "Jsoup_57_n27.txt",
          "Jsoup_57_n13.txt",
          "Jsoup_57_n34.txt",
          "Jsoup_57_n10.txt",
          "Jsoup_57_n44.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Remove an attribute by key. <b>Case insensitive.</b>\n     * @param key attribute key to remove\n     */\n    public void removeIgnoreCase(String key) {\n        Validate.notEmpty(key);\n        if (attributes == null)\n            return;\n        for (Iterator<Map.Entry<String, Attribute>> iter = attributes.entrySet().iterator(); iter.hasNext();) {\n            Map.Entry<String, Attribute> entry = iter.next();\n            if (entry.getKey().equalsIgnoreCase(key)) {\n                iter.remove();\n            }\n        }\n    }\n",
        "index": 92,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 21,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.ElementTest::testChainedRemoveAttributes"
        ],
        "failing_tests": [],
        "sum_entropy": -2.3408996056410807,
        "mean_entropy": -0.021476143171019087,
        "pass_FIB_num": 11,
        "pass_FIB": [
          "Jsoup_57_n23.txt",
          "Jsoup_57_n14.txt",
          "Jsoup_57_n1.txt",
          "Jsoup_57_n8.txt",
          "Jsoup_57_n33.txt",
          "Jsoup_57_n4.txt",
          "Jsoup_57_n27.txt",
          "Jsoup_57_n13.txt",
          "Jsoup_57_n34.txt",
          "Jsoup_57_n10.txt",
          "Jsoup_57_n44.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Remove an attribute by key. <b>Case insensitive.</b>\n     * @param key attribute key to remove\n     */\n    public void removeIgnoreCase(String key) {\n        Validate.notEmpty(key);\n        if (attributes == null) {\n            return;\n        }\n\n        Iterator<Map.Entry<String, Attribute>> iter = attributes.entrySet().iterator();\n        while (iter.hasNext()) {\n            Map.Entry<String, Attribute> entry = iter.next();\n            if (entry.getKey().equalsIgnoreCase(key)) {\n                iter.remove();\n            }\n        }\n    }\n",
        "index": 6,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 21,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.ElementTest::testChainedRemoveAttributes"
        ],
        "failing_tests": [],
        "sum_entropy": -6.596326798407924,
        "mean_entropy": -0.058374573437238265,
        "pass_FIB_num": 11,
        "pass_FIB": [
          "Jsoup_57_n23.txt",
          "Jsoup_57_n14.txt",
          "Jsoup_57_n1.txt",
          "Jsoup_57_n8.txt",
          "Jsoup_57_n33.txt",
          "Jsoup_57_n4.txt",
          "Jsoup_57_n27.txt",
          "Jsoup_57_n13.txt",
          "Jsoup_57_n34.txt",
          "Jsoup_57_n10.txt",
          "Jsoup_57_n44.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    public void removeIgnoreCase(String key) {\n        Validate.notEmpty(key);\n        if (attributes == null)\n            return;\n        for (Iterator<Map.Entry<String, Attribute>> iter = attributes.entrySet().iterator(); iter.hasNext();) {\n            Map.Entry<String, Attribute> entry = iter.next();\n            if (entry.getKey().equalsIgnoreCase(key)) {\n                iter.remove();\n            }\n        }\n    }\n",
        "index": 49,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 21,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.ElementTest::testChainedRemoveAttributes"
        ],
        "failing_tests": [],
        "sum_entropy": -4.675878966431999,
        "mean_entropy": -0.0591883413472405,
        "pass_FIB_num": 11,
        "pass_FIB": [
          "Jsoup_57_n23.txt",
          "Jsoup_57_n14.txt",
          "Jsoup_57_n1.txt",
          "Jsoup_57_n8.txt",
          "Jsoup_57_n33.txt",
          "Jsoup_57_n4.txt",
          "Jsoup_57_n27.txt",
          "Jsoup_57_n13.txt",
          "Jsoup_57_n34.txt",
          "Jsoup_57_n10.txt",
          "Jsoup_57_n44.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n/**\n * Remove an attribute by key. <b>Case insensitive.</b>\n * @param key attribute key to remove\n */\npublic void removeIgnoreCase(String key) {\n    Validate.notEmpty(key);\n    if (attributes == null)\n        return;\n    for (Iterator<Map.Entry<String, Attribute>> it = attributes.entrySet().iterator(); it.hasNext(); ) {\n        Map.Entry<String, Attribute> entry = it.next();\n        if (entry.getKey().equalsIgnoreCase(key))\n            it.remove();\n    }\n}\n",
        "index": 24,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 21,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.ElementTest::testChainedRemoveAttributes"
        ],
        "failing_tests": [],
        "sum_entropy": -6.064304334391001,
        "mean_entropy": -0.06004261717218813,
        "pass_FIB_num": 11,
        "pass_FIB": [
          "Jsoup_57_n23.txt",
          "Jsoup_57_n14.txt",
          "Jsoup_57_n1.txt",
          "Jsoup_57_n8.txt",
          "Jsoup_57_n33.txt",
          "Jsoup_57_n4.txt",
          "Jsoup_57_n27.txt",
          "Jsoup_57_n13.txt",
          "Jsoup_57_n34.txt",
          "Jsoup_57_n10.txt",
          "Jsoup_57_n44.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n/**\n * Remove an attribute by key. <b>Case insensitive.</b>\n * @param key attribute key to remove\n */\npublic void removeIgnoreCase(String key) {\n    Validate.notEmpty(key);\n    if (attributes == null)\n        return;\n    for (Iterator<String> it = attributes.keySet().iterator(); it.hasNext(); ) {\n        String attrKey = it.next();\n        if (attrKey.equalsIgnoreCase(key))\n            it.remove();\n    }\n}\n",
        "index": 3,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 21,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.ElementTest::testChainedRemoveAttributes"
        ],
        "failing_tests": [],
        "sum_entropy": -5.871576924044443,
        "mean_entropy": -0.0638214883048309,
        "pass_FIB_num": 11,
        "pass_FIB": [
          "Jsoup_57_n23.txt",
          "Jsoup_57_n14.txt",
          "Jsoup_57_n1.txt",
          "Jsoup_57_n8.txt",
          "Jsoup_57_n33.txt",
          "Jsoup_57_n4.txt",
          "Jsoup_57_n27.txt",
          "Jsoup_57_n13.txt",
          "Jsoup_57_n34.txt",
          "Jsoup_57_n10.txt",
          "Jsoup_57_n44.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Remove an attribute by key. <b>Case insensitive.</b>\n     * @param key attribute key to remove\n     */\n    public void removeIgnoreCase(String key) {\n        Validate.notEmpty(key);\n        if (attributes == null)\n            return;\n        \n        // Using iterator to avoid ConcurrentModificationException\n        for (Iterator<Map.Entry<String, Attribute>> iter = attributes.entrySet().iterator(); iter.hasNext();) {\n            Map.Entry<String, Attribute> entry = iter.next();\n            if (entry.getKey().equalsIgnoreCase(key)) {\n                iter.remove();\n            }\n        }\n    }\n",
        "index": 30,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 21,
        "failing_relevant": 0,
        "passing_tests": [
          "org.jsoup.nodes.ElementTest::testChainedRemoveAttributes"
        ],
        "failing_tests": [],
        "sum_entropy": -8.113793766184928,
        "mean_entropy": -0.06761494805154107,
        "pass_FIB_num": 11,
        "pass_FIB": [
          "Jsoup_57_n23.txt",
          "Jsoup_57_n14.txt",
          "Jsoup_57_n1.txt",
          "Jsoup_57_n8.txt",
          "Jsoup_57_n33.txt",
          "Jsoup_57_n4.txt",
          "Jsoup_57_n27.txt",
          "Jsoup_57_n13.txt",
          "Jsoup_57_n34.txt",
          "Jsoup_57_n10.txt",
          "Jsoup_57_n44.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      }
    ]
  }
}