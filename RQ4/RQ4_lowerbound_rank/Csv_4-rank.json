{
  "Csv_4_src/main/java/org/apache/commons/csv/CSVParser.java_280_289": {
    "patches": [
      {
        "patch": "\n    /**\n     * Returns a copy of the header map that iterates in column order.\n     * <p>\n     * The map keys are column names. The map values are 0-based indices.\n     * </p>\n     * @return a copy of the header map that iterates in column order.\n     */\n    public Map<String, Integer> getHeaderMap() {\n        return this.headerMap != null ?\n            new LinkedHashMap<String, Integer>(this.headerMap)\n            : null;\n    }\n",
        "index": 86,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.csv.CSVParserTest::testNoHeaderMap"
        ],
        "failing_tests": [],
        "sum_entropy": -2.02263594336458,
        "mean_entropy": -0.019637242168588157,
        "pass_FIB_num": 6,
        "pass_FIB": [
          "Csv_4_n15.txt",
          "Csv_4_n47.txt",
          "Csv_4_n0.txt",
          "Csv_4_n42.txt",
          "Csv_4_n45.txt",
          "Csv_4_n49.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Returns a copy of the header map that iterates in column order.\n     * <p>\n     * The map keys are column names. The map values are 0-based indices.\n     * </p>\n     * @return a copy of the header map that iterates in column order.\n     */\n    public Map<String, Integer> getHeaderMap() {\n        return this.headerMap != null ?\n            new LinkedHashMap<String, Integer>(this.headerMap)\n            : null;\n    }\n",
        "index": 89,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.csv.CSVParserTest::testNoHeaderMap"
        ],
        "failing_tests": [],
        "sum_entropy": -2.02263594336458,
        "mean_entropy": -0.019637242168588157,
        "pass_FIB_num": 6,
        "pass_FIB": [
          "Csv_4_n15.txt",
          "Csv_4_n47.txt",
          "Csv_4_n0.txt",
          "Csv_4_n42.txt",
          "Csv_4_n45.txt",
          "Csv_4_n49.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Returns a copy of the header map that iterates in column order.\n     * <p>\n     * The map keys are column names. The map values are 0-based indices.\n     * </p>\n     * @return a copy of the header map that iterates in column order.\n     */\n    public Map<String, Integer> getHeaderMap() {\n        return this.headerMap != null ?\n            new LinkedHashMap<String, Integer>(this.headerMap)\n            : null;\n    }\n",
        "index": 17,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.csv.CSVParserTest::testNoHeaderMap"
        ],
        "failing_tests": [],
        "sum_entropy": -2.097919337290599,
        "mean_entropy": -0.020368148905733973,
        "pass_FIB_num": 6,
        "pass_FIB": [
          "Csv_4_n15.txt",
          "Csv_4_n47.txt",
          "Csv_4_n0.txt",
          "Csv_4_n42.txt",
          "Csv_4_n45.txt",
          "Csv_4_n49.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Returns a copy of the header map that iterates in column order.\n     * <p>\n     * The map keys are column names. The map values are 0-based indices.\n     * </p>\n     * @return a copy of the header map that iterates in column order.\n     */\n    public Map<String, Integer> getHeaderMap() {\n        return this.headerMap != null ?\n            new LinkedHashMap<String, Integer>(this.headerMap)\n            : null;\n    }\n",
        "index": 19,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.csv.CSVParserTest::testNoHeaderMap"
        ],
        "failing_tests": [],
        "sum_entropy": -2.097919337290599,
        "mean_entropy": -0.020368148905733973,
        "pass_FIB_num": 6,
        "pass_FIB": [
          "Csv_4_n15.txt",
          "Csv_4_n47.txt",
          "Csv_4_n0.txt",
          "Csv_4_n42.txt",
          "Csv_4_n45.txt",
          "Csv_4_n49.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Returns a copy of the header map that iterates in column order.\n     * <p>\n     * The map keys are column names. The map values are 0-based indices.\n     * </p>\n     * @return a copy of the header map that iterates in column order.\n     */\n    public Map<String, Integer> getHeaderMap() {\n        return this.headerMap != null ?\n            new LinkedHashMap<String, Integer>(this.headerMap)\n            : null;\n    }\n",
        "index": 21,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.csv.CSVParserTest::testNoHeaderMap"
        ],
        "failing_tests": [],
        "sum_entropy": -2.097919337290599,
        "mean_entropy": -0.020368148905733973,
        "pass_FIB_num": 6,
        "pass_FIB": [
          "Csv_4_n15.txt",
          "Csv_4_n47.txt",
          "Csv_4_n0.txt",
          "Csv_4_n42.txt",
          "Csv_4_n45.txt",
          "Csv_4_n49.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Returns a copy of the header map that iterates in column order.\n     * <p>\n     * The map keys are column names. The map values are 0-based indices.\n     * </p>\n     * @return a copy of the header map that iterates in column order.\n     */\n    public Map<String, Integer> getHeaderMap() {\n        return this.headerMap != null ?\n            new LinkedHashMap<String, Integer>(this.headerMap)\n            : null;\n    }\n",
        "index": 23,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.csv.CSVParserTest::testNoHeaderMap"
        ],
        "failing_tests": [],
        "sum_entropy": -2.097919337290599,
        "mean_entropy": -0.020368148905733973,
        "pass_FIB_num": 6,
        "pass_FIB": [
          "Csv_4_n15.txt",
          "Csv_4_n47.txt",
          "Csv_4_n0.txt",
          "Csv_4_n42.txt",
          "Csv_4_n45.txt",
          "Csv_4_n49.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Returns a copy of the header map that iterates in column order.\n     * <p>\n     * The map keys are column names. The map values are 0-based indices.\n     * </p>\n     * @return a copy of the header map that iterates in column order.\n     */\n    public Map<String, Integer> getHeaderMap() {\n        return this.headerMap != null ?\n            new LinkedHashMap<String, Integer>(this.headerMap)\n            : null;\n    }\n",
        "index": 24,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.csv.CSVParserTest::testNoHeaderMap"
        ],
        "failing_tests": [],
        "sum_entropy": -2.097919337290599,
        "mean_entropy": -0.020368148905733973,
        "pass_FIB_num": 6,
        "pass_FIB": [
          "Csv_4_n15.txt",
          "Csv_4_n47.txt",
          "Csv_4_n0.txt",
          "Csv_4_n42.txt",
          "Csv_4_n45.txt",
          "Csv_4_n49.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Returns a copy of the header map that iterates in column order.\n     * <p>\n     * The map keys are column names. The map values are 0-based indices.\n     * </p>\n     * @return a copy of the header map that iterates in column order.\n     */\n    public Map<String, Integer> getHeaderMap() {\n        return this.headerMap != null ?\n            new LinkedHashMap<String, Integer>(this.headerMap)\n            : null;\n    }\n",
        "index": 27,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.csv.CSVParserTest::testNoHeaderMap"
        ],
        "failing_tests": [],
        "sum_entropy": -2.097919337290599,
        "mean_entropy": -0.020368148905733973,
        "pass_FIB_num": 6,
        "pass_FIB": [
          "Csv_4_n15.txt",
          "Csv_4_n47.txt",
          "Csv_4_n0.txt",
          "Csv_4_n42.txt",
          "Csv_4_n45.txt",
          "Csv_4_n49.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Returns a copy of the header map that iterates in column order.\n     * <p>\n     * The map keys are column names. The map values are 0-based indices.\n     * </p>\n     * @return a copy of the header map that iterates in column order.\n     */\n    public Map<String, Integer> getHeaderMap() {\n        return this.headerMap != null ?\n            new LinkedHashMap<String, Integer>(this.headerMap)\n            : null;\n    }\n",
        "index": 28,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.csv.CSVParserTest::testNoHeaderMap"
        ],
        "failing_tests": [],
        "sum_entropy": -2.097919337290599,
        "mean_entropy": -0.020368148905733973,
        "pass_FIB_num": 6,
        "pass_FIB": [
          "Csv_4_n15.txt",
          "Csv_4_n47.txt",
          "Csv_4_n0.txt",
          "Csv_4_n42.txt",
          "Csv_4_n45.txt",
          "Csv_4_n49.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Returns a copy of the header map that iterates in column order.\n     * <p>\n     * The map keys are column names. The map values are 0-based indices.\n     * </p>\n     * @return a copy of the header map that iterates in column order.\n     */\n    public Map<String, Integer> getHeaderMap() {\n        return this.headerMap != null ?\n            new LinkedHashMap<String, Integer>(this.headerMap)\n            : null;\n    }\n",
        "index": 67,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.csv.CSVParserTest::testNoHeaderMap"
        ],
        "failing_tests": [],
        "sum_entropy": -2.10906018058026,
        "mean_entropy": -0.02047631243281806,
        "pass_FIB_num": 6,
        "pass_FIB": [
          "Csv_4_n15.txt",
          "Csv_4_n47.txt",
          "Csv_4_n0.txt",
          "Csv_4_n42.txt",
          "Csv_4_n45.txt",
          "Csv_4_n49.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Returns a copy of the header map that iterates in column order.\n     * <p>\n     * The map keys are column names. The map values are 0-based indices.\n     * </p>\n     * @return a copy of the header map that iterates in column order.\n     */\n    public Map<String, Integer> getHeaderMap() {\n        return this.headerMap != null ?\n            new LinkedHashMap<String, Integer>(this.headerMap)\n            : null;\n    }\n",
        "index": 69,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.csv.CSVParserTest::testNoHeaderMap"
        ],
        "failing_tests": [],
        "sum_entropy": -2.10906018058026,
        "mean_entropy": -0.02047631243281806,
        "pass_FIB_num": 6,
        "pass_FIB": [
          "Csv_4_n15.txt",
          "Csv_4_n47.txt",
          "Csv_4_n0.txt",
          "Csv_4_n42.txt",
          "Csv_4_n45.txt",
          "Csv_4_n49.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Returns a copy of the header map that iterates in column order.\n     * <p>\n     * The map keys are column names. The map values are 0-based indices.\n     * </p>\n     * @return a copy of the header map that iterates in column order.\n     */\n    public Map<String, Integer> getHeaderMap() {\n        return this.headerMap != null ?\n            new LinkedHashMap<String, Integer>(this.headerMap)\n            : null;\n    }\n",
        "index": 79,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.csv.CSVParserTest::testNoHeaderMap"
        ],
        "failing_tests": [],
        "sum_entropy": -2.10906018058026,
        "mean_entropy": -0.02047631243281806,
        "pass_FIB_num": 6,
        "pass_FIB": [
          "Csv_4_n15.txt",
          "Csv_4_n47.txt",
          "Csv_4_n0.txt",
          "Csv_4_n42.txt",
          "Csv_4_n45.txt",
          "Csv_4_n49.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Returns a copy of the header map that iterates in column order.\n     * <p>\n     * The map keys are column names. The map values are 0-based indices.\n     * </p>\n     * @return a copy of the header map that iterates in column order.\n     */\n    public Map<String, Integer> getHeaderMap() {\n        return this.headerMap != null ?\n            new LinkedHashMap<String, Integer>(this.headerMap)\n            : null;\n    }\n",
        "index": 0,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.csv.CSVParserTest::testNoHeaderMap"
        ],
        "failing_tests": [],
        "sum_entropy": -2.109229111188549,
        "mean_entropy": -0.020477952535811157,
        "pass_FIB_num": 6,
        "pass_FIB": [
          "Csv_4_n15.txt",
          "Csv_4_n47.txt",
          "Csv_4_n0.txt",
          "Csv_4_n42.txt",
          "Csv_4_n45.txt",
          "Csv_4_n49.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Returns a copy of the header map that iterates in column order.\n     * <p>\n     * The map keys are column names. The map values are 0-based indices.\n     * </p>\n     * @return a copy of the header map that iterates in column order.\n     */\n    public Map<String, Integer> getHeaderMap() {\n        return this.headerMap != null ?\n            new LinkedHashMap<String, Integer>(this.headerMap)\n            : null;\n    }\n",
        "index": 3,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.csv.CSVParserTest::testNoHeaderMap"
        ],
        "failing_tests": [],
        "sum_entropy": -2.109229111188549,
        "mean_entropy": -0.020477952535811157,
        "pass_FIB_num": 6,
        "pass_FIB": [
          "Csv_4_n15.txt",
          "Csv_4_n47.txt",
          "Csv_4_n0.txt",
          "Csv_4_n42.txt",
          "Csv_4_n45.txt",
          "Csv_4_n49.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\n    /**\n     * Returns a copy of the header map that iterates in column order.\n     * <p>\n     * The map keys are column names. The map values are 0-based indices.\n     * </p>\n     * @return a copy of the header map that iterates in column order.\n     */\n    public Map<String, Integer> getHeaderMap() {\n        return this.headerMap != null ?\n            new LinkedHashMap<String, Integer>(this.headerMap)\n            : null;\n    }\n",
        "index": 4,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.csv.CSVParserTest::testNoHeaderMap"
        ],
        "failing_tests": [],
        "sum_entropy": -2.109229111188549,
        "mean_entropy": -0.020477952535811157,
        "pass_FIB_num": 6,
        "pass_FIB": [
          "Csv_4_n15.txt",
          "Csv_4_n47.txt",
          "Csv_4_n0.txt",
          "Csv_4_n42.txt",
          "Csv_4_n45.txt",
          "Csv_4_n49.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "correct"
      },
      {
        "patch": "\npublic Map<String, Integer> getHeaderMap() {\n    return this.headerMap != null ?\n        new LinkedHashMap<String, Integer>(this.headerMap)\n        : null;\n}\n",
        "index": 22,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.csv.CSVParserTest::testNoHeaderMap"
        ],
        "failing_tests": [],
        "sum_entropy": -3.310437524939499,
        "mean_entropy": -0.09195659791498607,
        "pass_FIB_num": 6,
        "pass_FIB": [
          "Csv_4_n15.txt",
          "Csv_4_n47.txt",
          "Csv_4_n0.txt",
          "Csv_4_n42.txt",
          "Csv_4_n45.txt",
          "Csv_4_n49.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "wrong"
      },
      {
        "patch": "\npublic Map<String, Integer> getHeaderMap() {\n    return this.headerMap != null ?\n            new LinkedHashMap<String, Integer>(this.headerMap)\n            : null;\n}\n",
        "index": 73,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.csv.CSVParserTest::testNoHeaderMap"
        ],
        "failing_tests": [],
        "sum_entropy": -4.86128461473197,
        "mean_entropy": -0.1350356837425547,
        "pass_FIB_num": 6,
        "pass_FIB": [
          "Csv_4_n15.txt",
          "Csv_4_n47.txt",
          "Csv_4_n0.txt",
          "Csv_4_n42.txt",
          "Csv_4_n45.txt",
          "Csv_4_n49.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "wrong"
      },
      {
        "patch": "\n//Fixed code:\npublic Map<String, Integer> getHeaderMap() {\n    return this.headerMap != null ?\n       new LinkedHashMap<String, Integer>(this.headerMap)\n       : null;\n}\n",
        "index": 52,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.csv.CSVParserTest::testNoHeaderMap"
        ],
        "failing_tests": [],
        "sum_entropy": -5.730475745110142,
        "mean_entropy": -0.14326189362775354,
        "pass_FIB_num": 6,
        "pass_FIB": [
          "Csv_4_n15.txt",
          "Csv_4_n47.txt",
          "Csv_4_n0.txt",
          "Csv_4_n42.txt",
          "Csv_4_n45.txt",
          "Csv_4_n49.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "wrong"
      },
      {
        "patch": "\n//Fixed code:\npublic Map<String, Integer> getHeaderMap() {\n    return this.headerMap != null ?\n       new LinkedHashMap<String, Integer>(this.headerMap)\n       : null;\n}\n",
        "index": 74,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.csv.CSVParserTest::testNoHeaderMap"
        ],
        "failing_tests": [],
        "sum_entropy": -5.732175206820793,
        "mean_entropy": -0.14330438017051983,
        "pass_FIB_num": 6,
        "pass_FIB": [
          "Csv_4_n15.txt",
          "Csv_4_n47.txt",
          "Csv_4_n0.txt",
          "Csv_4_n42.txt",
          "Csv_4_n45.txt",
          "Csv_4_n49.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "wrong"
      },
      {
        "patch": "\n//Fixed function:\npublic Map<String, Integer> getHeaderMap() {\n    return this.headerMap != null ? new LinkedHashMap<String, Integer>(this.headerMap) : null;\n}\n",
        "index": 60,
        "validation": "plausible",
        "errors": [],
        "total_trigger": 1,
        "passing_trigger": 1,
        "total_relevant": 4,
        "failing_relevant": 0,
        "passing_tests": [
          "org.apache.commons.csv.CSVParserTest::testNoHeaderMap"
        ],
        "failing_tests": [],
        "sum_entropy": -8.091464230095381,
        "mean_entropy": -0.21293326921303635,
        "pass_FIB_num": 6,
        "pass_FIB": [
          "Csv_4_n15.txt",
          "Csv_4_n47.txt",
          "Csv_4_n0.txt",
          "Csv_4_n42.txt",
          "Csv_4_n45.txt",
          "Csv_4_n49.txt"
        ],
        "validation_wo": "plausible",
        "correctness": "wrong"
      }
    ]
  }
}