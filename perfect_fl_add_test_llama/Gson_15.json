{
  "patch": "\npublic JsonWriter value(double value) throws IOException {\n    writeDeferredName();\n    if (!lenient && (Double.isNaN(value) || Double.isInfinite(value))) {\n        throw new IllegalArgumentException(\"Numeric values must be finite, but was \" + value);\n    }\n    beforeValue();\n    out.append(Double.toString(value));\n    return this;\n}\n",
  "index": 0,
  "validation": "plausible",
  "validation_wo": "plausible",
  "errors": [],
  "total_trigger": 1,
  "passing_trigger": 1,
  "total_relevant": 76,
  "failing_relevant": 0,
  "passing_tests": [
    "com.google.gson.stream.JsonWriterTest::testNonFiniteDoublesWhenLenient"
  ],
  "failing_tests": [],
  "sum_entropy": -2.0081421732902527,
  "mean_entropy": -0.021363214609470774,
  "test_for_prompt": "Gson_15_n23.txt",
  "pass_FIB_num": 7,
  "pass_FIB": [
    "Gson_15_n27.txt",
    "Gson_15_n35.txt",
    "Gson_15_n42.txt",
    "Gson_15_n21.txt",
    "Gson_15_n3.txt",
    "Gson_15_n9.txt",
    "Gson_15_n41.txt"
  ]
}