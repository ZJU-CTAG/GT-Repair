{
  "patch": "\n  /**\n   * Returns the generic form of {@code supertype}. For example, if this is {@code\n   * ArrayList<String>}, this returns {@code Iterable<String>} given the input {@code\n   * Iterable.class}.\n   *\n   * @param supertype a superclass of, or interface implemented by, this.\n   */\n  static Type getSupertype(Type context, Class<?> contextRawType, Class<?> supertype) {\n      // wildcards are useless for resolving supertypes. As the upper bound has the same raw type, use it instead\n    checkArgument(supertype.isAssignableFrom(contextRawType));\n    if (context instanceof WildcardType) {\n      return ((WildcardType) context).getUpperBounds()[0];\n    }\n    return resolve(context, contextRawType,\n        $Gson$Types.getGenericSupertype(context, contextRawType, supertype));\n  }\n",
  "index": 95,
  "validation": "plausible",
  "validation_wo": "plausible",
  "errors": [],
  "total_trigger": 1,
  "passing_trigger": 1,
  "total_relevant": 1,
  "failing_relevant": 0,
  "passing_tests": [
    "com.google.gson.functional.CollectionTest::testIssue1107"
  ],
  "failing_tests": [],
  "sum_entropy": -9.25687574967742,
  "mean_entropy": -0.04246273279668541,
  "test_for_prompt": "Gson_18_n43.txt",
  "pass_FIB_num": 0,
  "pass_FIB": []
}