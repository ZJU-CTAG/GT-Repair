{
  "patch": "\npublic static long safeMultiply(long val1, int val2) {\n    switch (val2) {\n        case -1:\n            if (val1 == Long.MIN_VALUE) {\n                throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n            } else {\n                return -val1;\n            }\n        case 0:\n            return 0L;\n        case 1:\n            return val1;\n    }\n    long total = val1 * val2;\n    if (total / val2 != val1) {\n        throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n    }\n    return total;\n}\n",
  "index": 2,
  "validation": "plausible",
  "validation_wo": "plausible",
  "errors": [],
  "total_trigger": 1,
  "passing_trigger": 1,
  "total_relevant": 108,
  "failing_relevant": 0,
  "passing_tests": [
    "org.joda.time.field.TestFieldUtils::testSafeMultiplyLongInt"
  ],
  "failing_tests": [],
  "sum_entropy": -4.0128175765275955,
  "mean_entropy": -0.022293430980708864,
  "test_for_prompt": "Time_15_n15.txt",
  "pass_FIB_num": 12,
  "pass_FIB": [
    "Time_15_n45.txt",
    "Time_15_n36.txt",
    "Time_15_n32.txt",
    "Time_15_n21.txt",
    "Time_15_n33.txt",
    "Time_15_n41.txt",
    "Time_15_n23.txt",
    "Time_15_n4.txt",
    "Time_15_n16.txt",
    "Time_15_n6.txt",
    "Time_15_n46.txt",
    "Time_15_n1.txt"
  ]
}