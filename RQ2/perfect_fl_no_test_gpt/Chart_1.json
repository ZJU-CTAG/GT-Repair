{
  "patch": "\n    /**\n     * Returns a (possibly empty) collection of legend items for the series\n     * that this renderer is responsible for drawing.\n     *\n     * @return The legend item collection (never <code>null</code>).\n     *\n     * @see #getLegendItem(int, int)\n     */\n    public LegendItemCollection getLegendItems() {\n        LegendItemCollection result = new LegendItemCollection();\n        if (this.plot == null) {\n            return result;\n        }\n        int index = this.plot.getIndexOf(this);\n        CategoryDataset dataset = this.plot.getDataset(index);\n        if (dataset == null) {\n            return result;\n        }\n        int seriesCount = dataset.getRowCount();\n        if (plot.getRowRenderingOrder().equals(SortOrder.ASCENDING)) {\n            for (int i = 0; i < seriesCount; i++) {\n                if (isSeriesVisibleInLegend(i)) {\n                    LegendItem item = getLegendItem(index, i);\n                    if (item != null) {\n                        result.add(item);\n                    }\n                }\n            }\n        }\n        else {\n            for (int i = seriesCount - 1; i >= 0; i--) {\n                if (isSeriesVisibleInLegend(i)) {\n                    LegendItem item = getLegendItem(index, i);\n                    if (item != null) {\n                        result.add(item);\n                    }\n                }\n            }\n        }\n        return result;\n    }\n",
  "index": 0,
  "validation": "plausible",
  "errors": [],
  "total_trigger": 1,
  "passing_trigger": 1,
  "total_relevant": 64,
  "failing_relevant": 0,
  "passing_tests": [
    "org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests::test2947660"
  ],
  "failing_tests": [],
  "sum_entropy": -0.6560722223169896,
  "mean_entropy": -0.002223973634972846
}