{
  "patch": "\n    /**\n     * Creates a new, clean document, from the original dirty document, containing only elements allowed by the whitelist.\n     * The original document is not modified. Only elements from the dirty document's <code>body</code> are used.\n     * @param dirtyDocument Untrusted base document to clean.\n     * @return cleaned document.\n     */\n    public Document clean(Document dirtyDocument) {\n        Validate.notNull(dirtyDocument);\n\n        Document clean = Document.createShell(dirtyDocument.baseUri());\n        Element dirtyBody = dirtyDocument.body();\n        if (dirtyBody != null) {\n            copySafeNodes(dirtyBody, clean.body());\n        }\n\n        return clean;\n    }\n",
  "index": 0,
  "validation": "plausible",
  "errors": [],
  "total_trigger": 1,
  "passing_trigger": 1,
  "total_relevant": 1,
  "failing_relevant": 0,
  "passing_tests": [
    "org.jsoup.safety.CleanerTest::handlesFramesets"
  ],
  "failing_tests": [],
  "sum_entropy": -3.4325090260268003,
  "mean_entropy": -0.024517921614477144
}