{
  "patch": "\n    /** {@inheritDoc} */\n    public Complex reciprocal() {\n        if (isNaN()) {\n            return NaN;\n        }\n\n        if (real == 0.0 && imaginary == 0.0) {\n            return INF;\n        }\n\n        if (isInfinite()) {\n            return ZERO;\n        }\n\n        if (FastMath.abs(real) < FastMath.abs(imaginary)) {\n            double q = real / imaginary;\n            double scale = 1. / (real * q + imaginary);\n            return createComplex(scale * q, -scale);\n        } else {\n            double q = imaginary / real;\n            double scale = 1. / (imaginary * q + real);\n            return createComplex(scale, -scale * q);\n        }\n    }\n",
  "index": 74,
  "validation": "plausible",
  "validation_wo": "plausible",
  "errors": [],
  "total_trigger": 1,
  "passing_trigger": 1,
  "total_relevant": 10,
  "failing_relevant": 0,
  "passing_tests": [
    "org.apache.commons.math3.complex.ComplexTest::testReciprocalZero"
  ],
  "failing_tests": [],
  "sum_entropy": -3.1536608785390854,
  "mean_entropy": -0.016255983909995286,
  "test_for_prompt": "Math_5_n48.txt"
}