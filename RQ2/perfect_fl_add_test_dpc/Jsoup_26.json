{
  "patch": "\n/**\n * Creates a new, clean document, from the original dirty document, containing only elements allowed by the whitelist.\n * The original document is not modified. Only elements from the dirt document's <code>body</code> are used.\n * @param dirtyDocument Untrusted base document to clean.\n * @return cleaned document.\n */\npublic Document clean(Document dirtyDocument) {\n    Validate.notNull(dirtyDocument);\n\n    Document clean = Document.createShell(dirtyDocument.baseUri());\n\n    // Check if the dirtyDocument has a body\n    if (dirtyDocument.body() != null) {\n        copySafeNodes(dirtyDocument.body(), clean.body());\n    }\n\n    return clean;\n}\n",
  "index": 0,
  "validation": "plausible",
  "validation_wo": "plausible",
  "errors": [],
  "total_trigger": 1,
  "passing_trigger": 1,
  "total_relevant": 1,
  "failing_relevant": 0,
  "passing_tests": [
    "org.jsoup.safety.CleanerTest::handlesFramesets"
  ],
  "failing_tests": [],
  "sum_entropy": -4.924928262829781,
  "mean_entropy": -0.028142447216170173,
  "test_for_prompt": "Jsoup_26_n30.txt"
}