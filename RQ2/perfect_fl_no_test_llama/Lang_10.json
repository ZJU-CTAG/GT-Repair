{
  "patch": "\n    /**\n     * Escape constant fields into regular expression\n     * @param regex The destination regex\n     * @param value The source field\n     * @param unquote If true, replace two success quotes ('') with single quote (')\n     * @return The <code>StringBuilder</code>\n     */\n    private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {\n        for(int i= 0; i<value.length(); ++i) {\n            char c= value.charAt(i);\n            switch(c) {\n            case '\\'':\n                if(unquote) {\n                    if(++i==value.length()) {\n                        return regex;\n                    }\n                    c= value.charAt(i);\n                }\n                break;\n            case '?':\n            case '[':\n            case ']':\n            case '(':\n            case ')':\n            case '{':\n            case '}':\n            case '\\\\':\n            case '|':\n            case '*':\n            case '+':\n            case '^':\n            case '$':\n            case '.':\n                regex.append('\\\\');\n            }\n            regex.append(c);\n        }\n        return regex;\n    }\n",
  "index": 18,
  "validation": "plausible",
  "validation_wo": "plausible",
  "errors": [],
  "total_trigger": 2,
  "passing_trigger": 2,
  "total_relevant": 8,
  "failing_relevant": 0,
  "passing_tests": [
    "org.apache.commons.lang3.time.FastDateFormat_ParserTest::testLANG_831",
    "org.apache.commons.lang3.time.FastDateParserTest::testLANG_831"
  ],
  "failing_tests": [],
  "sum_entropy": -1.1727349311113358,
  "mean_entropy": -0.003961942334835594,
  "pass_FIB_num": 0,
  "pass_FIB": []
}