{
  "patch": "\n    @Override\n    public boolean equals(Object obj) {\n        if (this == obj) {\n            return true;\n        }\n        if (obj == null || getClass() != obj.getClass()) {\n            return false;\n        }\n        ZipArchiveEntry other = (ZipArchiveEntry) obj;\n        String myName = getName();\n        String otherName = other.getName();\n        if (myName == null) {\n            if (otherName != null) {\n                return false;\n            }\n        } else if (!myName.equals(otherName)) {\n            return false;\n        }\n        String myComment = getComment() == null ? \"\" : getComment();\n        String otherComment = other.getComment() == null ? \"\" : other.getComment();\n        if (!myComment.equals(otherComment)) {\n            return false;\n        }\n        return getTime() == other.getTime()\n            && getInternalAttributes() == other.getInternalAttributes()\n            && getPlatform() == other.getPlatform()\n            && getExternalAttributes() == other.getExternalAttributes()\n            && getMethod() == other.getMethod()\n            && getSize() == other.getSize()\n            && getCrc() == other.getCrc()\n            && getCompressedSize() == other.getCompressedSize()\n            && Arrays.equals(getCentralDirectoryExtra(), other.getCentralDirectoryExtra())\n            && Arrays.equals(getLocalFileDataExtra(), other.getLocalFileDataExtra())\n            && gpb.equals(other.gpb);\n    }\n",
  "index": 1,
  "validation": "plausible",
  "errors": [],
  "total_trigger": 1,
  "passing_trigger": 1,
  "total_relevant": 14,
  "failing_relevant": 0,
  "passing_tests": [
    "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest::testNullCommentEqualsEmptyComment"
  ],
  "failing_tests": [],
  "sum_entropy": -4.840713907888521,
  "mean_entropy": -0.01663475569721141,
  "test_for_prompt": "Compress_15_n29.txt",
  "pass_FIB_num": 0,
  "pass_FIB": []
}