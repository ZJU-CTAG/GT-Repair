{
  "patch": "\n    public void atan2(final double[] y, final int yOffset,\n                      final double[] x, final int xOffset,\n                      final double[] result, final int resultOffset) {\n\n        // compute r = sqrt(x^2+y^2)\n        double[] tmp1 = new double[getSize()];\n        multiply(x, xOffset, x, xOffset, tmp1, 0);      // x^2\n        double[] tmp2 = new double[getSize()];\n        multiply(y, yOffset, y, yOffset, tmp2, 0);      // y^2\n        add(tmp1, 0, tmp2, 0, tmp2, 0);                 // x^2 + y^2\n        rootN(tmp2, 0, 2, tmp1, 0);                     // r = sqrt(x^2 + y^2)\n\n        if (x[xOffset] != 0 || y[yOffset] != 0) {\n            if (x[xOffset] >= 0) {\n\n                // compute atan2(y, x) = 2 atan(y / (r + x))\n                add(tmp1, 0, x, xOffset, tmp2, 0);          // r + x\n                divide(y, yOffset, tmp2, 0, tmp1, 0);       // y /(r + x)\n                atan(tmp1, 0, tmp2, 0);                     // atan(y / (r + x))\n                for (int i = 0; i < tmp2.length; ++i) {\n                    result[resultOffset + i] = 2 * tmp2[i]; // 2 * atan(y / (r + x))\n                }\n\n            } else {\n\n                // compute atan2(y, x) = +/- pi - 2 atan(y / (r - x))\n                subtract(tmp1, 0, x, xOffset, tmp2, 0);     // r - x\n                divide(y, yOffset, tmp2, 0, tmp1, 0);       // y /(r - x)\n                atan(tmp1, 0, tmp2, 0);                     // atan(y / (r - x))\n                result[resultOffset] =\n                        ((tmp2[0] <= 0) ? -FastMath.PI : FastMath.PI) - 2 * tmp2[0]; // +/-pi - 2 * atan(y / (r - x))\n                for (int i = 1; i < tmp2.length; ++i) {\n                    result[resultOffset + i] = -2 * tmp2[i]; // +/-pi - 2 * atan(y / (r - x))\n                }\n\n            }\n        } else {\n            // Handle special cases\n            result[resultOffset] = Math.atan2(y[yOffset], x[xOffset]);\n        }\n\n        // fix value to take special cases (+0/+0, +0/-0, -0/+0, -0/-0, +/-infinity) correctly\n\n    }\n",
  "index": 40,
  "validation": "plausible",
  "errors": [],
  "total_trigger": 1,
  "passing_trigger": 1,
  "total_relevant": 31,
  "failing_relevant": 0,
  "passing_tests": [
    "org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testAtan2SpecialCases"
  ],
  "failing_tests": [],
  "sum_entropy": -12.43683643829538,
  "mean_entropy": -0.02005941361015384,
  "test_for_prompt": "Math_10_n43.txt",
  "pass_FIB_num": 1,
  "pass_FIB": [
    "Math_10_n43.txt"
  ]
}