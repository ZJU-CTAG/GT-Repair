{
  "patch": "\n    /**\n     * Test for the equality of two Complex objects.\n     * <p>\n     * If both the real and imaginary parts of two Complex numbers\n     * are exactly the same, and neither is <code>Double.NaN</code>, the two\n     * Complex objects are considered to be equal.</p>\n     * <p>\n     * All <code>NaN</code> values are considered to be equal - i.e, if either\n     * (or both) real and imaginary parts of the complex number are equal\n     * to <code>Double.NaN</code>, the complex number is equal to \n     * <code>Complex.NaN</code>.</p>\n     *\n     * @param other Object to test for equality to this\n     * @return true if two Complex objects are equal, false if\n     *         object is null, not an instance of Complex, or\n     *         not equal to this Complex instance\n     * \n     */\n    public boolean equals(Object other) {\n        boolean ret;\n        \n        if (this == other) { \n            ret = true;\n        } else if (other == null || !(other instanceof Complex)) {\n            ret = false;\n        } else  {\n            Complex rhs = (Complex)other;\n            if (rhs.isNaN() && this.isNaN()) {\n                ret = true;\n            } else {\n                ret = (real == rhs.getReal()) && (imaginary == rhs.getImaginary()); \n            }\n        }\n      \n        return ret;\n    }\n",
  "index": 52,
  "validation": "plausible",
  "errors": [],
  "total_trigger": 1,
  "passing_trigger": 1,
  "total_relevant": 8,
  "failing_relevant": 0,
  "passing_tests": [
    "org.apache.commons.math.complex.ComplexTest::testMath221"
  ],
  "failing_tests": [],
  "sum_entropy": -8.93975789424735,
  "mean_entropy": -0.028201129003934858,
  "test_for_prompt": "Math_96_n2.txt",
  "pass_FIB_num": 28,
  "pass_FIB": [
    "Math_96_n26.txt",
    "Math_96_n0.txt",
    "Math_96_n27.txt",
    "Math_96_n12.txt",
    "Math_96_n34.txt",
    "Math_96_n21.txt",
    "Math_96_n18.txt",
    "Math_96_n17.txt",
    "Math_96_n5.txt",
    "Math_96_n24.txt",
    "Math_96_n47.txt",
    "Math_96_n49.txt",
    "Math_96_n23.txt",
    "Math_96_n9.txt",
    "Math_96_n45.txt",
    "Math_96_n10.txt",
    "Math_96_n6.txt",
    "Math_96_n48.txt",
    "Math_96_n37.txt",
    "Math_96_n31.txt",
    "Math_96_n2.txt",
    "Math_96_n29.txt",
    "Math_96_n38.txt",
    "Math_96_n25.txt",
    "Math_96_n33.txt",
    "Math_96_n7.txt",
    "Math_96_n46.txt",
    "Math_96_n41.txt"
  ]
}