{
  "patch": "\npublic static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len != 2 && len != 5 && len < 7) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str, \"\");\n    } else {\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        char ch3 = str.charAt(3);\n        if (ch3 == '_') {\n            return new Locale(str.substring(0, 2), \"\", str.substring(4));\n        } else {\n            char ch4 = str.charAt(4);\n            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            if (len == 5) {\n                return new Locale(str.substring(0, 2), str.substring(3, 5));\n            } else {\n                if (str.charAt(5) != '_') {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n            }\n        }\n    }\n}\n",
  "index": 82,
  "validation": "plausible",
  "errors": [],
  "total_trigger": 1,
  "passing_trigger": 1,
  "total_relevant": 1,
  "failing_relevant": 0,
  "passing_tests": [
    "org.apache.commons.lang.LocaleUtilsTest::testLang328"
  ],
  "failing_tests": [],
  "sum_entropy": -8.143934801329927,
  "mean_entropy": -0.022190558041770916,
  "test_for_prompt": "Lang_54_n1.txt",
  "pass_FIB_num": 31,
  "pass_FIB": [
    "Lang_54_n27.txt",
    "Lang_54_n29.txt",
    "Lang_54_n18.txt",
    "Lang_54_n8.txt",
    "Lang_54_n35.txt",
    "Lang_54_n6.txt",
    "Lang_54_n19.txt",
    "Lang_54_n25.txt",
    "Lang_54_n12.txt",
    "Lang_54_n7.txt",
    "Lang_54_n49.txt",
    "Lang_54_n42.txt",
    "Lang_54_n38.txt",
    "Lang_54_n28.txt",
    "Lang_54_n17.txt",
    "Lang_54_n46.txt",
    "Lang_54_n24.txt",
    "Lang_54_n41.txt",
    "Lang_54_n11.txt",
    "Lang_54_n39.txt",
    "Lang_54_n3.txt",
    "Lang_54_n15.txt",
    "Lang_54_n4.txt",
    "Lang_54_n14.txt",
    "Lang_54_n16.txt",
    "Lang_54_n47.txt",
    "Lang_54_n26.txt",
    "Lang_54_n22.txt",
    "Lang_54_n2.txt",
    "Lang_54_n23.txt",
    "Lang_54_n13.txt"
  ]
}