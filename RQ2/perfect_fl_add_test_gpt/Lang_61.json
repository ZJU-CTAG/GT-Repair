{
  "patch": "\n/**\n * Searches the string builder to find the first reference to the specified\n * string starting searching from the given index.\n * <p>\n * Note that a null input string will return -1, whereas the JDK throws an exception.\n * \n * @param str  the string to find, null returns -1\n * @param startIndex  the index to start at, invalid index rounded to edge\n * @return the first index of the string, or -1 if not found\n */\npublic int indexOf(String str, int startIndex) {\n    startIndex = (startIndex < 0 ? 0 : startIndex);\n    if (str == null || startIndex >= size) {\n        return -1;\n    }\n    int strLen = str.length();\n    if (strLen == 1) {\n        return indexOf(str.charAt(0), startIndex);\n    }\n    if (strLen == 0) {\n        return startIndex;\n    }\n    if (strLen > size) {\n        return -1;\n    }\n    char[] thisBuf = buffer;\n    int len = size - strLen + 1;\n    outer:\n    for (int i = startIndex; i < len; i++) {\n        for (int j = 0; j < strLen; j++) {\n            if (str.charAt(j) != thisBuf[i + j]) {\n                continue outer;\n            }\n        }\n        return i;\n    }\n    return -1;\n}\n",
  "index": 7,
  "validation": "plausible",
  "errors": [],
  "total_trigger": 2,
  "passing_trigger": 2,
  "total_relevant": 4,
  "failing_relevant": 0,
  "passing_tests": [
    "org.apache.commons.lang.text.StrBuilderTest::testIndexOfLang294",
    "org.apache.commons.lang.text.StrBuilderTest::testLang294"
  ],
  "failing_tests": [],
  "sum_entropy": -6.593801138928795,
  "mean_entropy": -0.022351868267555235,
  "test_for_prompt": "Lang_61_n21.txt",
  "pass_FIB_num": 15,
  "pass_FIB": [
    "Lang_61_n11.txt",
    "Lang_61_n21.txt",
    "Lang_61_n48.txt",
    "Lang_61_n39.txt",
    "Lang_61_n4.txt",
    "Lang_61_n41.txt",
    "Lang_61_n38.txt",
    "Lang_61_n18.txt",
    "Lang_61_n8.txt",
    "Lang_61_n2.txt",
    "Lang_61_n35.txt",
    "Lang_61_n22.txt",
    "Lang_61_n27.txt",
    "Lang_61_n25.txt",
    "Lang_61_n14.txt"
  ]
}