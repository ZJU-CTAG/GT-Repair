{
  "patch": "\n    public static boolean isNumber(String str) {\n        if (StringUtils.isEmpty(str)) {\n            return false;\n        }\n        char[] chars = str.toCharArray();\n        int sz = chars.length;\n        boolean hasExp = false;\n        boolean hasDecPoint = false;\n        boolean allowSigns = false;\n        boolean foundDigit = false;\n        int start = (chars[0] == '-') ? 1 : 0;\n        if (sz > start + 1) {\n            if (chars[start] == '0' && chars[start + 1] == 'x') {\n                int i = start + 2;\n                if (i == sz) {\n                    return false;\n                }\n                for (; i < chars.length; i++) {\n                    if ((chars[i] < '0' || chars[i] > '9')\n                            && (chars[i] < 'a' || chars[i] > 'f')\n                            && (chars[i] < 'A' || chars[i] > 'F')) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n        sz--; \n        int i = start;\n        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {\n            if (chars[i] >= '0' && chars[i] <= '9') {\n                foundDigit = true;\n                allowSigns = false;\n            } else if (chars[i] == '.') {\n                if (hasDecPoint || hasExp) {\n                    return false;\n                }\n                hasDecPoint = true;\n            } else if (chars[i] == 'e' || chars[i] == 'E') {\n                if (hasExp) {\n                    return false;\n                }\n                if (!foundDigit) {\n                    return false;\n                }\n                hasExp = true;\n                allowSigns = true;\n            } else if (chars[i] == '+' || chars[i] == '-') {\n                if (!allowSigns) {\n                    return false;\n                }\n                allowSigns = false;\n                foundDigit = false;\n            } else {\n                return false;\n            }\n            i++;\n        }\n        if (i < chars.length) {\n            if (chars[i] >= '0' && chars[i] <= '9') {\n                return true;\n            }\n            if (chars[i] == 'e' || chars[i] == 'E') {\n                return false;\n            }\n            if (chars[i] == '.') {\n                if (hasDecPoint || hasExp) {\n                    return false;\n                }\n                return foundDigit;\n            }\n            if (!allowSigns\n                    && (chars[i] == 'd'\n                    || chars[i] == 'D'\n                    || chars[i] == 'f'\n                    || chars[i] == 'F')) {\n                return foundDigit;\n            }\n            if (chars[i] == 'l'\n                    || chars[i] == 'L') {\n                return foundDigit && !hasExp && !hasDecPoint;\n            }\n            return false;\n        }\n        return !allowSigns && foundDigit;\n    }\n",
  "index": 0,
  "validation": "plausible",
  "errors": [],
  "total_trigger": 1,
  "passing_trigger": 1,
  "total_relevant": 4,
  "failing_relevant": 0,
  "passing_tests": [
    "org.apache.commons.lang3.math.NumberUtilsTest::testIsNumber"
  ],
  "failing_tests": [],
  "sum_entropy": -10.118897898357945,
  "mean_entropy": -0.015712574376332212,
  "test_for_prompt": "Lang_24_n33.txt",
  "pass_FIB_num": 35,
  "pass_FIB": [
    "Lang_24_n33.txt",
    "Lang_24_n27.txt",
    "Lang_24_n47.txt",
    "Lang_24_n42.txt",
    "Lang_24_n0.txt",
    "Lang_24_n7.txt",
    "Lang_24_n14.txt",
    "Lang_24_n32.txt",
    "Lang_24_n19.txt",
    "Lang_24_n4.txt",
    "Lang_24_n20.txt",
    "Lang_24_n15.txt",
    "Lang_24_n18.txt",
    "Lang_24_n40.txt",
    "Lang_24_n30.txt",
    "Lang_24_n48.txt",
    "Lang_24_n24.txt",
    "Lang_24_n44.txt",
    "Lang_24_n26.txt",
    "Lang_24_n36.txt",
    "Lang_24_n8.txt",
    "Lang_24_n25.txt",
    "Lang_24_n11.txt",
    "Lang_24_n13.txt",
    "Lang_24_n17.txt",
    "Lang_24_n49.txt",
    "Lang_24_n46.txt",
    "Lang_24_n16.txt",
    "Lang_24_n9.txt",
    "Lang_24_n37.txt",
    "Lang_24_n31.txt",
    "Lang_24_n35.txt",
    "Lang_24_n2.txt",
    "Lang_24_n5.txt",
    "Lang_24_n45.txt"
  ]
}