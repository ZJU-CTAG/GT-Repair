{
  "patch": "\n    /**\n     * <p>Converts a String to a boolean (optimised for performance).</p>\n     * \n     * <p><code>'true'</code>, <code>'on'</code> or <code>'yes'</code>\n     * (case insensitive) will return <code>true</code>. Otherwise,\n     * <code>false</code> is returned.</p>\n     * \n     * <p>This method performs 4 times faster (JDK1.4) than\n     * <code>Boolean.valueOf(String)</code>. However, this method accepts\n     * 'on' and 'yes' as true values.\n     *\n     * <pre>\n     *   BooleanUtils.toBoolean(null)    = false\n     *   BooleanUtils.toBoolean(\"true\")  = true\n     *   BooleanUtils.toBoolean(\"TRUE\")  = true\n     *   BooleanUtils.toBoolean(\"tRUe\")  = true\n     *   BooleanUtils.toBoolean(\"on\")    = true\n     *   BooleanUtils.toBoolean(\"yes\")   = true\n     *   BooleanUtils.toBoolean(\"false\") = false\n     *   BooleanUtils.toBoolean(\"x gti\") = false\n     * </pre>\n     *\n     * @param str  the String to check\n     * @return the boolean value of the string, <code>false</code> if no match\n     */\n    public static boolean toBoolean(String str) {\n        // Previously used equalsIgnoreCase, which was fast for interned 'true'.\n        // Non interned 'true' matched 15 times slower.\n        // \n        // Optimisation provides same performance as before for interned 'true'.\n        // Similar performance for null, 'false', and other strings not length 2/3/4.\n        // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.\n        if (str == \"true\") {\n            return true;\n        }\n        if (str == null) {\n            return false;\n        }\n        switch (str.length()) {\n            case 2: {\n                char ch0 = str.charAt(0);\n                char ch1 = str.charAt(1);\n                return \n                    (ch0 == 'o' || ch0 == 'O') &&\n                    (ch1 == 'n' || ch1 == 'N');\n            }\n            case 3: {\n                char ch = str.charAt(0);\n                if (ch == 'y') {\n                    return \n                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&\n                        (str.charAt(2) == 's' || str.charAt(2) == 'S');\n                }\n                if (ch == 'Y') {\n                    return \n                        (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&\n                        (str.charAt(2) == 'S' || str.charAt(2) == 's');\n                }\n                return false;\n            }\n            case 4: {\n                char ch = str.charAt(0);\n                if (ch == 't') {\n                    return \n                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&\n                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&\n                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');\n                }\n                if (ch == 'T') {\n                    return \n                        (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&\n                        (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&\n                        (str.charAt(3) == 'E' || str.charAt(3) == 'e');\n                }\n            }\n        }\n        return false;\n    }\n",
  "index": 16,
  "validation": "plausible",
  "validation_wo": "plausible",
  "errors": [],
  "total_trigger": 1,
  "passing_trigger": 1,
  "total_relevant": 10,
  "failing_relevant": 0,
  "passing_tests": [
    "org.apache.commons.lang.BooleanUtilsTest::test_toBoolean_String"
  ],
  "failing_tests": [],
  "sum_entropy": -1.8658401109278202,
  "mean_entropy": -0.0019097646990049336,
  "pass_FIB_num": 38,
  "pass_FIB": [
    "Lang_51_n1.txt",
    "Lang_51_n44.txt",
    "Lang_51_n0.txt",
    "Lang_51_n49.txt",
    "Lang_51_n18.txt",
    "Lang_51_n2.txt",
    "Lang_51_n13.txt",
    "Lang_51_n26.txt",
    "Lang_51_n48.txt",
    "Lang_51_n10.txt",
    "Lang_51_n14.txt",
    "Lang_51_n46.txt",
    "Lang_51_n15.txt",
    "Lang_51_n47.txt",
    "Lang_51_n41.txt",
    "Lang_51_n9.txt",
    "Lang_51_n5.txt",
    "Lang_51_n35.txt",
    "Lang_51_n30.txt",
    "Lang_51_n23.txt",
    "Lang_51_n31.txt",
    "Lang_51_n8.txt",
    "Lang_51_n21.txt",
    "Lang_51_n16.txt",
    "Lang_51_n22.txt",
    "Lang_51_n42.txt",
    "Lang_51_n34.txt",
    "Lang_51_n39.txt",
    "Lang_51_n25.txt",
    "Lang_51_n7.txt",
    "Lang_51_n27.txt",
    "Lang_51_n29.txt",
    "Lang_51_n24.txt",
    "Lang_51_n37.txt",
    "Lang_51_n17.txt",
    "Lang_51_n4.txt",
    "Lang_51_n40.txt",
    "Lang_51_n38.txt"
  ]
}