{
  "patch": "\n    /**\n     * Returns a value by name.\n     *\n     * @param name\n     *            the name of the column to be retrieved.\n     * @return the column value, or {@code null} if the column name is not found\n     * @throws IllegalStateException\n     *             if no header mapping was provided\n     * @throws IllegalArgumentException\n     *             if the record is inconsistent\n     * @see #isConsistent()\n     */\n    public String get(final String name) {\n        if (mapping == null) {\n            throw new IllegalStateException(\n                    \"No header mapping was specified, the record values can't be accessed by name\");\n        }\n        final Integer index = mapping.get(name);\n        if (index != null && index >= values.length) {\n            throw new IllegalArgumentException(\"Header mapping is longer than the number of values in the record\");\n        }\n        return index != null ? values[index.intValue()] : null;\n    }\n",
  "index": 15,
  "validation": "plausible",
  "validation_wo": "wrong",
  "errors": [],
  "total_trigger": 1,
  "passing_trigger": 1,
  "total_relevant": 4,
  "failing_relevant": 0,
  "passing_tests": [
    "org.apache.commons.csv.CSVRecordTest::testGetStringInconsistentRecord"
  ],
  "failing_tests": [],
  "sum_entropy": -5.683486390858889,
  "mean_entropy": -0.024185048471739953,
  "pass_FIB_num": 3,
  "pass_FIB": [
    "Csv_2_n38.txt",
    "Csv_2_n41.txt",
    "Csv_2_n49.txt"
  ]
}