File,Signature,StartLine,EndLine,Suspiciousness
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('evaluateType(byte[])',)",918,923,0.2963137832691886
org.apache.commons.compress.archivers.tar.TarBuffer,"('readBlock()',)",216,270,0.23132738720645868
org.apache.commons.compress.archivers.tar.TarBuffer,"('readRecord()',)",190,209,0.18973665961010275
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('getRecord()',)",253,265,0.1875
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('getNextTarEntry()',)",173,237,0.18257418583505536
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isDirectory()',)",646,658,0.18133411402524924
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('parseTarHeader(byte[])',)",807,866,0.17592265143545893
org.apache.commons.compress.archivers.tar.TarUtils,"('parseOctal(byte[],int,int)',)",52,106,0.17467744645508373
org.apache.commons.compress.archivers.tar.TarBuffer,"('isEOFRecord(byte[])',)",158,164,0.16770509831248423
org.apache.commons.compress.archivers.tar.TarUtils,"('parseOctalOrBinary(byte[],int,int)',)",129,142,0.16366341767699427
org.apache.commons.compress.archivers.tar.TarBuffer,"('initialize(int,int)',)",120,132,0.13162365412421723
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry()',)",180,197,0.07885500773507007
org.apache.commons.compress.archivers.tar.TarBuffer,"('close()',)",394,409,0.07246534882888658
org.apache.commons.compress.archivers.ArchiveInputStream,"('ArchiveInputStream()',)",40,46,2.7755575615628914e-17
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('ArchiveStreamFactory()',)",74,74,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('createArchiveInputStream(java.lang.String,java.io.InputStream)',)",120,147,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('createArchiveOutputStream(java.lang.String,java.io.OutputStream)',)",162,184,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('createArchiveInputStream(java.io.InputStream)',)",199,256,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('ArchiveOutputStream()',)",49,56,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('write(int)',)",112,114,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('count(int)',)",123,124,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('count(long)',)",134,137,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('getCount()',)",147,147,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('getBytesWritten()',)",156,156,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('canWriteEntryData(org.apache.commons.compress.archivers.ArchiveEntry)',)",169,169,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('ArArchiveOutputStream(java.io.OutputStream)',)",42,52,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('setLongFileMode(int)',)",63,64,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('writeArchiveHeader()',)",67,69,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('closeArchiveEntry()',)",75,85,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)',)",90,113,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('fill(long,long,char)',)",116,124,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('write(java.lang.String)',)",128,130,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('writeEntryHeader(org.apache.commons.compress.archivers.ar.ArArchiveEntry)',)",135,196,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('write(byte[],int,int)',)",201,204,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('close()',)",211,216,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('createArchiveEntry(java.io.File,java.lang.String)',)",222,225,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('finish()',)",231,237,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('read()',)",81,82,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('count(int)',)",92,93,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('count(long)',)",103,106,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('pushedBackBytes(long)',)",115,116,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('getCount()',)",126,126,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('getBytesRead()',)",135,135,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('canReadEntryData(org.apache.commons.compress.archivers.ArchiveEntry)',)",149,149,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('ZipArchiveInputStream(java.io.InputStream)',)",131,132,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('ZipArchiveInputStream(java.io.InputStream,java.lang.String,boolean)',)",143,144,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('ZipArchiveInputStream(java.io.InputStream,java.lang.String,boolean,boolean)',)",76,164,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('<clinit>()',)",690,692,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('getNextZipEntry()',)",167,247,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('processZip64Extra(org.apache.commons.compress.archivers.zip.ZipLong,org.apache.commons.compress.archivers.zip.ZipLong)',)",256,273,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('getNextEntry()',)",278,278,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('canReadEntryData(org.apache.commons.compress.archivers.ArchiveEntry)',)",290,296,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('read(byte[],int,int)',)",301,324,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readStored(byte[],int,int)',)",333,365,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readDeflated(byte[],int,int)',)",373,393,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('close()',)",398,403,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('skip(long)',)",422,435,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('matches(byte[],int)',)",450,454,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('checksig(byte[],byte[])',)",459,464,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('closeEntry()',)",486,523,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('drainCurrentEntryData()',)",530,543,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('getBytesInflated()',)",561,567,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('fill()',)",571,578,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readFully(byte[])',)",581,589,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readDataDescriptor()',)",592,626,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('supportsDataDescriptorFor(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",636,636,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readStoredEntry()',)",659,688,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('bufferContainsSignature(java.io.ByteArrayOutputStream,int,int,int)',)",706,733,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('cacheBytesRead(java.io.ByteArrayOutputStream,int,int,int)',)",747,756,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('pushback(byte[],int,int)',)",761,763,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('ZipArchiveOutputStream(java.io.OutputStream)',)",79,255,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('ZipArchiveOutputStream(java.io.File)',)",79,282,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('<clinit>()',)",173,1187,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeZip64CentralDirectory()',)",1196,1255,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeOut(byte[])',)",1263,1264,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeOut(byte[],int,int)',)",1275,1280,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('deflateUntilInputIsNeeded()',)",1283,1286,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeVersionNeededToExtractAndGeneralPurposeBits(int,boolean,boolean)',)",1297,1315,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('createArchiveEntry(java.io.File,java.lang.String)',)",1331,1334,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('getZip64Extra(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1345,1366,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('hasZip64Extra(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1376,1376,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('getEffectiveZip64Mode(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1389,1395,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('getEntryEncoding(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1399,1400,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('getName(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1405,1405,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('destroy()',)",1416,1422,0.0
org.apache.commons.compress.archivers.jar.JarArchiveInputStream,"('JarArchiveInputStream(java.io.InputStream)',)",36,37,0.0
org.apache.commons.compress.archivers.jar.JarArchiveInputStream,"('getNextJarEntry()',)",40,41,0.0
org.apache.commons.compress.archivers.jar.JarArchiveInputStream,"('getNextEntry()',)",46,46,0.0
org.apache.commons.compress.archivers.jar.JarArchiveInputStream,"('matches(byte[],int)',)",60,60,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('ArArchiveInputStream(java.io.InputStream)',)",38,65,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('<clinit>()',)",308,308,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('getNextArEntry()',)",75,168,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('getExtendedName(int)',)",179,190,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('asLong(byte[])',)",193,193,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('asInt(byte[])',)",197,197,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('asInt(byte[],boolean)',)",201,201,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('asInt(byte[],int)',)",205,205,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('asInt(byte[],int,boolean)',)",209,213,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('getNextEntry()',)",224,224,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('close()',)",234,239,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('read(byte[],int,int)',)",248,260,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('matches(byte[],int)',)",276,304,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('isBSDLongName(java.lang.String)',)",336,336,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('getBSDLongName(java.lang.String)',)",348,362,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('isGNUStringTable(java.lang.String)',)",385,385,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('readGNUStringTable(byte[])',)",394,401,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('isGNULongName(java.lang.String)',)",413,413,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('CpioArchiveInputStream(java.io.InputStream)',)",66,88,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('available()',)",104,108,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('close()',)",119,123,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('closeEntry()',)",134,140,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('ensureOpen()',)",149,152,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('getNextCPIOEntry()',)",164,201,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('skip(int)',)",205,209,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('read(byte[],int,int)',)",230,264,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readFully(byte[],int,int)',)",269,281,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readBinaryLong(int,boolean)',)",286,288,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readAsciiLong(int,int)',)",293,295,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readNewEntry(boolean)',)",301,330,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readOldAsciiEntry()',)",334,355,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readOldBinaryEntry(boolean)',)",360,382,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readCString(int)',)",386,388,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('skip(long)',)",404,423,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('getNextEntry()',)",429,429,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('matches(byte[],int)',)",446,486,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('DumpArchiveInputStream(java.io.InputStream)',)",52,117,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('getCount()',)",122,122,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('getBytesRead()',)",127,127,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('getSummary()',)",134,134,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('readCLRI()',)",141,159,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('readBITS()',)",165,183,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('getNextDumpEntry()',)",189,189,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('getNextEntry()',)",197,287,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('readDirectoryEntry(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)',)",295,376,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('getPath(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)',)",387,419,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('read(byte[],int,int)',)",437,488,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('close()',)",496,500,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('matches(byte[],int)',)",509,519,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('TarArchiveInputStream(java.io.InputStream)',)",61,62,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('TarArchiveInputStream(java.io.InputStream,int)',)",70,71,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('TarArchiveInputStream(java.io.InputStream,int,int)',)",79,83,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('close()',)",91,92,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('getRecordSize()',)",100,100,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('available()',)",117,120,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('skip(long)',)",139,149,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('reset()',)",157,157,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('paxHeaders()',)",269,285,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('parsePaxHeaders(java.io.Reader)',)",288,330,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('applyPaxHeadersToCurrentEntry(java.util.Map)',)",343,362,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('readGNUSparse()',)",377,391,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('getNextEntry()',)",395,395,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('read(byte[],int,int)',)",413,476,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('canReadEntryData(org.apache.commons.compress.archivers.ArchiveEntry)',)",486,490,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('getCurrentEntry()',)",494,494,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('setCurrentEntry(org.apache.commons.compress.archivers.tar.TarArchiveEntry)',)",498,499,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('isAtEOF()',)",502,502,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('setAtEOF(boolean)',)",506,507,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('matches(byte[],int)',)",519,553,0.0
org.apache.commons.compress.archivers.ArchiveException,"('ArchiveException(java.lang.String)',)",37,38,0.0
org.apache.commons.compress.archivers.ArchiveException,"('ArchiveException(java.lang.String,java.lang.Exception)',)",49,51,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('CpioArchiveOutputStream(java.io.OutputStream,short)',)",99,100,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('CpioArchiveOutputStream(java.io.OutputStream,short,int)',)",66,129,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('CpioArchiveOutputStream(java.io.OutputStream)',)",139,140,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('ensureOpen()',)",149,152,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)',)",170,195,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeHeader(org.apache.commons.compress.archivers.cpio.CpioArchiveEntry)',)",198,220,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeNewEntry(org.apache.commons.compress.archivers.cpio.CpioArchiveEntry)',)",223,253,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeOldAsciiEntry(org.apache.commons.compress.archivers.cpio.CpioArchiveEntry)',)",257,283,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeOldBinaryEntry(org.apache.commons.compress.archivers.cpio.CpioArchiveEntry,boolean)',)",287,314,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('closeArchiveEntry()',)",324,347,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('write(byte[],int,int)',)",366,387,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('finish()',)",400,420,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('close()',)",431,439,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('pad(int)',)",442,447,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeBinaryLong(long,int,boolean)',)",451,454,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeAsciiLong(long,int,int)',)",458,480,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeCString(java.lang.String)',)",488,492,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('createArchiveEntry(java.io.File,java.lang.String)',)",502,505,0.0
org.apache.commons.compress.archivers.jar.JarArchiveOutputStream,"('JarArchiveOutputStream(java.io.OutputStream)',)",38,42,0.0
org.apache.commons.compress.archivers.jar.JarArchiveOutputStream,"('putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)',)",47,52,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('TarArchiveOutputStream(java.io.OutputStream)',)",85,86,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('TarArchiveOutputStream(java.io.OutputStream,int)',)",94,95,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('TarArchiveOutputStream(java.io.OutputStream,int,int)',)",67,110,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('setLongFileMode(int)',)",120,121,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('setBigFileMode(int)',)",132,133,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('getCount()',)",139,139,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('getBytesWritten()',)",144,144,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('finish()',)",158,169,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('close()',)",177,186,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('getRecordSize()',)",194,194,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)',)",212,266,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('closeArchiveEntry()',)",280,304,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('write(byte[],int,int)',)",322,384,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('writePaxHeaders(java.lang.String,java.util.Map)',)",392,425,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('writeEOFRecord()',)",432,437,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('flush()',)",441,442,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('createArchiveEntry(java.io.File,java.lang.String)',)",448,451,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('TarBuffer(java.io.InputStream)',)",61,62,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('TarBuffer(java.io.InputStream,int)',)",70,71,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('TarBuffer(java.io.InputStream,int,int)',)",79,84,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('TarBuffer(java.io.OutputStream)',)",91,92,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('TarBuffer(java.io.OutputStream,int)',)",100,101,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('TarBuffer(java.io.OutputStream,int,int)',)",109,114,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('getBlockSize()',)",139,139,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('getRecordSize()',)",147,147,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('skipRecord()',)",172,181,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('getCurrentBlockNum()',)",279,279,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('getCurrentRecordNum()',)",289,289,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('writeRecord(byte[])',)",299,322,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('writeRecord(byte[],int)',)",334,357,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('writeBlock()',)",363,373,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('flushBlock()',)",379,386,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry(java.lang.String)',)",206,207,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry(java.lang.String,boolean)',)",220,240,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry(java.lang.String,byte)',)",249,255,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry(java.io.File)',)",265,266,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry(java.io.File,java.lang.String)',)",276,303,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry(byte[])',)",313,315,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('equals(org.apache.commons.compress.archivers.tar.TarArchiveEntry)',)",325,325,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('equals(java.lang.Object)',)",337,340,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('hashCode()',)",350,350,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isDescendent(org.apache.commons.compress.archivers.tar.TarArchiveEntry)',)",362,362,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getName()',)",371,371,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setName(java.lang.String)',)",380,381,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setMode(int)',)",389,390,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getLinkName()',)",398,398,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setLinkName(java.lang.String)',)",409,410,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getUserId()',)",418,418,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setUserId(int)',)",427,428,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getGroupId()',)",436,436,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setGroupId(int)',)",445,446,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getUserName()',)",454,454,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setUserName(java.lang.String)',)",463,464,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getGroupName()',)",472,472,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setGroupName(java.lang.String)',)",481,482,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setIds(int,int)',)",491,493,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setNames(java.lang.String,java.lang.String)',)",502,504,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setModTime(long)',)",513,514,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setModTime(java.util.Date)',)",522,523,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getModTime()',)",531,531,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getLastModifiedDate()',)",536,536,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getFile()',)",545,545,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getMode()',)",554,554,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getSize()',)",563,563,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setSize(long)',)",573,577,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isExtended()',)",586,586,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getRealSize()',)",595,595,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isGNUSparse()',)",604,604,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isGNULongNameEntry()',)",613,613,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isPaxHeader()',)",625,625,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isGlobalPaxHeader()',)",637,637,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isFile()',)",667,673,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isSymbolicLink()',)",682,682,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isLink()',)",691,691,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isCharacterDevice()',)",700,700,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isBlockDevice()',)",709,709,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isFIFO()',)",718,718,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getDirectoryEntries()',)",728,739,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('writeEntryHeader(byte[])',)",750,751,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('writeEntryHeader(byte[],boolean)',)",762,798,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('normalizeFileName(java.lang.String,boolean)',)",874,908,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('TarUtils()',)",32,33,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('parseBoolean(byte[],int)',)",156,156,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('exceptionMessage(byte[],int,int,int,byte)',)",162,165,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('parseName(byte[],int,int)',)",179,190,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatNameBytes(java.lang.String,byte[],int,int)',)",212,221,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatUnsignedOctalString(long,byte[],int,int)',)",235,256,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatOctalBytes(long,byte[],int,int)',)",274,280,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatLongOctalBytes(long,byte[],int,int)',)",299,304,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatLongOctalOrBinaryBytes(long,byte[],int,int)',)",328,346,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatCheckSumOctalBytes(long,byte[],int,int)',)",365,371,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('computeCheckSum(byte[])',)",381,387,0.0
