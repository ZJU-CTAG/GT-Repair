File,Signature,StartLine,EndLine,Suspiciousness
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('createArchiveInputStream(java.io.InputStream)',)",199,257,0.11926558783213519
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('ArchiveStreamFactory()',)",74,74,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('createArchiveInputStream(java.lang.String,java.io.InputStream)',)",120,147,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('createArchiveOutputStream(java.lang.String,java.io.OutputStream)',)",162,184,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('ArchiveOutputStream()',)",49,56,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('write(int)',)",112,114,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('count(int)',)",123,124,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('count(long)',)",134,137,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('getCount()',)",147,147,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('getBytesWritten()',)",156,156,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('canWriteEntryData(org.apache.commons.compress.archivers.ArchiveEntry)',)",169,169,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('ArArchiveOutputStream(java.io.OutputStream)',)",42,52,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('setLongFileMode(int)',)",63,64,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('writeArchiveHeader()',)",67,69,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('closeArchiveEntry()',)",75,85,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)',)",90,113,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('fill(long,long,char)',)",116,124,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('write(java.lang.String)',)",128,130,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('writeEntryHeader(org.apache.commons.compress.archivers.ar.ArArchiveEntry)',)",135,196,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('write(byte[],int,int)',)",201,204,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('close()',)",211,216,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('createArchiveEntry(java.io.File,java.lang.String)',)",222,225,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('finish()',)",231,237,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('ArchiveUtils()',)",31,32,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('toString(org.apache.commons.compress.archivers.ArchiveEntry)',)",44,54,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('matchAsciiBuffer(java.lang.String,byte[],int,int)',)",70,74,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('matchAsciiBuffer(java.lang.String,byte[])',)",85,85,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('toAsciiBytes(java.lang.String)',)",97,99,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('toAsciiString(byte[])',)",111,113,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('toAsciiString(byte[],int,int)',)",127,129,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('isEqual(byte[],int,int,byte[],int,int,boolean)',)",149,174,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('isEqual(byte[],int,int,byte[],int,int)',)",191,191,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('isEqual(byte[],byte[])',)",202,202,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('isEqual(byte[],byte[],boolean)',)",214,214,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('isEqualWithNull(byte[],int,int,byte[],int,int)',)",231,231,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('ArchiveInputStream()',)",40,46,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('read()',)",81,82,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('count(int)',)",92,93,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('count(long)',)",103,106,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('pushedBackBytes(long)',)",115,116,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('getCount()',)",126,126,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('getBytesRead()',)",135,135,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('canReadEntryData(org.apache.commons.compress.archivers.ArchiveEntry)',)",149,149,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('ZipArchiveInputStream(java.io.InputStream)',)",132,133,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('ZipArchiveInputStream(java.io.InputStream,java.lang.String,boolean)',)",144,145,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('ZipArchiveInputStream(java.io.InputStream,java.lang.String,boolean,boolean)',)",77,165,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('<clinit>()',)",691,693,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('getNextZipEntry()',)",168,248,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('processZip64Extra(org.apache.commons.compress.archivers.zip.ZipLong,org.apache.commons.compress.archivers.zip.ZipLong)',)",257,274,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('getNextEntry()',)",279,279,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('canReadEntryData(org.apache.commons.compress.archivers.ArchiveEntry)',)",291,297,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('read(byte[],int,int)',)",302,325,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readStored(byte[],int,int)',)",334,366,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readDeflated(byte[],int,int)',)",374,394,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('close()',)",399,404,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('skip(long)',)",423,436,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('matches(byte[],int)',)",451,455,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('checksig(byte[],byte[])',)",460,465,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('closeEntry()',)",487,524,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('drainCurrentEntryData()',)",531,544,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('getBytesInflated()',)",562,568,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('fill()',)",572,579,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readFully(byte[])',)",582,590,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readDataDescriptor()',)",593,627,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('supportsDataDescriptorFor(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",637,637,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readStoredEntry()',)",660,689,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('bufferContainsSignature(java.io.ByteArrayOutputStream,int,int,int)',)",707,734,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('cacheBytesRead(java.io.ByteArrayOutputStream,int,int,int)',)",748,757,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('pushback(byte[],int,int)',)",762,764,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('ZipLong(long)',)",69,71,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('ZipLong(byte[])',)",78,79,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('ZipLong(byte[],int)',)",86,88,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('<clinit>()',)",47,63,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('getBytes()',)",95,95,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('getValue()',)",103,103,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('getBytes(long)',)",112,117,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('getValue(byte[],int)',)",127,131,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('getValue(byte[])',)",140,140,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('equals(java.lang.Object)',)",150,153,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('hashCode()',)",162,162,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('clone()',)",168,171,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('toString()',)",177,177,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('ZipArchiveOutputStream(java.io.OutputStream)',)",79,255,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('ZipArchiveOutputStream(java.io.File)',)",79,282,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('<clinit>()',)",173,1187,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeZip64CentralDirectory()',)",1196,1255,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeOut(byte[])',)",1263,1264,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeOut(byte[],int,int)',)",1275,1280,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('deflateUntilInputIsNeeded()',)",1283,1286,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeVersionNeededToExtractAndGeneralPurposeBits(int,boolean,boolean)',)",1297,1315,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('createArchiveEntry(java.io.File,java.lang.String)',)",1331,1334,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('getZip64Extra(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1345,1366,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('hasZip64Extra(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1376,1376,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('getEffectiveZip64Mode(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1389,1395,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('getEntryEncoding(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1399,1400,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('getName(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1405,1405,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('destroy()',)",1416,1422,0.0
org.apache.commons.compress.archivers.jar.JarArchiveInputStream,"('JarArchiveInputStream(java.io.InputStream)',)",36,37,0.0
org.apache.commons.compress.archivers.jar.JarArchiveInputStream,"('getNextJarEntry()',)",40,41,0.0
org.apache.commons.compress.archivers.jar.JarArchiveInputStream,"('getNextEntry()',)",46,46,0.0
org.apache.commons.compress.archivers.jar.JarArchiveInputStream,"('matches(byte[],int)',)",60,60,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('ArArchiveInputStream(java.io.InputStream)',)",38,65,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('<clinit>()',)",308,308,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('getNextArEntry()',)",75,168,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('getExtendedName(int)',)",179,190,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('asLong(byte[])',)",193,193,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('asInt(byte[])',)",197,197,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('asInt(byte[],boolean)',)",201,201,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('asInt(byte[],int)',)",205,205,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('asInt(byte[],int,boolean)',)",209,213,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('getNextEntry()',)",224,224,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('close()',)",234,239,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('read(byte[],int,int)',)",248,260,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('matches(byte[],int)',)",276,304,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('isBSDLongName(java.lang.String)',)",336,336,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('getBSDLongName(java.lang.String)',)",348,362,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('isGNUStringTable(java.lang.String)',)",385,385,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('readGNUStringTable(byte[])',)",394,401,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('isGNULongName(java.lang.String)',)",413,413,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('CpioArchiveInputStream(java.io.InputStream)',)",66,88,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('available()',)",104,108,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('close()',)",119,123,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('closeEntry()',)",134,140,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('ensureOpen()',)",149,152,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('getNextCPIOEntry()',)",164,201,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('skip(int)',)",205,209,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('read(byte[],int,int)',)",230,264,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readFully(byte[],int,int)',)",269,281,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readBinaryLong(int,boolean)',)",286,288,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readAsciiLong(int,int)',)",293,295,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readNewEntry(boolean)',)",301,330,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readOldAsciiEntry()',)",334,355,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readOldBinaryEntry(boolean)',)",360,382,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readCString(int)',)",386,388,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('skip(long)',)",404,423,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('getNextEntry()',)",429,429,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('matches(byte[],int)',)",446,486,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('DumpArchiveInputStream(java.io.InputStream)',)",52,117,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('getCount()',)",122,122,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('getBytesRead()',)",127,127,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('getSummary()',)",134,134,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('readCLRI()',)",141,159,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('readBITS()',)",165,183,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('getNextDumpEntry()',)",189,189,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('getNextEntry()',)",197,287,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('readDirectoryEntry(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)',)",295,376,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('getPath(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)',)",387,419,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('read(byte[],int,int)',)",437,488,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('close()',)",496,500,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('matches(byte[],int)',)",509,519,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveUtil,"('DumpArchiveUtil()',)",29,30,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveUtil,"('calculateChecksum(byte[])',)",39,45,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveUtil,"('verify(byte[])',)",56,69,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveUtil,"('getIno(byte[])',)",78,78,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveUtil,"('convert64(byte[],int)',)",89,99,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveUtil,"('convert32(byte[],int)',)",110,116,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveUtil,"('convert16(byte[],int)',)",127,131,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('TarArchiveInputStream(java.io.InputStream)',)",64,65,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('TarArchiveInputStream(java.io.InputStream,java.lang.String)',)",74,75,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('TarArchiveInputStream(java.io.InputStream,int)',)",83,84,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('TarArchiveInputStream(java.io.InputStream,int,java.lang.String)',)",95,96,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('TarArchiveInputStream(java.io.InputStream,int,int)',)",105,106,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('TarArchiveInputStream(java.io.InputStream,int,int,java.lang.String)',)",117,122,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('close()',)",130,131,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('getRecordSize()',)",139,139,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('available()',)",156,159,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('skip(long)',)",178,188,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('reset()',)",196,196,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('getNextTarEntry()',)",212,283,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('getRecord()',)",299,311,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('paxHeaders()',)",315,318,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('parsePaxHeaders(java.io.InputStream)',)",321,363,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('applyPaxHeadersToCurrentEntry(java.util.Map)',)",378,403,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('readGNUSparse()',)",418,432,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('getNextEntry()',)",436,436,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('read(byte[],int,int)',)",454,517,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('canReadEntryData(org.apache.commons.compress.archivers.ArchiveEntry)',)",527,531,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('getCurrentEntry()',)",535,535,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('setCurrentEntry(org.apache.commons.compress.archivers.tar.TarArchiveEntry)',)",539,540,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('isAtEOF()',)",543,543,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('setAtEOF(boolean)',)",547,548,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('matches(byte[],int)',)",560,594,0.0
org.apache.commons.compress.archivers.ArchiveException,"('ArchiveException(java.lang.String)',)",37,38,0.0
org.apache.commons.compress.archivers.ArchiveException,"('ArchiveException(java.lang.String,java.lang.Exception)',)",49,51,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('CpioArchiveOutputStream(java.io.OutputStream,short)',)",99,100,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('CpioArchiveOutputStream(java.io.OutputStream,short,int)',)",66,129,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('CpioArchiveOutputStream(java.io.OutputStream)',)",139,140,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('ensureOpen()',)",149,152,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)',)",170,195,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeHeader(org.apache.commons.compress.archivers.cpio.CpioArchiveEntry)',)",198,220,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeNewEntry(org.apache.commons.compress.archivers.cpio.CpioArchiveEntry)',)",223,253,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeOldAsciiEntry(org.apache.commons.compress.archivers.cpio.CpioArchiveEntry)',)",257,283,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeOldBinaryEntry(org.apache.commons.compress.archivers.cpio.CpioArchiveEntry,boolean)',)",287,314,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('closeArchiveEntry()',)",324,347,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('write(byte[],int,int)',)",366,387,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('finish()',)",400,420,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('close()',)",431,439,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('pad(int)',)",442,447,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeBinaryLong(long,int,boolean)',)",451,454,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeAsciiLong(long,int,int)',)",458,480,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeCString(java.lang.String)',)",488,492,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('createArchiveEntry(java.io.File,java.lang.String)',)",502,505,0.0
org.apache.commons.compress.archivers.zip.ZipEncodingHelper,"('ZipEncodingHelper()',)",32,39,0.0
org.apache.commons.compress.archivers.zip.ZipEncodingHelper,"('<clinit>()',)",70,203,0.0
org.apache.commons.compress.archivers.zip.ZipEncodingHelper,"('getZipEncoding(java.lang.String)',)",215,235,0.0
org.apache.commons.compress.archivers.zip.ZipEncodingHelper,"('isUTF8(java.lang.String)',)",244,248,0.0
org.apache.commons.compress.archivers.zip.FallbackZipEncoding,"('FallbackZipEncoding()',)",50,52,0.0
org.apache.commons.compress.archivers.zip.FallbackZipEncoding,"('FallbackZipEncoding(java.lang.String)',)",60,62,0.0
org.apache.commons.compress.archivers.zip.FallbackZipEncoding,"('canEncode(java.lang.String)',)",69,69,0.0
org.apache.commons.compress.archivers.zip.FallbackZipEncoding,"('encode(java.lang.String)',)",77,80,0.0
org.apache.commons.compress.archivers.zip.FallbackZipEncoding,"('decode(byte[])',)",89,92,0.0
org.apache.commons.compress.archivers.jar.JarArchiveOutputStream,"('JarArchiveOutputStream(java.io.OutputStream)',)",38,42,0.0
org.apache.commons.compress.archivers.jar.JarArchiveOutputStream,"('putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)',)",47,52,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('TarArchiveOutputStream(java.io.OutputStream)',)",93,94,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('TarArchiveOutputStream(java.io.OutputStream,java.lang.String)',)",103,104,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('TarArchiveOutputStream(java.io.OutputStream,int)',)",112,113,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('TarArchiveOutputStream(java.io.OutputStream,int,java.lang.String)',)",124,125,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('TarArchiveOutputStream(java.io.OutputStream,int,int)',)",134,135,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('TarArchiveOutputStream(java.io.OutputStream,int,int,java.lang.String)',)",69,154,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('setLongFileMode(int)',)",164,165,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('setBigNumberMode(int)',)",176,177,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('setAddPaxHeadersForNonAsciiNames(boolean)',)",184,185,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('getCount()',)",190,190,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('getBytesWritten()',)",195,195,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('finish()',)",209,220,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('close()',)",228,237,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('getRecordSize()',)",245,245,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)',)",263,328,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('closeArchiveEntry()',)",342,366,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('write(byte[],int,int)',)",384,446,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('writePaxHeaders(java.lang.String,java.util.Map)',)",454,487,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('stripTo7Bits(java.lang.String)',)",490,498,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('writeEOFRecord()',)",506,511,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('flush()',)",515,516,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('createArchiveEntry(java.io.File,java.lang.String)',)",522,525,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('addPaxHeadersForBigNumbers(java.util.Map,org.apache.commons.compress.archivers.tar.TarArchiveEntry)',)",530,546,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('addPaxHeaderForBigNumber(java.util.Map,java.lang.String,long,long)',)",551,554,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('failForBigNumbers(org.apache.commons.compress.archivers.tar.TarArchiveEntry)',)",557,568,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('failForBigNumber(java.lang.String,long,long)',)",571,576,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('TarBuffer(java.io.InputStream)',)",63,64,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('TarBuffer(java.io.InputStream,int)',)",72,73,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('TarBuffer(java.io.InputStream,int,int)',)",82,83,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('TarBuffer(java.io.OutputStream)',)",90,91,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('TarBuffer(java.io.OutputStream,int)',)",99,100,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('TarBuffer(java.io.OutputStream,int,int)',)",109,110,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('TarBuffer(java.io.InputStream,java.io.OutputStream,int,int)',)",115,130,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('getBlockSize()',)",137,137,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('getRecordSize()',)",145,145,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('isEOFRecord(byte[])',)",156,162,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('skipRecord()',)",170,179,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('readRecord()',)",188,207,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('readBlock()',)",214,268,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('getCurrentBlockNum()',)",277,277,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('getCurrentRecordNum()',)",287,287,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('writeRecord(byte[])',)",297,320,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('writeRecord(byte[],int)',)",332,355,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('writeBlock()',)",361,371,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('flushBlock()',)",377,384,0.0
org.apache.commons.compress.archivers.tar.TarBuffer,"('close()',)",392,407,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry()',)",185,202,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry(java.lang.String)',)",211,212,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry(java.lang.String,boolean)',)",225,242,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry(java.lang.String,byte)',)",251,257,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry(java.io.File)',)",267,268,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry(java.io.File,java.lang.String)',)",278,305,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry(byte[])',)",315,317,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry(byte[],org.apache.commons.compress.archivers.zip.ZipEncoding)',)",330,332,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('equals(org.apache.commons.compress.archivers.tar.TarArchiveEntry)',)",342,342,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('equals(java.lang.Object)',)",354,357,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('hashCode()',)",367,367,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isDescendent(org.apache.commons.compress.archivers.tar.TarArchiveEntry)',)",379,379,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getName()',)",388,388,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setName(java.lang.String)',)",397,398,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setMode(int)',)",406,407,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getLinkName()',)",415,415,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setLinkName(java.lang.String)',)",426,427,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getUserId()',)",435,435,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setUserId(int)',)",444,445,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getGroupId()',)",453,453,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setGroupId(int)',)",462,463,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getUserName()',)",471,471,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setUserName(java.lang.String)',)",480,481,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getGroupName()',)",489,489,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setGroupName(java.lang.String)',)",498,499,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setIds(int,int)',)",508,510,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setNames(java.lang.String,java.lang.String)',)",519,521,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setModTime(long)',)",530,531,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setModTime(java.util.Date)',)",539,540,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getModTime()',)",548,548,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getLastModifiedDate()',)",553,553,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isCheckSumOK()',)",564,564,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getFile()',)",573,573,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getMode()',)",582,582,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getSize()',)",591,591,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setSize(long)',)",601,605,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getDevMajor()',)",614,614,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setDevMajor(int)',)",625,630,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getDevMinor()',)",639,639,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setDevMinor(int)',)",650,655,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isExtended()',)",664,664,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getRealSize()',)",673,673,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isGNUSparse()',)",682,682,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isGNULongNameEntry()',)",691,691,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isPaxHeader()',)",704,704,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isGlobalPaxHeader()',)",716,716,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isDirectory()',)",725,737,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isFile()',)",746,752,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isSymbolicLink()',)",761,761,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isLink()',)",770,770,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isCharacterDevice()',)",779,779,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isBlockDevice()',)",788,788,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isFIFO()',)",797,797,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getDirectoryEntries()',)",807,818,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('writeEntryHeader(byte[])',)",830,839,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('writeEntryHeader(byte[],org.apache.commons.compress.archivers.zip.ZipEncoding,boolean)',)",853,893,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('writeEntryHeaderField(long,byte[],int,int,boolean)',)",897,904,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('parseTarHeader(byte[])',)",916,925,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('parseTarHeader(byte[],org.apache.commons.compress.archivers.zip.ZipEncoding)',)",938,939,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('parseTarHeader(byte[],org.apache.commons.compress.archivers.zip.ZipEncoding,boolean)',)",944,1010,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('normalizeFileName(java.lang.String,boolean)',)",1018,1052,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('evaluateType(byte[])',)",1062,1068,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('TarUtils()',)",78,79,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('<clinit>()',)",40,47,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('parseOctal(byte[],int,int)',)",103,150,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('parseOctalOrBinary(byte[],int,int)',)",173,180,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('parseBinaryLong(byte[],int,int,boolean)',)",186,201,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('parseBinaryBigInteger(byte[],int,int,boolean)',)",208,221,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('parseBoolean(byte[],int)',)",235,235,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('exceptionMessage(byte[],int,int,int,byte)',)",241,244,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('parseName(byte[],int,int)',)",259,265,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('parseName(byte[],int,int,org.apache.commons.compress.archivers.zip.ZipEncoding)',)",287,298,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatNameBytes(java.lang.String,byte[],int,int)',)",318,325,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatNameBytes(java.lang.String,byte[],int,int,org.apache.commons.compress.archivers.zip.ZipEncoding)',)",351,364,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatUnsignedOctalString(long,byte[],int,int)',)",378,399,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatOctalBytes(long,byte[],int,int)',)",417,423,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatLongOctalBytes(long,byte[],int,int)',)",442,447,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatLongOctalOrBinaryBytes(long,byte[],int,int)',)",471,484,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatLongBinary(long,byte[],int,int,boolean)',)",490,506,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatBigIntegerBinary(long,byte[],int,int,boolean)',)",512,521,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatCheckSumOctalBytes(long,byte[],int,int)',)",539,545,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('computeCheckSum(byte[])',)",555,561,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('verifyCheckSum(byte[])',)",600,619,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveException,"('DumpArchiveException()',)",30,31,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveException,"('DumpArchiveException(java.lang.String)',)",34,35,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveException,"('DumpArchiveException(java.lang.Throwable)',)",38,40,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveException,"('DumpArchiveException(java.lang.String,java.lang.Throwable)',)",43,45,0.0
org.apache.commons.compress.archivers.dump.UnrecognizedFormatException,"('UnrecognizedFormatException()',)",30,31,0.0
org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException,"('UnsupportedZipFeatureException(org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature,org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",41,45,0.0
org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException,"('getFeature()',)",51,51,0.0
org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException,"('getEntry()',)",58,58,0.0
