File,Signature,StartLine,EndLine,Suspiciousness
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('ArchiveStreamFactory()',)",136,137,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('ArchiveStreamFactory(java.lang.String)',)",130,151,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('getEntryEncoding()',)",161,161,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('setEntryEncoding(java.lang.String)',)",176,180,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('createArchiveInputStream(java.lang.String,java.io.InputStream)',)",198,255,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('createArchiveOutputStream(java.lang.String,java.io.OutputStream)',)",273,314,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('createArchiveInputStream(java.io.InputStream)',)",331,397,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('ArchiveOutputStream()',)",47,54,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('write(int)',)",108,110,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('count(int)',)",119,120,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('count(long)',)",130,133,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('getCount()',)",143,143,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('getBytesWritten()',)",152,152,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('canWriteEntryData(org.apache.commons.compress.archivers.ArchiveEntry)',)",167,167,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('ArArchiveOutputStream(java.io.OutputStream)',)",42,52,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('setLongFileMode(int)',)",63,64,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('writeArchiveHeader()',)",67,69,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('closeArchiveEntry()',)",74,84,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)',)",88,111,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('fill(long,long,char)',)",114,122,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('write(java.lang.String)',)",126,128,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('writeEntryHeader(org.apache.commons.compress.archivers.ar.ArArchiveEntry)',)",133,194,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('write(byte[],int,int)',)",199,202,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('close()',)",209,214,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('createArchiveEntry(java.io.File,java.lang.String)',)",219,222,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('finish()',)",227,233,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('ArchiveUtils()',)",31,32,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('toString(org.apache.commons.compress.archivers.ArchiveEntry)',)",47,57,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('matchAsciiBuffer(java.lang.String,byte[],int,int)',)",73,77,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('matchAsciiBuffer(java.lang.String,byte[])',)",88,88,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('toAsciiBytes(java.lang.String)',)",100,102,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('toAsciiString(byte[])',)",114,116,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('toAsciiString(byte[],int,int)',)",130,132,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('isEqual(byte[],int,int,byte[],int,int,boolean)',)",152,177,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('isEqual(byte[],int,int,byte[],int,int)',)",194,194,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('isEqual(byte[],byte[])',)",205,205,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('isEqual(byte[],byte[],boolean)',)",217,217,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('isEqualWithNull(byte[],int,int,byte[],int,int)',)",234,234,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('isArrayZero(byte[],int)',)",247,252,0.0
org.apache.commons.compress.utils.IOUtils,"('IOUtils()',)",41,42,0.0
org.apache.commons.compress.utils.IOUtils,"('<clinit>()',)",38,38,0.0
org.apache.commons.compress.utils.IOUtils,"('copy(java.io.InputStream,java.io.OutputStream)',)",57,57,0.0
org.apache.commons.compress.utils.IOUtils,"('copy(java.io.InputStream,java.io.OutputStream,int)',)",74,81,0.0
org.apache.commons.compress.utils.IOUtils,"('skip(java.io.InputStream,long)',)",101,118,0.0
org.apache.commons.compress.utils.IOUtils,"('readFully(java.io.InputStream,byte[])',)",134,134,0.0
org.apache.commons.compress.utils.IOUtils,"('readFully(java.io.InputStream,byte[],int,int)',)",155,166,0.0
org.apache.commons.compress.utils.IOUtils,"('toByteArray(java.io.InputStream)',)",188,190,0.0
org.apache.commons.compress.utils.IOUtils,"('closeQuietly(java.io.Closeable)',)",199,205,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('ArchiveInputStream()',)",40,46,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('read()',)",81,82,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('count(int)',)",92,93,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('count(long)',)",103,106,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('pushedBackBytes(long)',)",115,116,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('getCount()',)",126,126,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('getBytesRead()',)",135,135,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('canReadEntryData(org.apache.commons.compress.archivers.ArchiveEntry)',)",152,152,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('ZipArchiveInputStream(java.io.InputStream)',)",167,168,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('ZipArchiveInputStream(java.io.InputStream,java.lang.String)',)",178,179,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('ZipArchiveInputStream(java.io.InputStream,java.lang.String,boolean)',)",190,191,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('ZipArchiveInputStream(java.io.InputStream,java.lang.String,boolean,boolean)',)",91,216,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('<clinit>()',)",802,804,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('getNextZipEntry()',)",219,322,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readFirstLocalFileHeader(byte[])',)",331,345,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('processZip64Extra(org.apache.commons.compress.archivers.zip.ZipLong,org.apache.commons.compress.archivers.zip.ZipLong)',)",353,367,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('getNextEntry()',)",371,371,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('canReadEntryData(org.apache.commons.compress.archivers.ArchiveEntry)',)",383,389,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('read(byte[],int,int)',)",394,431,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readStored(byte[],int,int)',)",439,470,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readDeflated(byte[],int,int)',)",477,489,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readFromInflater(byte[],int,int)',)",497,515,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('close()',)",520,525,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('skip(long)',)",544,556,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('matches(byte[],int)',)",569,573,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('checksig(byte[],byte[])',)",580,585,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('closeEntry()',)",607,642,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('drainCurrentEntryData()',)",649,659,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('getBytesInflated()',)",677,683,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('fill()',)",687,696,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readFully(byte[])',)",700,705,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readDataDescriptor()',)",708,738,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('supportsDataDescriptorFor(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",748,748,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readStoredEntry()',)",772,800,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('bufferContainsSignature(java.io.ByteArrayOutputStream,int,int,int)',)",817,843,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('cacheBytesRead(java.io.ByteArrayOutputStream,int,int,int)',)",856,864,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('pushback(byte[],int,int)',)",868,870,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('skipRemainderOfArchive()',)",897,903,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('findEocdRecord()',)",910,940,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('realSkip(long)',)",950,963,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readOneByte()',)",973,977,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('isFirstByteOfEocdSig(int)',)",981,981,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('ZipLong(long)',)",93,95,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('ZipLong(byte[])',)",102,103,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('ZipLong(byte[],int)',)",110,112,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('<clinit>()',)",50,87,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('getBytes()',)",119,119,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('getValue()',)",127,127,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('getBytes(long)',)",136,138,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('putLong(long,byte[],int)',)",151,155,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('putLong(byte[],int)',)",158,159,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('getValue(byte[],int)',)",168,172,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('getValue(byte[])',)",181,181,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('equals(java.lang.Object)',)",191,194,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('hashCode()',)",203,203,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('clone()',)",209,212,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('toString()',)",218,218,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('ZipArchiveOutputStream(java.io.OutputStream)',)",112,283,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('ZipArchiveOutputStream(java.io.File)',)",112,306,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('<clinit>()',)",151,983,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('deflate()',)",990,991,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeLocalFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",999,1000,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeLocalFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry,boolean)',)",1003,1016,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('createLocalFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry,java.nio.ByteBuffer,boolean,boolean)',)",1021,1082,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('addUnicodeExtraFields(org.apache.commons.compress.archivers.zip.ZipArchiveEntry,boolean,java.nio.ByteBuffer)',)",1094,1119,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeDataDescriptor(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1127,1139,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeCentralFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1150,1152,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('createCentralFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1156,1173,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('createCentralFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry,java.nio.ByteBuffer,long,boolean)',)",1185,1260,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('handleZip64Extra(org.apache.commons.compress.archivers.zip.ZipArchiveEntry,long,boolean)',)",1269,1285,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeCentralDirectoryEnd()',)",1295,1327,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeZip64CentralDirectory()',)",1336,1395,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeOut(byte[])',)",1403,1404,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeOut(byte[],int,int)',)",1416,1417,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('getGeneralPurposeBits(int,boolean)',)",1421,1426,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('versionNeededToExtract(int,boolean)',)",1430,1435,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('isDeflatedToOutputStream(int)',)",1441,1441,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('createArchiveEntry(java.io.File,java.lang.String)',)",1459,1462,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('getZip64Extra(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1473,1494,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('hasZip64Extra(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1504,1504,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('getEffectiveZip64Mode(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1517,1523,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('getEntryEncoding(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1527,1528,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('getName(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1533,1533,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('destroy()',)",1544,1550,0.0
org.apache.commons.compress.archivers.jar.JarArchiveInputStream,"('JarArchiveInputStream(java.io.InputStream)',)",41,42,0.0
org.apache.commons.compress.archivers.jar.JarArchiveInputStream,"('JarArchiveInputStream(java.io.InputStream,java.lang.String)',)",52,53,0.0
org.apache.commons.compress.archivers.jar.JarArchiveInputStream,"('getNextJarEntry()',)",56,57,0.0
org.apache.commons.compress.archivers.jar.JarArchiveInputStream,"('getNextEntry()',)",62,62,0.0
org.apache.commons.compress.archivers.jar.JarArchiveInputStream,"('matches(byte[],int)',)",76,76,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('ArArchiveInputStream(java.io.InputStream)',)",39,73,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('<clinit>()',)",305,305,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('getNextArEntry()',)",83,165,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('getExtendedName(int)',)",176,187,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('asLong(byte[])',)",190,190,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('asInt(byte[])',)",194,194,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('asInt(byte[],boolean)',)",198,198,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('asInt(byte[],int)',)",202,202,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('asInt(byte[],int,boolean)',)",206,210,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('getNextEntry()',)",221,221,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('close()',)",231,236,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('read(byte[],int,int)',)",245,257,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('matches(byte[],int)',)",273,301,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('isBSDLongName(java.lang.String)',)",333,333,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('getBSDLongName(java.lang.String)',)",345,352,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('isGNUStringTable(java.lang.String)',)",375,375,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('readGNUStringTable(byte[])',)",384,391,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('isGNULongName(java.lang.String)',)",403,403,0.0
org.apache.commons.compress.archivers.zip.ZipEncodingHelper,"('ZipEncodingHelper()',)",33,40,0.0
org.apache.commons.compress.archivers.zip.ZipEncodingHelper,"('<clinit>()',)",71,201,0.0
org.apache.commons.compress.archivers.zip.ZipEncodingHelper,"('getZipEncoding(java.lang.String)',)",213,233,0.0
org.apache.commons.compress.archivers.zip.ZipEncodingHelper,"('isUTF8(java.lang.String)',)",244,256,0.0
org.apache.commons.compress.archivers.zip.FallbackZipEncoding,"('FallbackZipEncoding()',)",50,52,0.0
org.apache.commons.compress.archivers.zip.FallbackZipEncoding,"('FallbackZipEncoding(java.lang.String)',)",60,62,0.0
org.apache.commons.compress.archivers.zip.FallbackZipEncoding,"('canEncode(java.lang.String)',)",69,69,0.0
org.apache.commons.compress.archivers.zip.FallbackZipEncoding,"('encode(java.lang.String)',)",77,80,0.0
org.apache.commons.compress.archivers.zip.FallbackZipEncoding,"('decode(byte[])',)",89,92,0.0
org.apache.commons.compress.utils.Charsets,"('Charsets()',)",57,57,0.0
org.apache.commons.compress.utils.Charsets,"('<clinit>()',)",98,159,0.0
org.apache.commons.compress.utils.Charsets,"('toCharset(java.nio.charset.Charset)',)",72,72,0.0
org.apache.commons.compress.utils.Charsets,"('toCharset(java.lang.String)',)",87,87,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('CpioArchiveInputStream(java.io.InputStream)',)",108,109,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('CpioArchiveInputStream(java.io.InputStream,java.lang.String)',)",123,124,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('CpioArchiveInputStream(java.io.InputStream,int)',)",138,139,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('CpioArchiveInputStream(java.io.InputStream,int,java.lang.String)',)",70,158,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('available()',)",174,178,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('close()',)",189,193,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('closeEntry()',)",206,209,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('ensureOpen()',)",218,221,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('getNextCPIOEntry()',)",233,269,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('skip(int)',)",274,277,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('read(byte[],int,int)',)",298,332,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readFully(byte[],int,int)',)",337,342,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readBinaryLong(int,boolean)',)",347,349,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readAsciiLong(int,int)',)",354,356,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readNewEntry(boolean)',)",362,391,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readOldAsciiEntry()',)",395,416,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readOldBinaryEntry(boolean)',)",421,443,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readCString(int)',)",448,451,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('skip(long)',)",467,486,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('getNextEntry()',)",491,491,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('skipRemainderOfLastBlock()',)",498,508,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('matches(byte[],int)',)",527,567,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('TarArchiveInputStream(java.io.InputStream)',)",86,87,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('TarArchiveInputStream(java.io.InputStream,java.lang.String)',)",96,98,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('TarArchiveInputStream(java.io.InputStream,int)',)",106,107,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('TarArchiveInputStream(java.io.InputStream,int,java.lang.String)',)",118,119,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('TarArchiveInputStream(java.io.InputStream,int,int)',)",128,129,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('TarArchiveInputStream(java.io.InputStream,int,int,java.lang.String)',)",52,147,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('close()',)",155,156,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('getRecordSize()',)",164,164,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('available()',)",181,187,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('skip(long)',)",209,217,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('markSupported()',)",227,227,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('mark(int)',)",237,237,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('reset()',)",244,244,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('getNextTarEntry()',)",260,327,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('skipRecordPadding()',)",335,341,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('getLongNameData()',)",351,373,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('getRecord()',)",391,398,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('isEOFRecord(byte[])',)",409,409,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('readRecord()',)",420,428,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('paxHeaders()',)",432,435,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('parsePaxHeaders(java.io.InputStream)',)",438,481,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('applyPaxHeadersToCurrentEntry(java.util.Map)',)",496,521,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('readGNUSparse()',)",536,550,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('isDirectory()',)",553,553,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('getNextEntry()',)",565,565,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('tryToConsumeSecondEOFRecord()',)",579,592,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('read(byte[],int,int)',)",609,633,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('canReadEntryData(org.apache.commons.compress.archivers.ArchiveEntry)',)",643,647,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('getCurrentEntry()',)",656,656,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('setCurrentEntry(org.apache.commons.compress.archivers.tar.TarArchiveEntry)',)",660,661,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('isAtEOF()',)",664,664,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('setAtEOF(boolean)',)",668,669,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('consumeRemainderOfLastBlock()',)",677,682,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('matches(byte[],int)',)",694,728,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('ArjArchiveInputStream(java.io.InputStream,java.lang.String)',)",48,73,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('ArjArchiveInputStream(java.io.InputStream)',)",83,84,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('close()',)",88,89,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('read8(java.io.DataInputStream)',)",92,94,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('read16(java.io.DataInputStream)',)",98,100,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('read32(java.io.DataInputStream)',)",104,106,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('readString(java.io.DataInputStream)',)",110,119,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('readFully(java.io.DataInputStream,byte[])',)",125,127,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('readHeader()',)",130,155,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('readMainHeader()',)",159,212,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('readLocalFileHeader()',)",216,267,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('readExtraData(int,java.io.DataInputStream,org.apache.commons.compress.archivers.arj.LocalFileHeader)',)",272,282,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('matches(byte[],int)',)",294,294,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('getArchiveName()',)",304,304,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('getArchiveComment()',)",312,312,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('getNextEntry()',)",317,335,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('canReadEntryData(org.apache.commons.compress.archivers.ArchiveEntry)',)",341,341,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('read(byte[],int,int)',)",347,353,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('DumpArchiveInputStream(java.io.InputStream)',)",90,91,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('DumpArchiveInputStream(java.io.InputStream,java.lang.String)',)",59,149,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('getCount()',)",154,154,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('getBytesRead()',)",159,159,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('getSummary()',)",167,167,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('readCLRI()',)",174,192,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('readBITS()',)",198,216,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('getNextDumpEntry()',)",224,224,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('getNextEntry()',)",229,317,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('readDirectoryEntry(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)',)",325,406,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('getPath(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)',)",417,449,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('read(byte[],int,int)',)",467,522,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('close()',)",530,534,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('matches(byte[],int)',)",546,556,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveUtil,"('DumpArchiveUtil()',)",31,32,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveUtil,"('calculateChecksum(byte[])',)",41,47,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveUtil,"('verify(byte[])',)",58,71,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveUtil,"('getIno(byte[])',)",80,80,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveUtil,"('convert64(byte[],int)',)",91,101,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveUtil,"('convert32(byte[],int)',)",112,118,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveUtil,"('convert16(byte[],int)',)",129,133,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveUtil,"('decode(org.apache.commons.compress.archivers.zip.ZipEncoding,byte[],int,int)',)",141,143,0.0
org.apache.commons.compress.archivers.ArchiveException,"('ArchiveException(java.lang.String)',)",37,38,0.0
org.apache.commons.compress.archivers.ArchiveException,"('ArchiveException(java.lang.String,java.lang.Exception)',)",49,51,0.0
org.apache.commons.compress.archivers.StreamingNotSupportedException,"('StreamingNotSupportedException(java.lang.String)',)",38,40,0.0
org.apache.commons.compress.archivers.StreamingNotSupportedException,"('getFormat()',)",48,48,0.0
org.apache.commons.compress.archivers.sevenz.SevenZFile,"('SevenZFile(java.io.File,byte[])',)",74,111,0.0
org.apache.commons.compress.archivers.sevenz.SevenZFile,"('SevenZFile(java.io.File)',)",120,121,0.0
org.apache.commons.compress.archivers.sevenz.SevenZFile,"('close()',)",128,139,0.0
org.apache.commons.compress.archivers.sevenz.SevenZFile,"('getNextEntry()',)",149,155,0.0
org.apache.commons.compress.archivers.sevenz.SevenZFile,"('readHeaders(byte[])',)",159,206,0.0
org.apache.commons.compress.archivers.sevenz.SevenZFile,"('readStartHeader(long)',)",210,221,0.0
org.apache.commons.compress.archivers.sevenz.SevenZFile,"('readHeader(java.io.DataInput,org.apache.commons.compress.archivers.sevenz.Archive)',)",227,252,0.0
org.apache.commons.compress.archivers.sevenz.SevenZFile,"('readArchiveProperties(java.io.DataInput)',)",256,263,0.0
org.apache.commons.compress.archivers.sevenz.SevenZFile,"('readEncodedHeader(java.io.DataInputStream,org.apache.commons.compress.archivers.sevenz.Archive,byte[])',)",267,296,0.0
org.apache.commons.compress.archivers.sevenz.SevenZFile,"('readStreamsInfo(java.io.DataInput,org.apache.commons.compress.archivers.sevenz.Archive)',)",300,323,0.0
org.apache.commons.compress.archivers.sevenz.SevenZFile,"('readPackInfo(java.io.DataInput,org.apache.commons.compress.archivers.sevenz.Archive)',)",326,352,0.0
org.apache.commons.compress.archivers.sevenz.SevenZFile,"('readUnpackInfo(java.io.DataInput,org.apache.commons.compress.archivers.sevenz.Archive)',)",355,400,0.0
org.apache.commons.compress.archivers.sevenz.SevenZFile,"('readSubStreamsInfo(java.io.DataInput,org.apache.commons.compress.archivers.sevenz.Archive)',)",403,483,0.0
org.apache.commons.compress.archivers.sevenz.SevenZFile,"('readFolder(java.io.DataInput)',)",486,561,0.0
org.apache.commons.compress.archivers.sevenz.SevenZFile,"('readAllOrBits(java.io.DataInput,int)',)",565,575,0.0
org.apache.commons.compress.archivers.sevenz.SevenZFile,"('readBits(java.io.DataInput,int)',)",579,590,0.0
org.apache.commons.compress.archivers.sevenz.SevenZFile,"('readFilesInfo(java.io.DataInput,org.apache.commons.compress.archivers.sevenz.Archive)',)",594,754,0.0
org.apache.commons.compress.archivers.sevenz.SevenZFile,"('calculateStreamMap(org.apache.commons.compress.archivers.sevenz.Archive)',)",757,807,0.0
org.apache.commons.compress.archivers.sevenz.SevenZFile,"('buildDecodingStream()',)",810,843,0.0
org.apache.commons.compress.archivers.sevenz.SevenZFile,"('drainPreviousEntry()',)",846,852,0.0
org.apache.commons.compress.archivers.sevenz.SevenZFile,"('buildDecoderStack(org.apache.commons.compress.archivers.sevenz.Folder,long,int,org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry)',)",856,877,0.0
org.apache.commons.compress.archivers.sevenz.SevenZFile,"('read()',)",889,892,0.0
org.apache.commons.compress.archivers.sevenz.SevenZFile,"('read(byte[])',)",904,904,0.0
org.apache.commons.compress.archivers.sevenz.SevenZFile,"('read(byte[],int,int)',)",918,921,0.0
org.apache.commons.compress.archivers.sevenz.SevenZFile,"('readUint64(java.io.DataInput)',)",926,937,0.0
org.apache.commons.compress.archivers.sevenz.SevenZFile,"('matches(byte[],int)',)",951,960,0.0
org.apache.commons.compress.archivers.sevenz.SevenZFile,"('skipBytesFully(java.io.DataInput,long)',)",964,984,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry()',)",118,197,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry(java.lang.String)',)",206,207,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry(java.lang.String,boolean)',)",220,232,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry(java.lang.String,byte)',)",241,242,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry(java.lang.String,byte,boolean)',)",255,261,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry(java.io.File)',)",271,272,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry(java.io.File,java.lang.String)',)",118,304,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry(byte[])',)",314,316,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry(byte[],org.apache.commons.compress.archivers.zip.ZipEncoding)',)",330,332,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('equals(org.apache.commons.compress.archivers.tar.TarArchiveEntry)',)",342,342,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('equals(java.lang.Object)',)",354,357,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('hashCode()',)",367,367,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isDescendent(org.apache.commons.compress.archivers.tar.TarArchiveEntry)',)",379,379,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getName()',)",388,388,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setName(java.lang.String)',)",397,398,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setMode(int)',)",406,407,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getLinkName()',)",415,415,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setLinkName(java.lang.String)',)",426,427,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getUserId()',)",438,438,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setUserId(int)',)",447,448,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getLongUserId()',)",457,457,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setUserId(long)',)",467,468,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getGroupId()',)",479,479,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setGroupId(int)',)",488,489,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getLongGroupId()',)",498,498,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setGroupId(long)',)",508,509,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getUserName()',)",517,517,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setUserName(java.lang.String)',)",526,527,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getGroupName()',)",535,535,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setGroupName(java.lang.String)',)",544,545,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setIds(int,int)',)",554,556,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setNames(java.lang.String,java.lang.String)',)",565,567,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setModTime(long)',)",576,577,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setModTime(java.util.Date)',)",585,586,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getModTime()',)",594,594,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getLastModifiedDate()',)",598,598,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isCheckSumOK()',)",609,609,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getFile()',)",618,618,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getMode()',)",627,627,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getSize()',)",636,636,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setSize(long)',)",646,650,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getDevMajor()',)",659,659,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setDevMajor(int)',)",670,675,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getDevMinor()',)",684,684,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setDevMinor(int)',)",695,700,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isExtended()',)",709,709,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getRealSize()',)",718,718,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isGNUSparse()',)",727,727,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isGNULongLinkEntry()',)",736,736,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isGNULongNameEntry()',)",745,745,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isPaxHeader()',)",757,757,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isGlobalPaxHeader()',)",769,769,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isDirectory()',)",778,790,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isFile()',)",800,806,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isSymbolicLink()',)",816,816,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isLink()',)",826,826,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isCharacterDevice()',)",836,836,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isBlockDevice()',)",846,846,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isFIFO()',)",856,856,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getDirectoryEntries()',)",866,877,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('writeEntryHeader(byte[])',)",889,898,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('writeEntryHeader(byte[],org.apache.commons.compress.archivers.zip.ZipEncoding,boolean)',)",913,953,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('writeEntryHeaderField(long,byte[],int,int,boolean)',)",957,964,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('parseTarHeader(byte[])',)",976,985,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('parseTarHeader(byte[],org.apache.commons.compress.archivers.zip.ZipEncoding)',)",999,1000,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('parseTarHeader(byte[],org.apache.commons.compress.archivers.zip.ZipEncoding,boolean)',)",1005,1071,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('normalizeFileName(java.lang.String,boolean)',)",1079,1113,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('evaluateType(byte[])',)",1123,1129,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('TarUtils()',)",77,78,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('<clinit>()',)",40,47,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('parseOctal(byte[],int,int)',)",102,144,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('parseOctalOrBinary(byte[],int,int)',)",167,174,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('parseBinaryLong(byte[],int,int,boolean)',)",180,195,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('parseBinaryBigInteger(byte[],int,int,boolean)',)",202,215,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('parseBoolean(byte[],int)',)",229,229,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('exceptionMessage(byte[],int,int,int,byte)',)",242,246,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('parseName(byte[],int,int)',)",261,267,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('parseName(byte[],int,int,org.apache.commons.compress.archivers.zip.ZipEncoding)',)",290,301,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatNameBytes(java.lang.String,byte[],int,int)',)",321,328,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatNameBytes(java.lang.String,byte[],int,int,org.apache.commons.compress.archivers.zip.ZipEncoding)',)",355,368,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatUnsignedOctalString(long,byte[],int,int)',)",382,403,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatOctalBytes(long,byte[],int,int)',)",421,427,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatLongOctalBytes(long,byte[],int,int)',)",446,451,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatLongOctalOrBinaryBytes(long,byte[],int,int)',)",475,488,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatLongBinary(long,byte[],int,int,boolean)',)",494,510,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatBigIntegerBinary(long,byte[],int,int,boolean)',)",516,525,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatCheckSumOctalBytes(long,byte[],int,int)',)",543,549,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('computeCheckSum(byte[])',)",559,565,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('verifyCheckSum(byte[])',)",594,612,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('CpioArchiveOutputStream(java.io.OutputStream,short)',)",111,112,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('CpioArchiveOutputStream(java.io.OutputStream,short,int)',)",129,130,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('CpioArchiveOutputStream(java.io.OutputStream,short,int,java.lang.String)',)",69,165,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('CpioArchiveOutputStream(java.io.OutputStream)',)",175,176,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('CpioArchiveOutputStream(java.io.OutputStream,java.lang.String)',)",190,191,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('ensureOpen()',)",200,203,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)',)",221,246,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeHeader(org.apache.commons.compress.archivers.cpio.CpioArchiveEntry)',)",249,273,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeNewEntry(org.apache.commons.compress.archivers.cpio.CpioArchiveEntry)',)",276,306,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeOldAsciiEntry(org.apache.commons.compress.archivers.cpio.CpioArchiveEntry)',)",310,336,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeOldBinaryEntry(org.apache.commons.compress.archivers.cpio.CpioArchiveEntry,boolean)',)",340,367,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('closeArchiveEntry()',)",377,400,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('write(byte[],int,int)',)",419,440,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('finish()',)",453,473,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('close()',)",484,492,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('pad(int)',)",495,500,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeBinaryLong(long,int,boolean)',)",504,507,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeAsciiLong(long,int,int)',)",511,533,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeCString(java.lang.String)',)",541,546,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('createArchiveEntry(java.io.File,java.lang.String)',)",556,559,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('TarArchiveOutputStream(java.io.OutputStream)',)",101,102,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('TarArchiveOutputStream(java.io.OutputStream,java.lang.String)',)",111,112,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('TarArchiveOutputStream(java.io.OutputStream,int)',)",120,121,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('TarArchiveOutputStream(java.io.OutputStream,int,java.lang.String)',)",132,133,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('TarArchiveOutputStream(java.io.OutputStream,int,int)',)",142,143,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('TarArchiveOutputStream(java.io.OutputStream,int,int,java.lang.String)',)",71,164,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('setLongFileMode(int)',)",174,175,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('setBigNumberMode(int)',)",186,187,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('setAddPaxHeadersForNonAsciiNames(boolean)',)",195,196,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('getCount()',)",201,201,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('getBytesWritten()',)",206,206,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('finish()',)",220,232,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('close()',)",240,248,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('getRecordSize()',)",256,256,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)',)",274,322,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('closeArchiveEntry()',)",336,360,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('write(byte[],int,int)',)",378,443,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('writePaxHeaders(org.apache.commons.compress.archivers.tar.TarArchiveEntry,java.lang.String,java.util.Map)',)",452,486,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('stripTo7Bits(java.lang.String)',)",489,499,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('shouldBeReplaced(char)',)",507,507,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('writeEOFRecord()',)",517,519,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('flush()',)",523,524,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('createArchiveEntry(java.io.File,java.lang.String)',)",529,532,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('writeRecord(byte[])',)",542,551,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('writeRecord(byte[],int)',)",564,573,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('padAsNeeded()',)",576,582,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('addPaxHeadersForBigNumbers(java.util.Map,org.apache.commons.compress.archivers.tar.TarArchiveEntry)',)",586,602,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('addPaxHeaderForBigNumber(java.util.Map,java.lang.String,long,long)',)",607,610,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('failForBigNumbers(org.apache.commons.compress.archivers.tar.TarArchiveEntry)',)",613,624,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('failForBigNumber(java.lang.String,long,long)',)",627,628,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('failForBigNumberWithPosixMessage(java.lang.String,long,long)',)",631,632,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('failForBigNumber(java.lang.String,long,long,java.lang.String)',)",635,640,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('handleLongName(org.apache.commons.compress.archivers.tar.TarArchiveEntry,java.lang.String,java.util.Map,java.lang.String,byte,java.lang.String)',)",668,692,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('transferModTime(org.apache.commons.compress.archivers.tar.TarArchiveEntry,org.apache.commons.compress.archivers.tar.TarArchiveEntry)',)",696,702,0.0
org.apache.commons.compress.archivers.jar.JarArchiveOutputStream,"('JarArchiveOutputStream(java.io.OutputStream)',)",38,42,0.0
org.apache.commons.compress.archivers.jar.JarArchiveOutputStream,"('JarArchiveOutputStream(java.io.OutputStream,java.lang.String)',)",38,54,0.0
org.apache.commons.compress.archivers.jar.JarArchiveOutputStream,"('putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)',)",59,64,0.0
org.apache.commons.compress.utils.BoundedInputStream,"('BoundedInputStream(java.io.InputStream,long)',)",38,41,0.0
org.apache.commons.compress.utils.BoundedInputStream,"('read()',)",45,49,0.0
org.apache.commons.compress.utils.BoundedInputStream,"('read(byte[],int,int)',)",55,66,0.0
org.apache.commons.compress.utils.BoundedInputStream,"('close()',)",73,73,0.0
org.apache.commons.compress.utils.ChecksumVerifyingInputStream,"('ChecksumVerifyingInputStream(java.util.zip.Checksum,java.io.InputStream,long,long)',)",37,42,0.0
org.apache.commons.compress.utils.ChecksumVerifyingInputStream,"('read()',)",52,63,0.0
org.apache.commons.compress.utils.ChecksumVerifyingInputStream,"('read(byte[])',)",74,74,0.0
org.apache.commons.compress.utils.ChecksumVerifyingInputStream,"('read(byte[],int,int)',)",85,93,0.0
org.apache.commons.compress.utils.ChecksumVerifyingInputStream,"('skip(long)',)",99,102,0.0
org.apache.commons.compress.utils.ChecksumVerifyingInputStream,"('close()',)",108,109,0.0
org.apache.commons.compress.utils.CRC32VerifyingInputStream,"('CRC32VerifyingInputStream(java.io.InputStream,long,int)',)",37,38,0.0
org.apache.commons.compress.utils.CRC32VerifyingInputStream,"('CRC32VerifyingInputStream(java.io.InputStream,long,long)',)",47,48,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveException,"('DumpArchiveException()',)",30,31,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveException,"('DumpArchiveException(java.lang.String)',)",34,35,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveException,"('DumpArchiveException(java.lang.Throwable)',)",37,39,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveException,"('DumpArchiveException(java.lang.String,java.lang.Throwable)',)",42,44,0.0
org.apache.commons.compress.archivers.dump.UnrecognizedFormatException,"('UnrecognizedFormatException()',)",30,31,0.0
org.apache.commons.compress.archivers.sevenz.BoundedRandomAccessFileInputStream,"('BoundedRandomAccessFileInputStream(java.io.RandomAccessFile,long)',)",29,32,0.0
org.apache.commons.compress.archivers.sevenz.BoundedRandomAccessFileInputStream,"('read()',)",36,40,0.0
org.apache.commons.compress.archivers.sevenz.BoundedRandomAccessFileInputStream,"('read(byte[],int,int)',)",46,57,0.0
org.apache.commons.compress.archivers.sevenz.BoundedRandomAccessFileInputStream,"('close()',)",63,63,0.0
org.apache.commons.compress.compressors.CompressorInputStream,"('CompressorInputStream()',)",23,24,0.0
org.apache.commons.compress.compressors.CompressorInputStream,"('count(int)',)",35,36,0.0
org.apache.commons.compress.compressors.CompressorInputStream,"('count(long)',)",45,48,0.0
org.apache.commons.compress.compressors.CompressorInputStream,"('pushedBackBytes(long)',)",57,58,0.0
org.apache.commons.compress.compressors.CompressorInputStream,"('getCount()',)",68,68,0.0
org.apache.commons.compress.compressors.CompressorInputStream,"('getBytesRead()',)",78,78,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('BZip2CompressorInputStream(java.io.InputStream)',)",110,111,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('BZip2CompressorInputStream(java.io.InputStream,boolean)',)",60,135,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('read()',)",139,144,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('read(byte[],int,int)',)",156,182,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('makeMaps()',)",186,198,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('read0()',)",201,227,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('init(boolean)',)",232,259,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('initBlock()',)",272,320,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('endBlock()',)",323,339,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('complete()',)",342,352,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('close()',)",357,368,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('bsR(int)',)",371,391,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('bsGetBit()',)",395,411,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('bsGetUByte()',)",415,415,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('bsGetInt()',)",419,419,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('hbCreateDecodeTables(int[],int[],int[],char[],int,int,int)',)",428,461,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('recvDecodingTables()',)",464,542,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('createHuffmanDecodingTables(int,int)',)",549,573,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('getAndMoveToFrontDecode()',)",576,762,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('getAndMoveToFrontDecode0(int)',)",765,794,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('setupBlock()',)",798,831,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('setupRandPartA()',)",835,855,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('setupNoRandPartA()',)",860,873,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('setupRandPartB()',)",878,901,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('setupRandPartC()',)",906,914,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('setupNoRandPartB()',)",919,928,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('setupNoRandPartC()',)",933,942,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('matches(byte[],int)',)",1021,1037,0.0
org.apache.commons.compress.archivers.zip.ExplodingInputStream,"('ExplodingInputStream(int,int,java.io.InputStream)',)",63,84,0.0
org.apache.commons.compress.archivers.zip.ExplodingInputStream,"('init()',)",92,102,0.0
org.apache.commons.compress.archivers.zip.ExplodingInputStream,"('read()',)",106,110,0.0
org.apache.commons.compress.archivers.zip.ExplodingInputStream,"('fillBuffer()',)",118,156,0.0
org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException,"('UnsupportedZipFeatureException(org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature,org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",41,45,0.0
org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException,"('UnsupportedZipFeatureException(org.apache.commons.compress.archivers.zip.ZipMethod,org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",56,60,0.0
org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException,"('UnsupportedZipFeatureException(org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature)',)",70,73,0.0
org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException,"('getFeature()',)",80,80,0.0
org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException,"('getEntry()',)",88,88,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('LZWInputStream(java.io.InputStream,java.nio.ByteOrder)',)",40,55,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('close()',)",59,60,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('read()',)",64,68,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('read(byte[],int,int)',)",73,86,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('setClearCode(int)',)",104,105,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('initializeTables(int)',)",111,121,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('readNextCode()',)",127,130,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('addEntry(int,byte,int)',)",138,143,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('addRepeatOfPreviousCode()',)",150,154,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('expandCodeToOutputStack(int,boolean)',)",163,171,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('readFromStack(byte[],int,int)',)",175,182,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('getCodeSize()',)",186,186,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('resetCodeSize()',)",190,191,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('setCodeSize(int)',)",194,195,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('incrementCodeSize()',)",198,199,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('resetPreviousCode()',)",202,203,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('getPrefix(int)',)",206,206,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('setPrefix(int,int)',)",210,211,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('getPrefixesLength()',)",214,214,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('getClearCode()',)",218,218,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('getTableSize()',)",222,222,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('setTableSize(int)',)",226,227,0.0
org.apache.commons.compress.archivers.zip.UnshrinkingInputStream,"('UnshrinkingInputStream(java.io.InputStream)',)",38,46,0.0
org.apache.commons.compress.archivers.zip.UnshrinkingInputStream,"('addEntry(int,byte)',)",50,59,0.0
org.apache.commons.compress.archivers.zip.UnshrinkingInputStream,"('partialClear()',)",63,75,0.0
org.apache.commons.compress.archivers.zip.UnshrinkingInputStream,"('decompressNextSymbol()',)",91,118,0.0
