File,Signature,StartLine,EndLine,Suspiciousness
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readFully(byte[])',)",721,726,0.08529413688423838
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('getNextZipEntry()',)",220,323,0.05497879959652065
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('setEntryEncoding(java.lang.String)',)",308,312,0.053708615552957466
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('ArjArchiveInputStream(java.io.InputStream,java.lang.String)',)",48,73,0.048999595755002526
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('readCLRI()',)",175,193,0.045825756949558406
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('readBITS()',)",199,217,0.045825756949558406
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('readMainHeader()',)",158,211,0.04259177099999599
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readFirstLocalFileHeader(byte[])',)",332,346,0.04253891014151847
org.apache.commons.compress.archivers.zip.ZipEncodingHelper,"('<clinit>()',)",71,201,0.04145838661715321
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('DumpArchiveInputStream(java.io.InputStream,java.lang.String)',)",59,150,0.04124727883979282
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('readString(java.io.DataInputStream)',)",110,119,0.040422604172722164
org.apache.commons.compress.archivers.zip.FallbackZipEncoding,"('decode(byte[])',)",91,94,0.032725379578254395
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('processZip64Extra(org.apache.commons.compress.archivers.zip.ZipLong,org.apache.commons.compress.archivers.zip.ZipLong)',)",354,368,0.03256932353875124
org.apache.commons.compress.archivers.zip.ZipUtil,"('setNameAndCommentFromExtraFields(org.apache.commons.compress.archivers.zip.ZipArchiveEntry,byte[],byte[])',)",235,253,0.03248134550047711
org.apache.commons.compress.archivers.zip.ZipEncodingHelper,"('getZipEncoding(java.lang.String)',)",213,233,0.031611517760574456
org.apache.commons.compress.utils.IOUtils,"('readFully(java.io.InputStream,byte[],int,int)',)",158,169,0.03047845835963594
org.apache.commons.compress.archivers.zip.ZipEncodingHelper,"('isUTF8(java.lang.String)',)",244,256,0.02840480641496381
org.apache.commons.compress.archivers.zip.ZipLong,"('equals(java.lang.Object)',)",191,194,0.028171808490950554
org.apache.commons.compress.archivers.zip.ZipUtil,"('getUnicodeStringIfOriginalMatches(org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,byte[])',)",265,283,0.027119868368226926
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('readHeader()',)",129,154,0.023639448585188374
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setExtraFields(org.apache.commons.compress.archivers.zip.ZipExtraField[])',)",324,334,0.02175970699446223
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setExtra(byte[])',)",537,546,0.02151657414559676
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getExtraField(org.apache.commons.compress.archivers.zip.ZipShort)',)",505,512,0.021450313195217164
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('ZipArchiveEntry(java.lang.String)',)",70,104,0.020776684098410592
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getAllExtraFieldsNoCopy()',)",382,385,0.020436826327243793
org.apache.commons.compress.archivers.zip.ExtraFieldUtils,"('ExtraFieldUtils()',)",31,277,0.020020348203756082
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setSize(long)',)",642,646,0.01926881233270155
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('useStrongEncryption(boolean)',)",147,151,0.019174124721184262
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setMethod(int)',)",214,219,0.01898886313281875
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('mergeExtraFields(org.apache.commons.compress.archivers.zip.ZipExtraField[],boolean)',)",723,747,0.01784648102304596
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('ZipArchiveOutputStream(java.io.OutputStream)',)",115,277,0.009215122259681054
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('<clinit>()',)",145,1001,0.006371818985214925
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('DumpArchiveInputStream(java.io.InputStream)',)",90,91,0.002326870537720384
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setName(java.lang.String)',)",613,618,0.0003357734447132516
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('ZipArchiveInputStream(java.io.InputStream,java.lang.String,boolean,boolean)',)",92,217,5.551115123125783e-17
org.apache.commons.compress.archivers.zip.ZipShort,"('getValue(byte[],int)',)",112,114,6.938893903907228e-18
org.apache.commons.compress.archivers.zip.X000A_NTFS,"('X000A_NTFS()',)",66,73,6.938893903907228e-18
org.apache.commons.compress.archivers.zip.PKWareExtraHeader,"('PKWareExtraHeader(org.apache.commons.compress.archivers.zip.ZipShort)',)",80,82,6.938893903907228e-18
org.apache.commons.compress.archivers.zip.ZipMethod,"('ZipMethod(java.lang.String,int,int)',)",190,192,6.938893903907228e-18
org.apache.commons.compress.archivers.zip.ZipMethod,"('<clinit>()',)",32,181,6.938893903907228e-18
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('ArchiveStreamFactory()',)",268,269,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('ArchiveStreamFactory(java.lang.String)',)",279,283,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('<clinit>()',)",97,97,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('findArchiveStreamProviders()',)",164,164,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('putAll(java.util.Set,org.apache.commons.compress.archivers.ArchiveStreamProvider,java.util.TreeMap)',)",169,172,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('serviceLoaderIterator()',)",175,175,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('toKey(java.lang.String)',)",179,179,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('findAvailableArchiveInputStreamProviders()',)",210,210,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('findAvailableArchiveOutputStreamProviders()',)",251,251,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('getEntryEncoding()',)",293,293,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('createArchiveInputStream(java.lang.String,java.io.InputStream)',)",328,328,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('createArchiveInputStream(java.lang.String,java.io.InputStream,java.lang.String)',)",335,391,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('createArchiveOutputStream(java.lang.String,java.io.OutputStream)',)",408,408,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('createArchiveOutputStream(java.lang.String,java.io.OutputStream,java.lang.String)',)",415,459,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('createArchiveInputStream(java.io.InputStream)',)",476,542,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('getArchiveInputStreamProviders()',)",546,550,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('getArchiveOutputStreamProviders()',)",554,558,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('getInputStreamArchiveNames()',)",563,563,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('getOutputStreamArchiveNames()',)",568,568,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('ArchiveOutputStream()',)",47,54,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('write(int)',)",108,110,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('count(int)',)",119,120,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('count(long)',)",130,133,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('getCount()',)",143,143,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('getBytesWritten()',)",152,152,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('canWriteEntryData(org.apache.commons.compress.archivers.ArchiveEntry)',)",167,167,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('ArArchiveOutputStream(java.io.OutputStream)',)",42,52,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('setLongFileMode(int)',)",63,64,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('writeArchiveHeader()',)",67,69,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('closeArchiveEntry()',)",74,84,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)',)",88,111,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('fill(long,long,char)',)",114,122,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('write(java.lang.String)',)",126,128,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('writeEntryHeader(org.apache.commons.compress.archivers.ar.ArArchiveEntry)',)",133,194,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('write(byte[],int,int)',)",199,202,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('close()',)",209,214,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('createArchiveEntry(java.io.File,java.lang.String)',)",219,222,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('finish()',)",227,233,0.0
org.apache.commons.compress.utils.IOUtils,"('IOUtils()',)",44,45,0.0
org.apache.commons.compress.utils.IOUtils,"('<clinit>()',)",41,41,0.0
org.apache.commons.compress.utils.IOUtils,"('copy(java.io.InputStream,java.io.OutputStream)',)",60,60,0.0
org.apache.commons.compress.utils.IOUtils,"('copy(java.io.InputStream,java.io.OutputStream,int)',)",77,84,0.0
org.apache.commons.compress.utils.IOUtils,"('skip(java.io.InputStream,long)',)",104,121,0.0
org.apache.commons.compress.utils.IOUtils,"('readFully(java.io.InputStream,byte[])',)",137,137,0.0
org.apache.commons.compress.utils.IOUtils,"('readFully(java.nio.channels.ReadableByteChannel,java.nio.ByteBuffer)',)",187,199,0.0
org.apache.commons.compress.utils.IOUtils,"('toByteArray(java.io.InputStream)',)",220,222,0.0
org.apache.commons.compress.utils.IOUtils,"('closeQuietly(java.io.Closeable)',)",231,237,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('ArchiveInputStream()',)",40,46,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('read()',)",81,82,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('count(int)',)",92,93,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('count(long)',)",103,106,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('pushedBackBytes(long)',)",115,116,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('getCount()',)",126,126,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('getBytesRead()',)",135,135,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('canReadEntryData(org.apache.commons.compress.archivers.ArchiveEntry)',)",152,152,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('ZipArchiveInputStream(java.io.InputStream)',)",168,169,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('ZipArchiveInputStream(java.io.InputStream,java.lang.String)',)",179,180,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('ZipArchiveInputStream(java.io.InputStream,java.lang.String,boolean)',)",191,192,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('<clinit>()',)",823,825,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('getNextEntry()',)",372,372,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('canReadEntryData(org.apache.commons.compress.archivers.ArchiveEntry)',)",384,390,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('read(byte[],int,int)',)",395,432,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readStored(byte[],int,int)',)",440,471,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readDeflated(byte[],int,int)',)",478,490,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readFromInflater(byte[],int,int)',)",498,516,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('close()',)",521,529,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('skip(long)',)",548,560,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('matches(byte[],int)',)",573,577,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('checksig(byte[],byte[])',)",584,589,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('closeEntry()',)",611,651,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('currentEntryHasOutstandingBytes()',)",661,661,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('drainCurrentEntryData()',)",670,680,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('getBytesInflated()',)",698,704,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('fill()',)",708,717,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readDataDescriptor()',)",729,759,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('supportsDataDescriptorFor(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",769,769,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readStoredEntry()',)",793,821,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('bufferContainsSignature(java.io.ByteArrayOutputStream,int,int,int)',)",838,864,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('cacheBytesRead(java.io.ByteArrayOutputStream,int,int,int)',)",877,885,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('pushback(byte[],int,int)',)",889,891,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('skipRemainderOfArchive()',)",918,924,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('findEocdRecord()',)",931,961,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('realSkip(long)',)",971,984,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readOneByte()',)",994,998,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('isFirstByteOfEocdSig(int)',)",1002,1002,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('ZipLong(long)',)",93,95,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('ZipLong(byte[])',)",102,103,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('ZipLong(byte[],int)',)",110,112,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('<clinit>()',)",50,87,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('getBytes()',)",119,119,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('getValue()',)",127,127,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('getBytes(long)',)",136,138,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('putLong(long,byte[],int)',)",151,155,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('putLong(byte[],int)',)",158,159,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('getValue(byte[],int)',)",168,172,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('getValue(byte[])',)",181,181,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('hashCode()',)",203,203,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('clone()',)",209,212,0.0
org.apache.commons.compress.archivers.zip.ZipLong,"('toString()',)",218,218,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('ZipArchiveOutputStream(java.io.File)',)",115,305,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('ZipArchiveOutputStream(java.nio.channels.SeekableByteChannel)',)",115,324,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('deflate()',)",1008,1009,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeLocalFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1017,1018,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeLocalFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry,boolean)',)",1021,1034,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('createLocalFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry,java.nio.ByteBuffer,boolean,boolean)',)",1039,1100,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('addUnicodeExtraFields(org.apache.commons.compress.archivers.zip.ZipArchiveEntry,boolean,java.nio.ByteBuffer)',)",1112,1137,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeDataDescriptor(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1145,1157,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeCentralFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1168,1170,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('createCentralFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1174,1192,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('createCentralFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry,java.nio.ByteBuffer,long,boolean)',)",1204,1284,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('handleZip64Extra(org.apache.commons.compress.archivers.zip.ZipArchiveEntry,long,boolean)',)",1293,1310,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeCentralDirectoryEnd()',)",1320,1352,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeZip64CentralDirectory()',)",1361,1420,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeOut(byte[])',)",1428,1429,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeOut(byte[],int,int)',)",1441,1442,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('getGeneralPurposeBits(int,boolean)',)",1446,1451,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('versionNeededToExtract(int,boolean)',)",1455,1460,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('isDeflatedToOutputStream(int)',)",1466,1466,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('createArchiveEntry(java.io.File,java.lang.String)',)",1484,1487,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('getZip64Extra(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1498,1519,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('hasZip64Extra(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1529,1529,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('getEffectiveZip64Mode(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1542,1548,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('getEntryEncoding(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1552,1553,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('getName(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1558,1558,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('destroy()',)",1569,1575,0.0
org.apache.commons.compress.archivers.jar.JarArchiveInputStream,"('JarArchiveInputStream(java.io.InputStream)',)",41,42,0.0
org.apache.commons.compress.archivers.jar.JarArchiveInputStream,"('JarArchiveInputStream(java.io.InputStream,java.lang.String)',)",52,53,0.0
org.apache.commons.compress.archivers.jar.JarArchiveInputStream,"('getNextJarEntry()',)",56,57,0.0
org.apache.commons.compress.archivers.jar.JarArchiveInputStream,"('getNextEntry()',)",62,62,0.0
org.apache.commons.compress.archivers.jar.JarArchiveInputStream,"('matches(byte[],int)',)",76,76,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('ArArchiveInputStream(java.io.InputStream)',)",39,73,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('<clinit>()',)",306,306,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('getNextArEntry()',)",83,165,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('getExtendedName(int)',)",176,187,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('asLong(byte[])',)",191,191,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('asInt(byte[])',)",195,195,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('asInt(byte[],boolean)',)",199,199,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('asInt(byte[],int)',)",203,203,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('asInt(byte[],int,boolean)',)",207,211,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('getNextEntry()',)",222,222,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('close()',)",232,237,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('read(byte[],int,int)',)",246,258,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('matches(byte[],int)',)",274,302,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('isBSDLongName(java.lang.String)',)",334,334,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('getBSDLongName(java.lang.String)',)",346,353,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('isGNUStringTable(java.lang.String)',)",376,376,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('readGNUStringTable(byte[])',)",385,392,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('isGNULongName(java.lang.String)',)",404,404,0.0
org.apache.commons.compress.archivers.zip.ZipEncodingHelper,"('ZipEncodingHelper()',)",33,40,0.0
org.apache.commons.compress.archivers.zip.FallbackZipEncoding,"('FallbackZipEncoding()',)",50,52,0.0
org.apache.commons.compress.archivers.zip.FallbackZipEncoding,"('FallbackZipEncoding(java.lang.String)',)",60,62,0.0
org.apache.commons.compress.archivers.zip.FallbackZipEncoding,"('canEncode(java.lang.String)',)",70,70,0.0
org.apache.commons.compress.archivers.zip.FallbackZipEncoding,"('encode(java.lang.String)',)",79,82,0.0
org.apache.commons.compress.utils.Charsets,"('Charsets()',)",57,57,0.0
org.apache.commons.compress.utils.Charsets,"('<clinit>()',)",98,159,0.0
org.apache.commons.compress.utils.Charsets,"('toCharset(java.nio.charset.Charset)',)",72,72,0.0
org.apache.commons.compress.utils.Charsets,"('toCharset(java.lang.String)',)",87,87,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('CpioArchiveInputStream(java.io.InputStream)',)",108,109,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('CpioArchiveInputStream(java.io.InputStream,java.lang.String)',)",123,124,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('CpioArchiveInputStream(java.io.InputStream,int)',)",138,139,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('CpioArchiveInputStream(java.io.InputStream,int,java.lang.String)',)",70,158,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('available()',)",174,178,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('close()',)",189,193,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('closeEntry()',)",206,209,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('ensureOpen()',)",218,221,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('getNextCPIOEntry()',)",233,273,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('skip(int)',)",278,281,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('read(byte[],int,int)',)",302,336,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readFully(byte[],int,int)',)",341,346,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readBinaryLong(int,boolean)',)",351,353,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readAsciiLong(int,int)',)",358,360,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readNewEntry(boolean)',)",366,397,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readOldAsciiEntry()',)",401,424,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readOldBinaryEntry(boolean)',)",429,453,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readCString(int)',)",458,461,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('skip(long)',)",477,496,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('getNextEntry()',)",501,501,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('skipRemainderOfLastBlock()',)",508,518,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('matches(byte[],int)',)",537,577,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('TarArchiveInputStream(java.io.InputStream)',)",89,90,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('TarArchiveInputStream(java.io.InputStream,java.lang.String)',)",99,101,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('TarArchiveInputStream(java.io.InputStream,int)',)",109,110,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('TarArchiveInputStream(java.io.InputStream,int,java.lang.String)',)",121,122,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('TarArchiveInputStream(java.io.InputStream,int,int)',)",131,132,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('TarArchiveInputStream(java.io.InputStream,int,int,java.lang.String)',)",52,150,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('close()',)",158,159,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('getRecordSize()',)",167,167,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('available()',)",184,190,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('skip(long)',)",212,220,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('markSupported()',)",230,230,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('mark(int)',)",240,240,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('reset()',)",247,247,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('getNextTarEntry()',)",263,334,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('skipRecordPadding()',)",342,348,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('getLongNameData()',)",358,380,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('getRecord()',)",398,405,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('isEOFRecord(byte[])',)",416,416,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('readRecord()',)",427,435,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('readGlobalPaxHeaders()',)",439,441,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('paxHeaders()',)",444,447,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('parsePaxHeaders(java.io.InputStream)',)",454,503,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('applyPaxHeadersToCurrentEntry(java.util.Map)',)",525,556,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('readOldGNUSparse()',)",571,585,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('isDirectory()',)",588,588,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('getNextEntry()',)",600,600,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('tryToConsumeSecondEOFRecord()',)",614,627,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('read(byte[],int,int)',)",644,668,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('canReadEntryData(org.apache.commons.compress.archivers.ArchiveEntry)',)",678,682,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('getCurrentEntry()',)",691,691,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('setCurrentEntry(org.apache.commons.compress.archivers.tar.TarArchiveEntry)',)",695,696,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('isAtEOF()',)",699,699,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('setAtEOF(boolean)',)",703,704,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('consumeRemainderOfLastBlock()',)",712,717,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('matches(byte[],int)',)",729,763,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('ArjArchiveInputStream(java.io.InputStream)',)",83,84,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('close()',)",88,89,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('read8(java.io.DataInputStream)',)",92,94,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('read16(java.io.DataInputStream)',)",98,100,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('read32(java.io.DataInputStream)',)",104,106,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('readFully(java.io.DataInputStream,byte[])',)",124,126,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('readLocalFileHeader()',)",215,266,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('readExtraData(int,java.io.DataInputStream,org.apache.commons.compress.archivers.arj.LocalFileHeader)',)",271,281,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('matches(byte[],int)',)",293,293,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('getArchiveName()',)",303,303,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('getArchiveComment()',)",311,311,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('getNextEntry()',)",316,334,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('canReadEntryData(org.apache.commons.compress.archivers.ArchiveEntry)',)",339,339,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('read(byte[],int,int)',)",345,351,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('getCount()',)",155,155,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('getBytesRead()',)",160,160,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('getSummary()',)",168,168,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('getNextDumpEntry()',)",225,225,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('getNextEntry()',)",230,318,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('readDirectoryEntry(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)',)",326,407,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('getPath(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)',)",418,450,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('read(byte[],int,int)',)",468,523,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('close()',)",531,535,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('matches(byte[],int)',)",547,557,0.0
org.apache.commons.compress.archivers.ArchiveException,"('ArchiveException(java.lang.String)',)",37,38,0.0
org.apache.commons.compress.archivers.ArchiveException,"('ArchiveException(java.lang.String,java.lang.Exception)',)",49,51,0.0
org.apache.commons.compress.archivers.StreamingNotSupportedException,"('StreamingNotSupportedException(java.lang.String)',)",38,40,0.0
org.apache.commons.compress.archivers.StreamingNotSupportedException,"('getFormat()',)",48,48,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('CpioArchiveOutputStream(java.io.OutputStream,short)',)",111,112,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('CpioArchiveOutputStream(java.io.OutputStream,short,int)',)",129,130,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('CpioArchiveOutputStream(java.io.OutputStream,short,int,java.lang.String)',)",69,165,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('CpioArchiveOutputStream(java.io.OutputStream)',)",175,176,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('CpioArchiveOutputStream(java.io.OutputStream,java.lang.String)',)",190,191,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('ensureOpen()',)",200,203,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)',)",221,246,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeHeader(org.apache.commons.compress.archivers.cpio.CpioArchiveEntry)',)",249,273,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeNewEntry(org.apache.commons.compress.archivers.cpio.CpioArchiveEntry)',)",276,306,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeOldAsciiEntry(org.apache.commons.compress.archivers.cpio.CpioArchiveEntry)',)",310,336,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeOldBinaryEntry(org.apache.commons.compress.archivers.cpio.CpioArchiveEntry,boolean)',)",340,367,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('closeArchiveEntry()',)",377,400,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('write(byte[],int,int)',)",419,440,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('finish()',)",453,473,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('close()',)",484,492,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('pad(int)',)",495,500,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeBinaryLong(long,int,boolean)',)",504,507,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeAsciiLong(long,int,int)',)",511,533,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeCString(java.lang.String)',)",541,546,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('createArchiveEntry(java.io.File,java.lang.String)',)",556,559,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('TarArchiveOutputStream(java.io.OutputStream)',)",101,102,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('TarArchiveOutputStream(java.io.OutputStream,java.lang.String)',)",111,112,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('TarArchiveOutputStream(java.io.OutputStream,int)',)",120,121,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('TarArchiveOutputStream(java.io.OutputStream,int,java.lang.String)',)",132,133,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('TarArchiveOutputStream(java.io.OutputStream,int,int)',)",142,143,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('TarArchiveOutputStream(java.io.OutputStream,int,int,java.lang.String)',)",71,164,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('setLongFileMode(int)',)",174,175,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('setBigNumberMode(int)',)",186,187,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('setAddPaxHeadersForNonAsciiNames(boolean)',)",195,196,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('getCount()',)",201,201,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('getBytesWritten()',)",206,206,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('finish()',)",220,232,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('close()',)",240,248,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('getRecordSize()',)",256,256,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)',)",274,322,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('closeArchiveEntry()',)",336,360,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('write(byte[],int,int)',)",378,443,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('writePaxHeaders(org.apache.commons.compress.archivers.tar.TarArchiveEntry,java.lang.String,java.util.Map)',)",452,486,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('stripTo7Bits(java.lang.String)',)",489,499,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('shouldBeReplaced(char)',)",507,507,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('writeEOFRecord()',)",517,519,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('flush()',)",523,524,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('createArchiveEntry(java.io.File,java.lang.String)',)",529,532,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('writeRecord(byte[])',)",542,551,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('writeRecord(byte[],int)',)",564,573,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('padAsNeeded()',)",576,582,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('addPaxHeadersForBigNumbers(java.util.Map,org.apache.commons.compress.archivers.tar.TarArchiveEntry)',)",586,602,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('addPaxHeaderForBigNumber(java.util.Map,java.lang.String,long,long)',)",607,610,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('failForBigNumbers(org.apache.commons.compress.archivers.tar.TarArchiveEntry)',)",613,624,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('failForBigNumber(java.lang.String,long,long)',)",627,628,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('failForBigNumberWithPosixMessage(java.lang.String,long,long)',)",631,632,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('failForBigNumber(java.lang.String,long,long,java.lang.String)',)",635,640,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('handleLongName(org.apache.commons.compress.archivers.tar.TarArchiveEntry,java.lang.String,java.util.Map,java.lang.String,byte,java.lang.String)',)",668,692,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('transferModTime(org.apache.commons.compress.archivers.tar.TarArchiveEntry,org.apache.commons.compress.archivers.tar.TarArchiveEntry)',)",696,702,0.0
org.apache.commons.compress.archivers.jar.JarArchiveOutputStream,"('JarArchiveOutputStream(java.io.OutputStream)',)",38,42,0.0
org.apache.commons.compress.archivers.jar.JarArchiveOutputStream,"('JarArchiveOutputStream(java.io.OutputStream,java.lang.String)',)",38,54,0.0
org.apache.commons.compress.archivers.jar.JarArchiveOutputStream,"('putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)',)",59,64,0.0
org.apache.commons.compress.archivers.zip.Zip64Mode,"('Zip64Mode(java.lang.String,int)',)",28,28,0.0
org.apache.commons.compress.archivers.zip.Zip64Mode,"('<clinit>()',)",28,46,0.0
org.apache.commons.compress.archivers.zip.ZipShort,"('ZipShort(int)',)",41,43,0.0
org.apache.commons.compress.archivers.zip.ZipShort,"('ZipShort(byte[])',)",50,51,0.0
org.apache.commons.compress.archivers.zip.ZipShort,"('ZipShort(byte[],int)',)",58,60,0.0
org.apache.commons.compress.archivers.zip.ZipShort,"('getBytes()',)",67,70,0.0
org.apache.commons.compress.archivers.zip.ZipShort,"('getValue()',)",78,78,0.0
org.apache.commons.compress.archivers.zip.ZipShort,"('getBytes(int)',)",87,89,0.0
org.apache.commons.compress.archivers.zip.ZipShort,"('putShort(int,byte[],int)',)",101,103,0.0
org.apache.commons.compress.archivers.zip.ZipShort,"('getValue(byte[])',)",123,123,0.0
org.apache.commons.compress.archivers.zip.ZipShort,"('equals(java.lang.Object)',)",133,136,0.0
org.apache.commons.compress.archivers.zip.ZipShort,"('hashCode()',)",145,145,0.0
org.apache.commons.compress.archivers.zip.ZipShort,"('clone()',)",151,154,0.0
org.apache.commons.compress.archivers.zip.ZipShort,"('toString()',)",160,160,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('ZipArchiveEntry(java.util.zip.ZipEntry)',)",70,129,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('ZipArchiveEntry(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",141,149,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('ZipArchiveEntry()',)",154,155,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('ZipArchiveEntry(java.io.File,java.lang.String)',)",169,176,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('<clinit>()',)",58,91,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('clone()',)",184,189,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getMethod()',)",202,202,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getInternalAttributes()',)",231,231,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setInternalAttributes(int)',)",239,240,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getExternalAttributes()',)",252,252,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setExternalAttributes(long)',)",260,261,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setUnixMode(int)',)",270,277,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getUnixMode()',)",284,284,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('isUnixSymlink()',)",297,297,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getPlatform()',)",308,308,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setPlatform(int)',)",316,317,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getExtraFields()',)",347,347,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getExtraFields(boolean)',)",360,360,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getParseableExtraFieldsNoCopy()',)",366,369,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getParseableExtraFields()',)",373,374,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('copyOf(org.apache.commons.compress.archivers.zip.ZipExtraField[])',)",389,389,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('copyOf(org.apache.commons.compress.archivers.zip.ZipExtraField[],int)',)",393,395,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getMergedFields()',)",399,401,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getUnparseableOnly()',)",405,405,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getAllExtraFields()',)",409,410,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('addExtraField(org.apache.commons.compress.archivers.zip.ZipExtraField)',)",421,436,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('addAsFirstExtraField(org.apache.commons.compress.archivers.zip.ZipExtraField)',)",446,461,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('removeExtraField(org.apache.commons.compress.archivers.zip.ZipShort)',)",468,483,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('removeUnparseableExtraFieldData()',)",491,496,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getUnparseableExtraFieldData()',)",523,523,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setExtra()',)",555,556,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setCentralDirectoryExtra(byte[])',)",564,571,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getLocalFileDataExtra()',)",578,579,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getCentralDirectoryExtra()',)",587,587,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getName()',)",596,596,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('isDirectory()',)",605,605,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getSize()',)",631,631,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setName(java.lang.String,byte[])',)",658,660,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getRawName()',)",673,678,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('hashCode()',)",692,692,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getGeneralPurposeBit()',)",701,701,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setGeneralPurposeBit(org.apache.commons.compress.archivers.zip.GeneralPurposeBit)',)",710,711,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getLastModifiedDate()',)",759,759,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('equals(java.lang.Object)',)",767,791,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setVersionMadeBy(int)',)",813,814,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setVersionRequired(int)',)",822,823,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getVersionRequired()',)",831,831,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getVersionMadeBy()',)",840,840,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getRawFlag()',)",849,849,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setRawFlag(int)',)",858,859,0.0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('GeneralPurposeBit()',)",72,80,0.0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('usesUTF8ForNames()',)",87,87,0.0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('useUTF8ForNames(boolean)',)",95,96,0.0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('usesDataDescriptor()',)",105,105,0.0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('useDataDescriptor(boolean)',)",115,116,0.0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('usesEncryption()',)",123,123,0.0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('useEncryption(boolean)',)",131,132,0.0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('usesStrongEncryption()',)",139,139,0.0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('getSlidingDictionarySize()',)",157,157,0.0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('getNumberOfShannonFanoTrees()',)",164,164,0.0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('encode()',)",172,174,0.0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('encode(byte[],int)',)",187,195,0.0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('parse(byte[],int)',)",205,213,0.0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('hashCode()',)",218,218,0.0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('equals(java.lang.Object)',)",226,230,0.0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('clone()',)",239,242,0.0
org.apache.commons.compress.archivers.zip.AsiExtraField,"('AsiExtraField()',)",59,86,0.0
org.apache.commons.compress.archivers.zip.AsiExtraField,"('<clinit>()',)",54,54,0.0
org.apache.commons.compress.archivers.zip.AsiExtraField,"('getHeaderId()',)",94,94,0.0
org.apache.commons.compress.archivers.zip.AsiExtraField,"('getLocalFileDataLength()',)",104,104,0.0
org.apache.commons.compress.archivers.zip.AsiExtraField,"('getCentralDirectoryLength()',)",119,119,0.0
org.apache.commons.compress.archivers.zip.AsiExtraField,"('getLocalFileDataData()',)",130,153,0.0
org.apache.commons.compress.archivers.zip.AsiExtraField,"('getCentralDirectoryData()',)",162,162,0.0
org.apache.commons.compress.archivers.zip.AsiExtraField,"('setUserId(int)',)",170,171,0.0
org.apache.commons.compress.archivers.zip.AsiExtraField,"('getUserId()',)",178,178,0.0
org.apache.commons.compress.archivers.zip.AsiExtraField,"('setGroupId(int)',)",186,187,0.0
org.apache.commons.compress.archivers.zip.AsiExtraField,"('getGroupId()',)",194,194,0.0
org.apache.commons.compress.archivers.zip.AsiExtraField,"('setLinkedFile(java.lang.String)',)",204,206,0.0
org.apache.commons.compress.archivers.zip.AsiExtraField,"('getLinkedFile()',)",215,215,0.0
org.apache.commons.compress.archivers.zip.AsiExtraField,"('isLink()',)",223,223,0.0
org.apache.commons.compress.archivers.zip.AsiExtraField,"('setMode(int)',)",231,232,0.0
org.apache.commons.compress.archivers.zip.AsiExtraField,"('getMode()',)",239,239,0.0
org.apache.commons.compress.archivers.zip.AsiExtraField,"('setDirectory(boolean)',)",247,249,0.0
org.apache.commons.compress.archivers.zip.AsiExtraField,"('isDirectory()',)",256,256,0.0
org.apache.commons.compress.archivers.zip.AsiExtraField,"('parseFromLocalFileData(byte[],int,int)',)",270,298,0.0
org.apache.commons.compress.archivers.zip.AsiExtraField,"('parseFromCentralDirectoryData(byte[],int,int)',)",308,309,0.0
org.apache.commons.compress.archivers.zip.AsiExtraField,"('getMode(int)',)",317,323,0.0
org.apache.commons.compress.archivers.zip.AsiExtraField,"('clone()',)",329,334,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('X5455_ExtendedTimestamp()',)",122,122,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('<clinit>()',)",84,84,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('getHeaderId()',)",131,131,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('getLocalFileDataLength()',)",142,142,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('getCentralDirectoryLength()',)",161,161,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('getLocalFileDataData()',)",174,192,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('getCentralDirectoryData()',)",203,209,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('parseFromLocalFileData(byte[],int,int)',)",224,242,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('parseFromCentralDirectoryData(byte[],int,int)',)",252,254,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('reset()',)",261,265,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('setFlags(byte)',)",282,286,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('getFlags()',)",302,302,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('isBit0_modifyTimePresent()',)",311,311,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('isBit1_accessTimePresent()',)",320,320,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('isBit2_createTimePresent()',)",329,329,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('getModifyTime()',)",338,338,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('getAccessTime()',)",347,347,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('getCreateTime()',)",362,362,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('getModifyJavaTime()',)",373,373,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('getAccessJavaTime()',)",385,385,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('getCreateJavaTime()',)",403,403,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('setModifyTime(org.apache.commons.compress.archivers.zip.ZipLong)',)",419,423,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('setAccessTime(org.apache.commons.compress.archivers.zip.ZipLong)',)",438,442,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('setCreateTime(org.apache.commons.compress.archivers.zip.ZipLong)',)",457,461,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('setModifyJavaTime(java.util.Date)',)",476,476,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('setAccessJavaTime(java.util.Date)',)",491,491,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('setCreateJavaTime(java.util.Date)',)",506,506,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('dateToZipLong(java.util.Date)',)",519,526,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('toString()',)",538,553,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('clone()',)",558,558,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('equals(java.lang.Object)',)",563,573,0.0
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp,"('hashCode()',)",578,590,0.0
org.apache.commons.compress.archivers.zip.X7875_NewUnix,"('X7875_NewUnix()',)",62,77,0.0
org.apache.commons.compress.archivers.zip.X7875_NewUnix,"('<clinit>()',)",57,59,0.0
org.apache.commons.compress.archivers.zip.X7875_NewUnix,"('getHeaderId()',)",86,86,0.0
org.apache.commons.compress.archivers.zip.X7875_NewUnix,"('getUID()',)",97,97,0.0
org.apache.commons.compress.archivers.zip.X7875_NewUnix,"('getGID()',)",107,107,0.0
org.apache.commons.compress.archivers.zip.X7875_NewUnix,"('setUID(long)',)",115,116,0.0
org.apache.commons.compress.archivers.zip.X7875_NewUnix,"('setGID(long)',)",124,125,0.0
org.apache.commons.compress.archivers.zip.X7875_NewUnix,"('getLocalFileDataLength()',)",135,139,0.0
org.apache.commons.compress.archivers.zip.X7875_NewUnix,"('getCentralDirectoryLength()',)",150,150,0.0
org.apache.commons.compress.archivers.zip.X7875_NewUnix,"('getLocalFileDataData()',)",161,188,0.0
org.apache.commons.compress.archivers.zip.X7875_NewUnix,"('getCentralDirectoryData()',)",199,199,0.0
org.apache.commons.compress.archivers.zip.X7875_NewUnix,"('parseFromLocalFileData(byte[],int,int)',)",214,226,0.0
org.apache.commons.compress.archivers.zip.X7875_NewUnix,"('parseFromCentralDirectoryData(byte[],int,int)',)",236,236,0.0
org.apache.commons.compress.archivers.zip.X7875_NewUnix,"('reset()',)",244,246,0.0
org.apache.commons.compress.archivers.zip.X7875_NewUnix,"('toString()',)",257,257,0.0
org.apache.commons.compress.archivers.zip.X7875_NewUnix,"('clone()',)",262,262,0.0
org.apache.commons.compress.archivers.zip.X7875_NewUnix,"('equals(java.lang.Object)',)",267,272,0.0
org.apache.commons.compress.archivers.zip.X7875_NewUnix,"('hashCode()',)",277,283,0.0
org.apache.commons.compress.archivers.zip.X7875_NewUnix,"('trimLeadingZeroesForceMinLength(byte[])',)",296,351,0.0
org.apache.commons.compress.archivers.zip.JarMarker,"('JarMarker()',)",35,37,0.0
org.apache.commons.compress.archivers.zip.JarMarker,"('<clinit>()',)",29,32,0.0
org.apache.commons.compress.archivers.zip.JarMarker,"('getInstance()',)",44,44,0.0
org.apache.commons.compress.archivers.zip.JarMarker,"('getHeaderId()',)",53,53,0.0
org.apache.commons.compress.archivers.zip.JarMarker,"('getLocalFileDataLength()',)",63,63,0.0
org.apache.commons.compress.archivers.zip.JarMarker,"('getCentralDirectoryLength()',)",73,73,0.0
org.apache.commons.compress.archivers.zip.JarMarker,"('getLocalFileDataData()',)",83,83,0.0
org.apache.commons.compress.archivers.zip.JarMarker,"('getCentralDirectoryData()',)",93,93,0.0
org.apache.commons.compress.archivers.zip.JarMarker,"('parseFromLocalFileData(byte[],int,int)',)",107,110,0.0
org.apache.commons.compress.archivers.zip.JarMarker,"('parseFromCentralDirectoryData(byte[],int,int)',)",120,121,0.0
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,"('AbstractUnicodeExtraField()',)",36,37,0.0
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,"('AbstractUnicodeExtraField(java.lang.String,byte[],int,int)',)",51,61,0.0
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,"('AbstractUnicodeExtraField(java.lang.String,byte[])',)",72,73,0.0
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,"('assembleData()',)",76,85,0.0
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,"('getNameCRC32()',)",92,92,0.0
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,"('setNameCRC32(long)',)",100,102,0.0
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,"('getUnicodeName()',)",108,113,0.0
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,"('setUnicodeName(byte[])',)",120,128,0.0
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,"('getCentralDirectoryData()',)",132,140,0.0
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,"('getCentralDirectoryLength()',)",145,148,0.0
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,"('getLocalFileDataData()',)",153,153,0.0
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,"('getLocalFileDataLength()',)",158,158,0.0
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,"('parseFromLocalFileData(byte[],int,int)',)",165,180,0.0
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,"('parseFromCentralDirectoryData(byte[],int,int)',)",190,191,0.0
org.apache.commons.compress.archivers.zip.UnicodePathExtraField,"('UnicodePathExtraField()',)",36,37,0.0
org.apache.commons.compress.archivers.zip.UnicodePathExtraField,"('UnicodePathExtraField(java.lang.String,byte[],int,int)',)",50,51,0.0
org.apache.commons.compress.archivers.zip.UnicodePathExtraField,"('UnicodePathExtraField(java.lang.String,byte[])',)",61,62,0.0
org.apache.commons.compress.archivers.zip.UnicodePathExtraField,"('<clinit>()',)",34,34,0.0
org.apache.commons.compress.archivers.zip.UnicodePathExtraField,"('getHeaderId()',)",66,66,0.0
org.apache.commons.compress.archivers.zip.UnicodeCommentExtraField,"('UnicodeCommentExtraField()',)",36,37,0.0
org.apache.commons.compress.archivers.zip.UnicodeCommentExtraField,"('UnicodeCommentExtraField(java.lang.String,byte[],int,int)',)",51,52,0.0
org.apache.commons.compress.archivers.zip.UnicodeCommentExtraField,"('UnicodeCommentExtraField(java.lang.String,byte[])',)",62,63,0.0
org.apache.commons.compress.archivers.zip.UnicodeCommentExtraField,"('<clinit>()',)",34,34,0.0
org.apache.commons.compress.archivers.zip.UnicodeCommentExtraField,"('getHeaderId()',)",67,67,0.0
org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField,"('Zip64ExtendedInformationExtraField()',)",71,71,0.0
org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField,"('Zip64ExtendedInformationExtraField(org.apache.commons.compress.archivers.zip.ZipEightByteInteger,org.apache.commons.compress.archivers.zip.ZipEightByteInteger)',)",83,84,0.0
org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField,"('Zip64ExtendedInformationExtraField(org.apache.commons.compress.archivers.zip.ZipEightByteInteger,org.apache.commons.compress.archivers.zip.ZipEightByteInteger,org.apache.commons.compress.archivers.zip.ZipEightByteInteger,org.apache.commons.compress.archivers.zip.ZipLong)',)",99,104,0.0
org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField,"('<clinit>()',)",45,50,0.0
org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField,"('getHeaderId()',)",108,108,0.0
org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField,"('getLocalFileDataLength()',)",113,113,0.0
org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField,"('getCentralDirectoryLength()',)",118,118,0.0
org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField,"('getLocalFileDataData()',)",126,134,0.0
org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField,"('getCentralDirectoryData()',)",139,149,0.0
org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField,"('parseFromLocalFileData(byte[],int,int)',)",155,180,0.0
org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField,"('parseFromCentralDirectoryData(byte[],int,int)',)",187,207,0.0
org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField,"('reparseCentralDirectoryData(boolean,boolean,boolean,boolean)',)",229,262,0.0
org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField,"('getSize()',)",269,269,0.0
org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField,"('setSize(org.apache.commons.compress.archivers.zip.ZipEightByteInteger)',)",277,278,0.0
org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField,"('getCompressedSize()',)",285,285,0.0
org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField,"('setCompressedSize(org.apache.commons.compress.archivers.zip.ZipEightByteInteger)',)",293,294,0.0
org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField,"('getRelativeHeaderOffset()',)",301,301,0.0
org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField,"('setRelativeHeaderOffset(org.apache.commons.compress.archivers.zip.ZipEightByteInteger)',)",309,310,0.0
org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField,"('getDiskStartNumber()',)",317,317,0.0
org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField,"('setDiskStartNumber(org.apache.commons.compress.archivers.zip.ZipLong)',)",325,326,0.0
org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField,"('addSizes(byte[])',)",329,338,0.0
org.apache.commons.compress.archivers.zip.X000A_NTFS,"('getHeaderId()',)",82,82,0.0
org.apache.commons.compress.archivers.zip.X000A_NTFS,"('getLocalFileDataLength()',)",93,93,0.0
org.apache.commons.compress.archivers.zip.X000A_NTFS,"('getCentralDirectoryLength()',)",111,111,0.0
org.apache.commons.compress.archivers.zip.X000A_NTFS,"('getLocalFileDataData()',)",122,133,0.0
org.apache.commons.compress.archivers.zip.X000A_NTFS,"('getCentralDirectoryData()',)",144,144,0.0
org.apache.commons.compress.archivers.zip.X000A_NTFS,"('parseFromLocalFileData(byte[],int,int)',)",159,174,0.0
org.apache.commons.compress.archivers.zip.X000A_NTFS,"('parseFromCentralDirectoryData(byte[],int,int)',)",184,186,0.0
org.apache.commons.compress.archivers.zip.X000A_NTFS,"('getModifyTime()',)",196,196,0.0
org.apache.commons.compress.archivers.zip.X000A_NTFS,"('getAccessTime()',)",205,205,0.0
org.apache.commons.compress.archivers.zip.X000A_NTFS,"('getCreateTime()',)",214,214,0.0
org.apache.commons.compress.archivers.zip.X000A_NTFS,"('getModifyJavaTime()',)",223,223,0.0
org.apache.commons.compress.archivers.zip.X000A_NTFS,"('getAccessJavaTime()',)",233,233,0.0
org.apache.commons.compress.archivers.zip.X000A_NTFS,"('getCreateJavaTime()',)",243,243,0.0
org.apache.commons.compress.archivers.zip.X000A_NTFS,"('setModifyTime(org.apache.commons.compress.archivers.zip.ZipEightByteInteger)',)",253,254,0.0
org.apache.commons.compress.archivers.zip.X000A_NTFS,"('setAccessTime(org.apache.commons.compress.archivers.zip.ZipEightByteInteger)',)",263,264,0.0
org.apache.commons.compress.archivers.zip.X000A_NTFS,"('setCreateTime(org.apache.commons.compress.archivers.zip.ZipEightByteInteger)',)",273,274,0.0
org.apache.commons.compress.archivers.zip.X000A_NTFS,"('setModifyJavaTime(java.util.Date)',)",281,281,0.0
org.apache.commons.compress.archivers.zip.X000A_NTFS,"('setAccessJavaTime(java.util.Date)',)",289,289,0.0
org.apache.commons.compress.archivers.zip.X000A_NTFS,"('setCreateJavaTime(java.util.Date)',)",304,304,0.0
org.apache.commons.compress.archivers.zip.X000A_NTFS,"('toString()',)",315,320,0.0
org.apache.commons.compress.archivers.zip.X000A_NTFS,"('equals(java.lang.Object)',)",325,332,0.0
org.apache.commons.compress.archivers.zip.X000A_NTFS,"('hashCode()',)",337,349,0.0
org.apache.commons.compress.archivers.zip.X000A_NTFS,"('reset()',)",357,360,0.0
org.apache.commons.compress.archivers.zip.X000A_NTFS,"('readTimeAttr(byte[],int,int)',)",363,374,0.0
org.apache.commons.compress.archivers.zip.X000A_NTFS,"('dateToZip(java.util.Date)',)",384,385,0.0
org.apache.commons.compress.archivers.zip.X000A_NTFS,"('zipToDate(org.apache.commons.compress.archivers.zip.ZipEightByteInteger)',)",389,391,0.0
org.apache.commons.compress.archivers.zip.ZipEightByteInteger,"('ZipEightByteInteger(long)',)",75,76,0.0
org.apache.commons.compress.archivers.zip.ZipEightByteInteger,"('ZipEightByteInteger(java.math.BigInteger)',)",82,84,0.0
org.apache.commons.compress.archivers.zip.ZipEightByteInteger,"('ZipEightByteInteger(byte[])',)",91,92,0.0
org.apache.commons.compress.archivers.zip.ZipEightByteInteger,"('ZipEightByteInteger(byte[],int)',)",99,101,0.0
org.apache.commons.compress.archivers.zip.ZipEightByteInteger,"('<clinit>()',)",68,68,0.0
org.apache.commons.compress.archivers.zip.ZipEightByteInteger,"('getBytes()',)",108,108,0.0
org.apache.commons.compress.archivers.zip.ZipEightByteInteger,"('getLongValue()',)",116,116,0.0
org.apache.commons.compress.archivers.zip.ZipEightByteInteger,"('getValue()',)",124,124,0.0
org.apache.commons.compress.archivers.zip.ZipEightByteInteger,"('getBytes(long)',)",133,133,0.0
org.apache.commons.compress.archivers.zip.ZipEightByteInteger,"('getBytes(java.math.BigInteger)',)",142,155,0.0
org.apache.commons.compress.archivers.zip.ZipEightByteInteger,"('getLongValue(byte[],int)',)",166,166,0.0
org.apache.commons.compress.archivers.zip.ZipEightByteInteger,"('getValue(byte[],int)',)",177,186,0.0
org.apache.commons.compress.archivers.zip.ZipEightByteInteger,"('getLongValue(byte[])',)",196,196,0.0
org.apache.commons.compress.archivers.zip.ZipEightByteInteger,"('getValue(byte[])',)",205,205,0.0
org.apache.commons.compress.archivers.zip.ZipEightByteInteger,"('equals(java.lang.Object)',)",215,218,0.0
org.apache.commons.compress.archivers.zip.ZipEightByteInteger,"('hashCode()',)",227,227,0.0
org.apache.commons.compress.archivers.zip.ZipEightByteInteger,"('toString()',)",232,232,0.0
org.apache.commons.compress.archivers.zip.PKWareExtraHeader,"('getHeaderId()',)",91,91,0.0
org.apache.commons.compress.archivers.zip.PKWareExtraHeader,"('setLocalFileDataData(byte[])',)",102,103,0.0
org.apache.commons.compress.archivers.zip.PKWareExtraHeader,"('getLocalFileDataLength()',)",112,112,0.0
org.apache.commons.compress.archivers.zip.PKWareExtraHeader,"('getLocalFileDataData()',)",122,122,0.0
org.apache.commons.compress.archivers.zip.PKWareExtraHeader,"('setCentralDirectoryData(byte[])',)",132,133,0.0
org.apache.commons.compress.archivers.zip.PKWareExtraHeader,"('getCentralDirectoryLength()',)",143,146,0.0
org.apache.commons.compress.archivers.zip.PKWareExtraHeader,"('getCentralDirectoryData()',)",156,159,0.0
org.apache.commons.compress.archivers.zip.PKWareExtraHeader,"('parseFromLocalFileData(byte[],int,int)',)",173,176,0.0
org.apache.commons.compress.archivers.zip.PKWareExtraHeader,"('parseFromCentralDirectoryData(byte[],int,int)',)",189,195,0.0
org.apache.commons.compress.archivers.zip.X0014_X509Certificates,"('X0014_X509Certificates()',)",46,47,0.0
org.apache.commons.compress.archivers.zip.X0015_CertificateIdForFile,"('X0015_CertificateIdForFile()',)",47,48,0.0
org.apache.commons.compress.archivers.zip.X0015_CertificateIdForFile,"('getRecordCount()',)",58,58,0.0
org.apache.commons.compress.archivers.zip.X0015_CertificateIdForFile,"('getHashAlgorithm()',)",66,66,0.0
org.apache.commons.compress.archivers.zip.X0015_CertificateIdForFile,"('parseFromCentralDirectoryData(byte[],int,int)',)",71,74,0.0
org.apache.commons.compress.archivers.zip.X0016_CertificateIdForCentralDirectory,"('X0016_CertificateIdForCentralDirectory()',)",48,49,0.0
org.apache.commons.compress.archivers.zip.X0016_CertificateIdForCentralDirectory,"('getRecordCount()',)",59,59,0.0
org.apache.commons.compress.archivers.zip.X0016_CertificateIdForCentralDirectory,"('getHashAlgorithm()',)",67,67,0.0
org.apache.commons.compress.archivers.zip.X0016_CertificateIdForCentralDirectory,"('parseFromCentralDirectoryData(byte[],int,int)',)",72,74,0.0
org.apache.commons.compress.archivers.zip.X0017_StrongEncryptionHeader,"('X0017_StrongEncryptionHeader()',)",248,249,0.0
org.apache.commons.compress.archivers.zip.X0017_StrongEncryptionHeader,"('getRecordCount()',)",276,276,0.0
org.apache.commons.compress.archivers.zip.X0017_StrongEncryptionHeader,"('getHashAlgorithm()',)",284,284,0.0
org.apache.commons.compress.archivers.zip.X0017_StrongEncryptionHeader,"('getEncryptionAlgorithm()',)",292,292,0.0
org.apache.commons.compress.archivers.zip.X0017_StrongEncryptionHeader,"('parseCentralDirectoryFormat(byte[],int,int)',)",303,319,0.0
org.apache.commons.compress.archivers.zip.X0017_StrongEncryptionHeader,"('parseFileFormat(byte[],int,int)',)",331,369,0.0
org.apache.commons.compress.archivers.zip.X0017_StrongEncryptionHeader,"('parseFromLocalFileData(byte[],int,int)',)",373,375,0.0
org.apache.commons.compress.archivers.zip.X0017_StrongEncryptionHeader,"('parseFromCentralDirectoryData(byte[],int,int)',)",379,381,0.0
org.apache.commons.compress.archivers.zip.X0019_EncryptionRecipientCertificateList,"('X0019_EncryptionRecipientCertificateList()',)",54,55,0.0
org.apache.commons.compress.archivers.zip.ZipUtil,"('ZipUtil()',)",31,31,0.0
org.apache.commons.compress.archivers.zip.ZipUtil,"('<clinit>()',)",35,35,0.0
org.apache.commons.compress.archivers.zip.ZipUtil,"('toDosTime(java.util.Date)',)",43,43,0.0
org.apache.commons.compress.archivers.zip.ZipUtil,"('toDosTime(long)',)",54,56,0.0
org.apache.commons.compress.archivers.zip.ZipUtil,"('toDosTime(long,byte[],int)',)",70,71,0.0
org.apache.commons.compress.archivers.zip.ZipUtil,"('toDosTime(java.util.Calendar,long,byte[],int)',)",74,89,0.0
org.apache.commons.compress.archivers.zip.ZipUtil,"('adjustToLong(int)',)",100,103,0.0
org.apache.commons.compress.archivers.zip.ZipUtil,"('reverse(byte[])',)",118,124,0.0
org.apache.commons.compress.archivers.zip.ZipUtil,"('bigToLong(java.math.BigInteger)',)",135,138,0.0
org.apache.commons.compress.archivers.zip.ZipUtil,"('longToBig(long)',)",153,160,0.0
org.apache.commons.compress.archivers.zip.ZipUtil,"('signedByteToUnsignedInt(byte)',)",172,175,0.0
org.apache.commons.compress.archivers.zip.ZipUtil,"('unsignedIntToSignedByte(int)',)",187,193,0.0
org.apache.commons.compress.archivers.zip.ZipUtil,"('fromDosTime(org.apache.commons.compress.archivers.zip.ZipLong)',)",203,204,0.0
org.apache.commons.compress.archivers.zip.ZipUtil,"('dosToJavaTime(long)',)",214,224,0.0
org.apache.commons.compress.archivers.zip.ZipUtil,"('copy(byte[])',)",291,296,0.0
org.apache.commons.compress.archivers.zip.ZipUtil,"('copy(byte[],byte[],int)',)",299,302,0.0
org.apache.commons.compress.archivers.zip.ZipUtil,"('canHandleEntryData(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",309,309,0.0
org.apache.commons.compress.archivers.zip.ZipUtil,"('supportsEncryptionOf(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",319,319,0.0
org.apache.commons.compress.archivers.zip.ZipUtil,"('supportsMethodOf(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",329,329,0.0
org.apache.commons.compress.archivers.zip.ZipUtil,"('checkRequestedFeatures(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",342,356,0.0
org.apache.commons.compress.archivers.zip.ZipMethod,"('ZipMethod(java.lang.String,int)',)",184,185,0.0
org.apache.commons.compress.archivers.zip.ZipMethod,"('getCode()',)",202,202,0.0
org.apache.commons.compress.archivers.zip.ZipMethod,"('getMethodByCode(int)',)",214,214,0.0
org.apache.commons.compress.archivers.zip.UnrecognizedExtraField,"('UnrecognizedExtraField()',)",29,29,0.0
org.apache.commons.compress.archivers.zip.UnrecognizedExtraField,"('setHeaderId(org.apache.commons.compress.archivers.zip.ZipShort)',)",41,42,0.0
org.apache.commons.compress.archivers.zip.UnrecognizedExtraField,"('getHeaderId()',)",50,50,0.0
org.apache.commons.compress.archivers.zip.UnrecognizedExtraField,"('setLocalFileDataData(byte[])',)",65,66,0.0
org.apache.commons.compress.archivers.zip.UnrecognizedExtraField,"('getLocalFileDataLength()',)",74,74,0.0
org.apache.commons.compress.archivers.zip.UnrecognizedExtraField,"('getLocalFileDataData()',)",83,83,0.0
org.apache.commons.compress.archivers.zip.UnrecognizedExtraField,"('setCentralDirectoryData(byte[])',)",97,98,0.0
org.apache.commons.compress.archivers.zip.UnrecognizedExtraField,"('getCentralDirectoryLength()',)",107,110,0.0
org.apache.commons.compress.archivers.zip.UnrecognizedExtraField,"('getCentralDirectoryData()',)",119,122,0.0
org.apache.commons.compress.archivers.zip.UnrecognizedExtraField,"('parseFromLocalFileData(byte[],int,int)',)",133,136,0.0
org.apache.commons.compress.archivers.zip.UnrecognizedExtraField,"('parseFromCentralDirectoryData(byte[],int,int)',)",147,153,0.0
org.apache.commons.compress.compressors.CompressorInputStream,"('CompressorInputStream()',)",23,24,0.0
org.apache.commons.compress.compressors.CompressorInputStream,"('count(int)',)",35,36,0.0
org.apache.commons.compress.compressors.CompressorInputStream,"('count(long)',)",45,48,0.0
org.apache.commons.compress.compressors.CompressorInputStream,"('pushedBackBytes(long)',)",57,58,0.0
org.apache.commons.compress.compressors.CompressorInputStream,"('getCount()',)",68,68,0.0
org.apache.commons.compress.compressors.CompressorInputStream,"('getBytesRead()',)",78,78,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('BZip2CompressorInputStream(java.io.InputStream)',)",110,111,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('BZip2CompressorInputStream(java.io.InputStream,boolean)',)",60,133,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('read()',)",137,142,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('read(byte[],int,int)',)",153,179,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('makeMaps()',)",183,195,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('read0()',)",198,224,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('init(boolean)',)",229,256,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('initBlock()',)",269,316,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('endBlock()',)",319,335,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('complete()',)",338,348,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('close()',)",353,364,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('bsR(int)',)",367,387,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('bsGetBit()',)",391,391,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('bsGetUByte()',)",395,395,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('bsGetInt()',)",399,399,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('hbCreateDecodeTables(int[],int[],int[],char[],int,int,int)',)",408,441,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('recvDecodingTables()',)",444,522,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('createHuffmanDecodingTables(int,int)',)",529,553,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('getAndMoveToFrontDecode()',)",556,738,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('getAndMoveToFrontDecode0(int)',)",741,769,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('setupBlock()',)",773,806,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('setupRandPartA()',)",810,830,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('setupNoRandPartA()',)",834,847,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('setupRandPartB()',)",851,874,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('setupRandPartC()',)",879,887,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('setupNoRandPartB()',)",891,900,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('setupNoRandPartC()',)",905,914,0.0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('matches(byte[],int)',)",992,1008,0.0
org.apache.commons.compress.archivers.zip.ExplodingInputStream,"('ExplodingInputStream(int,int,java.io.InputStream)',)",63,84,0.0
org.apache.commons.compress.archivers.zip.ExplodingInputStream,"('init()',)",92,102,0.0
org.apache.commons.compress.archivers.zip.ExplodingInputStream,"('read()',)",106,110,0.0
org.apache.commons.compress.archivers.zip.ExplodingInputStream,"('fillBuffer()',)",118,156,0.0
org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException,"('UnsupportedZipFeatureException(org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature,org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",41,45,0.0
org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException,"('UnsupportedZipFeatureException(org.apache.commons.compress.archivers.zip.ZipMethod,org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",56,60,0.0
org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException,"('UnsupportedZipFeatureException(org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature)',)",70,73,0.0
org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException,"('getFeature()',)",80,80,0.0
org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException,"('getEntry()',)",88,88,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('LZWInputStream(java.io.InputStream,java.nio.ByteOrder)',)",40,55,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('close()',)",59,60,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('read()',)",64,68,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('read(byte[],int,int)',)",73,86,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('setClearCode(int)',)",111,112,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('initializeTables(int)',)",119,129,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('readNextCode()',)",137,140,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('addEntry(int,byte,int)',)",152,157,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('addRepeatOfPreviousCode()',)",166,170,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('expandCodeToOutputStack(int,boolean)',)",183,191,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('readFromStack(byte[],int,int)',)",195,202,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('getCodeSize()',)",206,206,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('resetCodeSize()',)",210,211,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('setCodeSize(int)',)",214,215,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('incrementCodeSize()',)",218,219,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('resetPreviousCode()',)",222,223,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('getPrefix(int)',)",226,226,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('setPrefix(int,int)',)",230,231,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('getPrefixesLength()',)",234,234,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('getClearCode()',)",238,238,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('getTableSize()',)",242,242,0.0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('setTableSize(int)',)",246,247,0.0
org.apache.commons.compress.archivers.zip.UnshrinkingInputStream,"('UnshrinkingInputStream(java.io.InputStream)',)",44,52,0.0
org.apache.commons.compress.archivers.zip.UnshrinkingInputStream,"('addEntry(int,byte)',)",56,65,0.0
org.apache.commons.compress.archivers.zip.UnshrinkingInputStream,"('partialClear()',)",69,81,0.0
org.apache.commons.compress.archivers.zip.UnshrinkingInputStream,"('decompressNextSymbol()',)",97,124,0.0
org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData,"('UnparseableExtraFieldData()',)",31,31,0.0
org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData,"('<clinit>()',)",32,32,0.0
org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData,"('getHeaderId()',)",44,44,0.0
org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData,"('getLocalFileDataLength()',)",54,54,0.0
org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData,"('getCentralDirectoryLength()',)",64,64,0.0
org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData,"('getLocalFileDataData()',)",76,76,0.0
org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData,"('getCentralDirectoryData()',)",86,86,0.0
org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData,"('parseFromLocalFileData(byte[],int,int)',)",99,101,0.0
org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData,"('parseFromCentralDirectoryData(byte[],int,int)',)",113,118,0.0
