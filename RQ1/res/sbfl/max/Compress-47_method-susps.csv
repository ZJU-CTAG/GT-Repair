File,Signature,StartLine,EndLine,Suspiciousness
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('getNextZipEntry()',)",221,351,0.25
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readFully(byte[])',)",750,755,0.25
org.apache.commons.compress.archivers.zip.ZipLong,"('getBytes()',)",115,115,0.20100756305184242
org.apache.commons.compress.archivers.zip.ZipLong,"('getBytes(long)',)",139,141,0.1898315991504998
org.apache.commons.compress.archivers.zip.ZipLong,"('putLong(long,byte[],int)',)",154,155,0.18940548952415137
org.apache.commons.compress.utils.ByteUtils,"('toLittleEndian(byte[],long,int,int)',)",166,171,0.1841149235796647
org.apache.commons.compress.archivers.zip.ZipLong,"('ZipLong(long)',)",80,82,0.18372608486985015
org.apache.commons.compress.archivers.zip.ZipLong,"('<clinit>()',)",37,74,0.18372608486985015
org.apache.commons.compress.archivers.zip.ZipLong,"('getValue(byte[])',)",177,177,0.14907119849998599
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('<clinit>()',)",858,860,0.13245323570650439
org.apache.commons.compress.archivers.zip.ZipLong,"('getValue(byte[],int)',)",168,168,0.11744404390294069
org.apache.commons.compress.utils.ByteUtils,"('fromLittleEndian(byte[],int,int)',)",80,85,0.09284766908852593
org.apache.commons.compress.utils.ByteUtils,"('checkReadLength(int)',)",257,260,0.0842151921066519
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readFirstLocalFileHeader(byte[])',)",360,374,0.0472455591261534
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('ZipArchiveInputStream(java.io.InputStream)',)",169,170,0.04319342127906801
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('ZipArchiveInputStream(java.io.InputStream,java.lang.String)',)",180,181,0.04319342127906801
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('ZipArchiveInputStream(java.io.InputStream,java.lang.String,boolean)',)",192,193,0.041666666666666664
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('ZipArchiveInputStream(java.io.InputStream,java.lang.String,boolean,boolean)',)",93,218,0.041666666666666664
org.apache.commons.compress.archivers.ArchiveInputStream,"('getBytesRead()',)",135,135,0.036661778755338326
org.apache.commons.compress.archivers.zip.ZipMethod,"('ZipMethod(java.lang.String,int)',)",191,192,0.03450327796711771
org.apache.commons.compress.archivers.zip.ZipMethod,"('ZipMethod(java.lang.String,int,int)',)",197,199,0.03450327796711771
org.apache.commons.compress.archivers.zip.ZipMethod,"('<clinit>()',)",32,188,0.03450327796711771
org.apache.commons.compress.archivers.zip.ZipMethod,"('getCode()',)",209,209,0.03450327796711771
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setMethod(int)',)",270,275,0.0314970394174356
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setName(java.lang.String)',)",695,700,0.03065696697424829
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('ZipArchiveEntry(java.lang.String)',)",116,160,0.03020610466650885
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('<clinit>()',)",60,141,0.03020610466650885
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getPlatform()',)",364,364,0.03020610466650885
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('GeneralPurposeBit()',)",72,80,0.029462782549439483
org.apache.commons.compress.archivers.ArchiveInputStream,"('count(int)',)",92,93,0.02711630722733202
org.apache.commons.compress.archivers.ArchiveInputStream,"('count(long)',)",103,106,0.02711630722733202
org.apache.commons.compress.archivers.ArchiveInputStream,"('ArchiveInputStream()',)",40,46,0.025785531156469834
org.apache.commons.compress.archivers.zip.ZipEncodingHelper,"('<clinit>()',)",40,40,0.020869596778242055
org.apache.commons.compress.archivers.zip.ZipEncodingHelper,"('getZipEncoding(java.lang.String)',)",55,63,0.020869596778242055
org.apache.commons.compress.archivers.zip.ZipEncodingHelper,"('isUTF8(java.lang.String)',)",72,84,0.020869596778242055
org.apache.commons.compress.archivers.zip.NioZipEncoding,"('NioZipEncoding(java.nio.charset.Charset,boolean)',)",54,57,0.020869596778242055
org.apache.commons.compress.archivers.zip.NioZipEncoding,"('<clinit>()',)",42,44,0.020869596778242055
org.apache.commons.compress.utils.Charsets,"('<clinit>()',)",98,159,0.020619652471058063
org.apache.commons.compress.archivers.ArchiveInputStream,"('read()',)",81,82,0
org.apache.commons.compress.archivers.ArchiveInputStream,"('pushedBackBytes(long)',)",115,116,0
org.apache.commons.compress.archivers.ArchiveInputStream,"('getCount()',)",126,126,0
org.apache.commons.compress.archivers.ArchiveInputStream,"('canReadEntryData(org.apache.commons.compress.archivers.ArchiveEntry)',)",152,152,0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('processZip64Extra(org.apache.commons.compress.archivers.zip.ZipLong,org.apache.commons.compress.archivers.zip.ZipLong)',)",382,396,0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('getNextEntry()',)",400,400,0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('canReadEntryData(org.apache.commons.compress.archivers.ArchiveEntry)',)",412,417,0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('read(byte[],int,int)',)",422,460,0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readStored(byte[],int,int)',)",468,499,0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readDeflated(byte[],int,int)',)",506,518,0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readFromInflater(byte[],int,int)',)",526,544,0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('close()',)",549,557,0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('skip(long)',)",576,588,0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('matches(byte[],int)',)",601,605,0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('checksig(byte[],byte[])',)",612,617,0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('closeEntry()',)",639,680,0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('currentEntryHasOutstandingBytes()',)",690,690,0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('drainCurrentEntryData()',)",699,709,0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('getBytesInflated()',)",727,733,0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('fill()',)",737,746,0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readDataDescriptor()',)",758,788,0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('supportsDataDescriptorFor(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",798,798,0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readStoredEntry()',)",828,856,0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('bufferContainsSignature(java.io.ByteArrayOutputStream,int,int,int)',)",873,899,0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('cacheBytesRead(java.io.ByteArrayOutputStream,int,int,int)',)",912,920,0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('pushback(byte[],int,int)',)",924,926,0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('skipRemainderOfArchive()',)",953,959,0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('findEocdRecord()',)",966,996,0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('realSkip(long)',)",1006,1019,0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readOneByte()',)",1029,1033,0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('isFirstByteOfEocdSig(int)',)",1037,1037,0
org.apache.commons.compress.archivers.zip.ZipLong,"('ZipLong(int)',)",89,91,0
org.apache.commons.compress.archivers.zip.ZipLong,"('ZipLong(byte[])',)",98,99,0
org.apache.commons.compress.archivers.zip.ZipLong,"('ZipLong(byte[],int)',)",106,108,0
org.apache.commons.compress.archivers.zip.ZipLong,"('getValue()',)",123,123,0
org.apache.commons.compress.archivers.zip.ZipLong,"('getIntValue()',)",131,131,0
org.apache.commons.compress.archivers.zip.ZipLong,"('putLong(byte[],int)',)",158,159,0
org.apache.commons.compress.archivers.zip.ZipLong,"('equals(java.lang.Object)',)",187,190,0
org.apache.commons.compress.archivers.zip.ZipLong,"('hashCode()',)",199,199,0
org.apache.commons.compress.archivers.zip.ZipLong,"('clone()',)",205,208,0
org.apache.commons.compress.archivers.zip.ZipLong,"('toString()',)",214,214,0
org.apache.commons.compress.utils.ByteUtils,"('ByteUtils()',)",32,32,0
org.apache.commons.compress.utils.ByteUtils,"('fromLittleEndian(byte[])',)",68,68,0
org.apache.commons.compress.utils.ByteUtils,"('fromLittleEndian(java.io.InputStream,int)',)",99,108,0
org.apache.commons.compress.utils.ByteUtils,"('fromLittleEndian(org.apache.commons.compress.utils.ByteUtils$ByteSupplier,int)',)",125,134,0
org.apache.commons.compress.utils.ByteUtils,"('fromLittleEndian(java.io.DataInput,int)',)",148,154,0
org.apache.commons.compress.utils.ByteUtils,"('toLittleEndian(java.io.OutputStream,long,int)',)",184,189,0
org.apache.commons.compress.utils.ByteUtils,"('toLittleEndian(org.apache.commons.compress.utils.ByteUtils$ByteConsumer,long,int)',)",201,206,0
org.apache.commons.compress.utils.ByteUtils,"('toLittleEndian(java.io.DataOutput,long,int)',)",219,224,0
org.apache.commons.compress.archivers.zip.ZipEncodingHelper,"('ZipEncodingHelper()',)",29,29,0
org.apache.commons.compress.archivers.zip.ZipEncodingHelper,"('growBufferBy(java.nio.ByteBuffer,int)',)",88,94,0
org.apache.commons.compress.utils.Charsets,"('Charsets()',)",57,57,0
org.apache.commons.compress.utils.Charsets,"('toCharset(java.nio.charset.Charset)',)",72,72,0
org.apache.commons.compress.utils.Charsets,"('toCharset(java.lang.String)',)",87,87,0
org.apache.commons.compress.archivers.zip.NioZipEncoding,"('getCharset()',)",61,61,0
org.apache.commons.compress.archivers.zip.NioZipEncoding,"('canEncode(java.lang.String)',)",69,71,0
org.apache.commons.compress.archivers.zip.NioZipEncoding,"('encode(java.lang.String)',)",79,123,0
org.apache.commons.compress.archivers.zip.NioZipEncoding,"('decode(byte[])',)",132,132,0
org.apache.commons.compress.archivers.zip.NioZipEncoding,"('encodeFully(java.nio.charset.CharsetEncoder,java.nio.CharBuffer,java.nio.ByteBuffer)',)",137,145,0
org.apache.commons.compress.archivers.zip.NioZipEncoding,"('encodeSurrogate(java.nio.CharBuffer,char)',)",149,158,0
org.apache.commons.compress.archivers.zip.NioZipEncoding,"('newEncoder()',)",162,168,0
org.apache.commons.compress.archivers.zip.NioZipEncoding,"('newDecoder()',)",175,180,0
org.apache.commons.compress.archivers.zip.NioZipEncoding,"('estimateInitialBufferSize(java.nio.charset.CharsetEncoder,int)',)",200,202,0
org.apache.commons.compress.archivers.zip.NioZipEncoding,"('estimateIncrementalEncodingSize(java.nio.charset.CharsetEncoder,int)',)",213,213,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('ZipArchiveEntry(java.util.zip.ZipEntry)',)",116,185,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('ZipArchiveEntry(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",197,205,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('ZipArchiveEntry()',)",210,211,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('ZipArchiveEntry(java.io.File,java.lang.String)',)",225,232,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('clone()',)",240,245,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getMethod()',)",258,258,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getInternalAttributes()',)",287,287,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setInternalAttributes(int)',)",295,296,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getExternalAttributes()',)",308,308,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setExternalAttributes(long)',)",316,317,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setUnixMode(int)',)",326,333,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getUnixMode()',)",340,340,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('isUnixSymlink()',)",353,353,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setPlatform(int)',)",372,373,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getAlignment()',)",383,383,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setAlignment(int)',)",394,399,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setExtraFields(org.apache.commons.compress.archivers.zip.ZipExtraField[])',)",406,416,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getExtraFields()',)",429,429,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getExtraFields(boolean)',)",442,442,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getParseableExtraFieldsNoCopy()',)",448,451,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getParseableExtraFields()',)",455,456,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getAllExtraFieldsNoCopy()',)",464,467,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('copyOf(org.apache.commons.compress.archivers.zip.ZipExtraField[])',)",471,471,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('copyOf(org.apache.commons.compress.archivers.zip.ZipExtraField[],int)',)",475,477,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getMergedFields()',)",481,483,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getUnparseableOnly()',)",487,487,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getAllExtraFields()',)",491,492,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('addExtraField(org.apache.commons.compress.archivers.zip.ZipExtraField)',)",503,518,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('addAsFirstExtraField(org.apache.commons.compress.archivers.zip.ZipExtraField)',)",528,543,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('removeExtraField(org.apache.commons.compress.archivers.zip.ZipShort)',)",550,565,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('removeUnparseableExtraFieldData()',)",573,578,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getExtraField(org.apache.commons.compress.archivers.zip.ZipShort)',)",587,594,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getUnparseableExtraFieldData()',)",605,605,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setExtra(byte[])',)",619,628,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setExtra()',)",637,638,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setCentralDirectoryExtra(byte[])',)",646,653,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getLocalFileDataExtra()',)",660,661,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getCentralDirectoryExtra()',)",669,669,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getName()',)",678,678,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('isDirectory()',)",687,687,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getSize()',)",713,713,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setSize(long)',)",724,728,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setName(java.lang.String,byte[])',)",740,742,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getRawName()',)",755,760,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getLocalHeaderOffset()',)",764,764,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setLocalHeaderOffset(long)',)",768,769,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getDataOffset()',)",773,773,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setDataOffset(long)',)",783,784,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('isStreamContiguous()',)",788,788,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setStreamContiguous(boolean)',)",792,793,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('hashCode()',)",806,806,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getGeneralPurposeBit()',)",815,815,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setGeneralPurposeBit(org.apache.commons.compress.archivers.zip.GeneralPurposeBit)',)",824,825,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('mergeExtraFields(org.apache.commons.compress.archivers.zip.ZipExtraField[],boolean)',)",837,861,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getLastModifiedDate()',)",873,873,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('equals(java.lang.Object)',)",881,905,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setVersionMadeBy(int)',)",929,930,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setVersionRequired(int)',)",938,939,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getVersionRequired()',)",947,947,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getVersionMadeBy()',)",956,956,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getRawFlag()',)",965,965,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setRawFlag(int)',)",974,975,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getNameSource()',)",983,983,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setNameSource(org.apache.commons.compress.archivers.zip.ZipArchiveEntry$NameSource)',)",992,993,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('getCommentSource()',)",1001,1001,0
org.apache.commons.compress.archivers.zip.ZipArchiveEntry,"('setCommentSource(org.apache.commons.compress.archivers.zip.ZipArchiveEntry$CommentSource)',)",1010,1011,0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('usesUTF8ForNames()',)",87,87,0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('useUTF8ForNames(boolean)',)",95,96,0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('usesDataDescriptor()',)",105,105,0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('useDataDescriptor(boolean)',)",115,116,0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('usesEncryption()',)",123,123,0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('useEncryption(boolean)',)",131,132,0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('usesStrongEncryption()',)",139,139,0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('useStrongEncryption(boolean)',)",147,151,0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('getSlidingDictionarySize()',)",157,157,0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('getNumberOfShannonFanoTrees()',)",164,164,0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('encode()',)",172,174,0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('encode(byte[],int)',)",187,195,0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('parse(byte[],int)',)",205,213,0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('hashCode()',)",218,218,0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('equals(java.lang.Object)',)",226,230,0
org.apache.commons.compress.archivers.zip.GeneralPurposeBit,"('clone()',)",239,242,0
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,"('AbstractUnicodeExtraField()',)",36,37,0
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,"('AbstractUnicodeExtraField(java.lang.String,byte[],int,int)',)",51,61,0
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,"('AbstractUnicodeExtraField(java.lang.String,byte[])',)",72,73,0
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,"('assembleData()',)",76,85,0
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,"('getNameCRC32()',)",92,92,0
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,"('setNameCRC32(long)',)",100,102,0
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,"('getUnicodeName()',)",108,113,0
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,"('setUnicodeName(byte[])',)",120,128,0
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,"('getCentralDirectoryData()',)",132,140,0
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,"('getCentralDirectoryLength()',)",145,148,0
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,"('getLocalFileDataData()',)",153,153,0
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,"('getLocalFileDataLength()',)",158,158,0
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,"('parseFromLocalFileData(byte[],int,int)',)",165,180,0
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,"('parseFromCentralDirectoryData(byte[],int,int)',)",190,191,0
org.apache.commons.compress.archivers.zip.UnicodePathExtraField,"('UnicodePathExtraField()',)",36,37,0
org.apache.commons.compress.archivers.zip.UnicodePathExtraField,"('UnicodePathExtraField(java.lang.String,byte[],int,int)',)",50,51,0
org.apache.commons.compress.archivers.zip.UnicodePathExtraField,"('UnicodePathExtraField(java.lang.String,byte[])',)",61,62,0
org.apache.commons.compress.archivers.zip.UnicodePathExtraField,"('<clinit>()',)",34,34,0
org.apache.commons.compress.archivers.zip.UnicodePathExtraField,"('getHeaderId()',)",66,66,0
org.apache.commons.compress.archivers.zip.UnicodeCommentExtraField,"('UnicodeCommentExtraField()',)",36,37,0
org.apache.commons.compress.archivers.zip.UnicodeCommentExtraField,"('UnicodeCommentExtraField(java.lang.String,byte[],int,int)',)",51,52,0
org.apache.commons.compress.archivers.zip.UnicodeCommentExtraField,"('UnicodeCommentExtraField(java.lang.String,byte[])',)",62,63,0
org.apache.commons.compress.archivers.zip.UnicodeCommentExtraField,"('<clinit>()',)",34,34,0
org.apache.commons.compress.archivers.zip.UnicodeCommentExtraField,"('getHeaderId()',)",67,67,0
org.apache.commons.compress.archivers.zip.ZipUtil,"('ZipUtil()',)",31,31,0
org.apache.commons.compress.archivers.zip.ZipUtil,"('<clinit>()',)",35,35,0
org.apache.commons.compress.archivers.zip.ZipUtil,"('toDosTime(java.util.Date)',)",43,43,0
org.apache.commons.compress.archivers.zip.ZipUtil,"('toDosTime(long)',)",54,56,0
org.apache.commons.compress.archivers.zip.ZipUtil,"('toDosTime(long,byte[],int)',)",70,71,0
org.apache.commons.compress.archivers.zip.ZipUtil,"('toDosTime(java.util.Calendar,long,byte[],int)',)",74,89,0
org.apache.commons.compress.archivers.zip.ZipUtil,"('adjustToLong(int)',)",100,103,0
org.apache.commons.compress.archivers.zip.ZipUtil,"('reverse(byte[])',)",118,124,0
org.apache.commons.compress.archivers.zip.ZipUtil,"('bigToLong(java.math.BigInteger)',)",135,138,0
org.apache.commons.compress.archivers.zip.ZipUtil,"('longToBig(long)',)",153,160,0
org.apache.commons.compress.archivers.zip.ZipUtil,"('signedByteToUnsignedInt(byte)',)",172,175,0
org.apache.commons.compress.archivers.zip.ZipUtil,"('unsignedIntToSignedByte(int)',)",187,193,0
org.apache.commons.compress.archivers.zip.ZipUtil,"('fromDosTime(org.apache.commons.compress.archivers.zip.ZipLong)',)",203,204,0
org.apache.commons.compress.archivers.zip.ZipUtil,"('dosToJavaTime(long)',)",214,224,0
org.apache.commons.compress.archivers.zip.ZipUtil,"('setNameAndCommentFromExtraFields(org.apache.commons.compress.archivers.zip.ZipArchiveEntry,byte[],byte[])',)",235,254,0
org.apache.commons.compress.archivers.zip.ZipUtil,"('getUnicodeStringIfOriginalMatches(org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,byte[])',)",266,284,0
org.apache.commons.compress.archivers.zip.ZipUtil,"('copy(byte[])',)",292,297,0
org.apache.commons.compress.archivers.zip.ZipUtil,"('copy(byte[],byte[],int)',)",301,304,0
org.apache.commons.compress.archivers.zip.ZipUtil,"('canHandleEntryData(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",311,311,0
org.apache.commons.compress.archivers.zip.ZipUtil,"('supportsEncryptionOf(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",321,321,0
org.apache.commons.compress.archivers.zip.ZipUtil,"('supportsMethodOf(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",331,331,0
org.apache.commons.compress.archivers.zip.ZipUtil,"('checkRequestedFeatures(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",345,359,0
org.apache.commons.compress.archivers.zip.ZipMethod,"('getMethodByCode(int)',)",221,221,0
org.apache.commons.compress.compressors.CompressorInputStream,"('CompressorInputStream()',)",23,24,0
org.apache.commons.compress.compressors.CompressorInputStream,"('count(int)',)",35,36,0
org.apache.commons.compress.compressors.CompressorInputStream,"('count(long)',)",45,48,0
org.apache.commons.compress.compressors.CompressorInputStream,"('pushedBackBytes(long)',)",57,58,0
org.apache.commons.compress.compressors.CompressorInputStream,"('getCount()',)",68,68,0
org.apache.commons.compress.compressors.CompressorInputStream,"('getBytesRead()',)",78,78,0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('BZip2CompressorInputStream(java.io.InputStream)',)",112,113,0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('BZip2CompressorInputStream(java.io.InputStream,boolean)',)",62,136,0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('read()',)",140,145,0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('read(byte[],int,int)',)",156,182,0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('makeMaps()',)",186,198,0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('read0()',)",201,227,0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('readNextByte(org.apache.commons.compress.utils.BitInputStream)',)",232,233,0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('init(boolean)',)",237,267,0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('initBlock()',)",271,328,0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('endBlock()',)",331,347,0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('complete()',)",350,360,0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('close()',)",365,374,0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('bsR(org.apache.commons.compress.utils.BitInputStream,int)',)",383,387,0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('bsGetBit(org.apache.commons.compress.utils.BitInputStream)',)",391,391,0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('bsGetUByte(org.apache.commons.compress.utils.BitInputStream)',)",395,395,0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('bsGetInt(org.apache.commons.compress.utils.BitInputStream)',)",399,399,0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('checkBounds(int,int,java.lang.String)',)",404,410,0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('hbCreateDecodeTables(int[],int[],int[],char[],int,int,int)',)",419,454,0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('recvDecodingTables()',)",457,536,0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('createHuffmanDecodingTables(int,int)',)",543,567,0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('getAndMoveToFrontDecode()',)",570,711,0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('getAndMoveToFrontDecode0()',)",714,728,0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('setupBlock()',)",732,768,0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('setupRandPartA()',)",772,793,0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('setupNoRandPartA()',)",797,811,0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('setupRandPartB()',)",815,839,0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('setupRandPartC()',)",844,852,0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('setupNoRandPartB()',)",856,866,0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('setupNoRandPartC()',)",871,880,0
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream,"('matches(byte[],int)',)",958,974,0
org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStream,"('Deflate64CompressorInputStream(java.io.InputStream)',)",41,43,0
org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStream,"('Deflate64CompressorInputStream(org.apache.commons.compress.compressors.deflate64.HuffmanDecoder)',)",45,47,0
org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStream,"('read()',)",54,65,0
org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStream,"('read(byte[],int,int)',)",75,83,0
org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStream,"('available()',)",88,88,0
org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStream,"('close()',)",93,98,0
org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStream,"('closeDecoder()',)",101,103,0
org.apache.commons.compress.archivers.zip.ExplodingInputStream,"('ExplodingInputStream(int,int,java.io.InputStream)',)",63,84,0
org.apache.commons.compress.archivers.zip.ExplodingInputStream,"('init()',)",92,102,0
org.apache.commons.compress.archivers.zip.ExplodingInputStream,"('read()',)",106,110,0
org.apache.commons.compress.archivers.zip.ExplodingInputStream,"('fillBuffer()',)",118,156,0
org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException,"('UnsupportedZipFeatureException(org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature,org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",41,45,0
org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException,"('UnsupportedZipFeatureException(org.apache.commons.compress.archivers.zip.ZipMethod,org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",56,60,0
org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException,"('UnsupportedZipFeatureException(org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature)',)",70,73,0
org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException,"('getFeature()',)",80,80,0
org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException,"('getEntry()',)",88,88,0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('LZWInputStream(java.io.InputStream,java.nio.ByteOrder)',)",41,56,0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('close()',)",60,61,0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('read()',)",65,69,0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('read(byte[],int,int)',)",74,87,0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('setClearCode(int)',)",112,113,0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('initializeTables(int,int)',)",126,137,0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('initializeTables(int)',)",144,154,0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('readNextCode()',)",162,165,0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('addEntry(int,byte,int)',)",177,182,0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('addRepeatOfPreviousCode()',)",191,195,0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('expandCodeToOutputStack(int,boolean)',)",208,216,0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('readFromStack(byte[],int,int)',)",220,227,0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('getCodeSize()',)",231,231,0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('resetCodeSize()',)",235,236,0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('setCodeSize(int)',)",239,240,0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('incrementCodeSize()',)",243,244,0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('resetPreviousCode()',)",247,248,0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('getPrefix(int)',)",251,251,0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('setPrefix(int,int)',)",255,256,0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('getPrefixesLength()',)",259,259,0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('getClearCode()',)",263,263,0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('getTableSize()',)",267,267,0
org.apache.commons.compress.compressors.lzw.LZWInputStream,"('setTableSize(int)',)",271,272,0
org.apache.commons.compress.archivers.zip.UnshrinkingInputStream,"('UnshrinkingInputStream(java.io.InputStream)',)",44,52,0
org.apache.commons.compress.archivers.zip.UnshrinkingInputStream,"('addEntry(int,byte)',)",56,65,0
org.apache.commons.compress.archivers.zip.UnshrinkingInputStream,"('partialClear()',)",69,81,0
org.apache.commons.compress.archivers.zip.UnshrinkingInputStream,"('decompressNextSymbol()',)",97,124,0
