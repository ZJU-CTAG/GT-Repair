File,Signature,StartLine,EndLine,Suspiciousness
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('ArchiveStreamFactory()',)",136,137,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('ArchiveStreamFactory(java.lang.String)',)",130,151,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('getEntryEncoding()',)",161,161,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('setEntryEncoding(java.lang.String)',)",176,180,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('createArchiveInputStream(java.lang.String,java.io.InputStream)',)",198,255,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('createArchiveOutputStream(java.lang.String,java.io.OutputStream)',)",273,314,0.0
org.apache.commons.compress.archivers.ArchiveStreamFactory,"('createArchiveInputStream(java.io.InputStream)',)",331,413,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('ArchiveOutputStream()',)",47,54,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('write(int)',)",108,110,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('count(int)',)",119,120,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('count(long)',)",130,133,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('getCount()',)",143,143,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('getBytesWritten()',)",152,152,0.0
org.apache.commons.compress.archivers.ArchiveOutputStream,"('canWriteEntryData(org.apache.commons.compress.archivers.ArchiveEntry)',)",167,167,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('ArArchiveOutputStream(java.io.OutputStream)',)",42,52,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('setLongFileMode(int)',)",63,64,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('writeArchiveHeader()',)",67,69,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('closeArchiveEntry()',)",74,84,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)',)",88,111,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('fill(long,long,char)',)",114,122,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('write(java.lang.String)',)",126,128,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('writeEntryHeader(org.apache.commons.compress.archivers.ar.ArArchiveEntry)',)",133,194,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('write(byte[],int,int)',)",199,202,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('close()',)",209,214,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('createArchiveEntry(java.io.File,java.lang.String)',)",219,222,0.0
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream,"('finish()',)",227,233,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('ArchiveUtils()',)",31,32,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('toString(org.apache.commons.compress.archivers.ArchiveEntry)',)",46,56,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('matchAsciiBuffer(java.lang.String,byte[],int,int)',)",72,76,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('matchAsciiBuffer(java.lang.String,byte[])',)",87,87,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('toAsciiBytes(java.lang.String)',)",99,101,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('toAsciiString(byte[])',)",113,115,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('toAsciiString(byte[],int,int)',)",129,131,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('isEqual(byte[],int,int,byte[],int,int,boolean)',)",151,176,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('isEqual(byte[],int,int,byte[],int,int)',)",193,193,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('isEqual(byte[],byte[])',)",204,204,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('isEqual(byte[],byte[],boolean)',)",216,216,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('isEqualWithNull(byte[],int,int,byte[],int,int)',)",233,233,0.0
org.apache.commons.compress.utils.ArchiveUtils,"('isArrayZero(byte[],int)',)",246,251,0.0
org.apache.commons.compress.utils.IOUtils,"('IOUtils()',)",41,42,0.0
org.apache.commons.compress.utils.IOUtils,"('<clinit>()',)",38,38,0.0
org.apache.commons.compress.utils.IOUtils,"('copy(java.io.InputStream,java.io.OutputStream)',)",56,56,0.0
org.apache.commons.compress.utils.IOUtils,"('copy(java.io.InputStream,java.io.OutputStream,int)',)",72,79,0.0
org.apache.commons.compress.utils.IOUtils,"('skip(java.io.InputStream,long)',)",99,116,0.0
org.apache.commons.compress.utils.IOUtils,"('readFully(java.io.InputStream,byte[])',)",132,132,0.0
org.apache.commons.compress.utils.IOUtils,"('readFully(java.io.InputStream,byte[],int,int)',)",153,164,0.0
org.apache.commons.compress.utils.IOUtils,"('toByteArray(java.io.InputStream)',)",186,188,0.0
org.apache.commons.compress.utils.IOUtils,"('closeQuietly(java.io.Closeable)',)",197,203,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('ArchiveInputStream()',)",40,46,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('read()',)",81,82,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('count(int)',)",92,93,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('count(long)',)",103,106,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('pushedBackBytes(long)',)",115,116,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('getCount()',)",126,126,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('getBytesRead()',)",135,135,0.0
org.apache.commons.compress.archivers.ArchiveInputStream,"('canReadEntryData(org.apache.commons.compress.archivers.ArchiveEntry)',)",152,152,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('ZipArchiveInputStream(java.io.InputStream)',)",150,151,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('ZipArchiveInputStream(java.io.InputStream,java.lang.String)',)",159,160,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('ZipArchiveInputStream(java.io.InputStream,java.lang.String,boolean)',)",169,170,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('ZipArchiveInputStream(java.io.InputStream,java.lang.String,boolean,boolean)',)",74,193,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('<clinit>()',)",776,778,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('getNextZipEntry()',)",196,297,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readFirstLocalFileHeader(byte[])',)",306,320,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('processZip64Extra(org.apache.commons.compress.archivers.zip.ZipLong,org.apache.commons.compress.archivers.zip.ZipLong)',)",328,342,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('getNextEntry()',)",346,346,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('canReadEntryData(org.apache.commons.compress.archivers.ArchiveEntry)',)",358,364,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('read(byte[],int,int)',)",369,405,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readStored(byte[],int,int)',)",413,444,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readDeflated(byte[],int,int)',)",451,463,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readFromInflater(byte[],int,int)',)",471,489,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('close()',)",494,499,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('skip(long)',)",518,530,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('matches(byte[],int)',)",543,547,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('checksig(byte[],byte[])',)",554,559,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('closeEntry()',)",581,616,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('drainCurrentEntryData()',)",623,633,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('getBytesInflated()',)",651,657,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('fill()',)",661,670,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readFully(byte[])',)",674,679,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readDataDescriptor()',)",682,712,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('supportsDataDescriptorFor(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",722,722,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readStoredEntry()',)",746,774,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('bufferContainsSignature(java.io.ByteArrayOutputStream,int,int,int)',)",791,817,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('cacheBytesRead(java.io.ByteArrayOutputStream,int,int,int)',)",830,838,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('pushback(byte[],int,int)',)",842,844,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('skipRemainderOfArchive()',)",871,877,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('findEocdRecord()',)",884,914,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('realSkip(long)',)",924,937,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('readOneByte()',)",947,951,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,"('isFirstByteOfEocdSig(int)',)",955,955,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('ZipArchiveOutputStream(java.io.OutputStream)',)",112,283,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('ZipArchiveOutputStream(java.io.File)',)",112,306,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('<clinit>()',)",151,973,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('deflate()',)",980,981,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeLocalFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",989,990,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeLocalFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry,boolean)',)",993,1006,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('createLocalFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry,java.nio.ByteBuffer,boolean,boolean)',)",1011,1072,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('addUnicodeExtraFields(org.apache.commons.compress.archivers.zip.ZipArchiveEntry,boolean,java.nio.ByteBuffer)',)",1084,1109,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeDataDescriptor(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1117,1129,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeCentralFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1140,1142,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('createCentralFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1146,1163,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('createCentralFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry,java.nio.ByteBuffer,long,boolean)',)",1175,1250,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('handleZip64Extra(org.apache.commons.compress.archivers.zip.ZipArchiveEntry,long,boolean)',)",1259,1275,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeCentralDirectoryEnd()',)",1285,1317,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeZip64CentralDirectory()',)",1326,1385,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeOut(byte[])',)",1393,1394,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('writeOut(byte[],int,int)',)",1406,1407,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('getGeneralPurposeBits(int,boolean)',)",1411,1416,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('versionNeededToExtract(int,boolean)',)",1420,1425,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('isDeflatedToOutputStream(int)',)",1431,1431,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('createArchiveEntry(java.io.File,java.lang.String)',)",1449,1452,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('getZip64Extra(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1463,1484,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('hasZip64Extra(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1494,1494,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('getEffectiveZip64Mode(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1507,1513,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('getEntryEncoding(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1517,1518,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('getName(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)',)",1523,1523,0.0
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,"('destroy()',)",1534,1540,0.0
org.apache.commons.compress.archivers.jar.JarArchiveInputStream,"('JarArchiveInputStream(java.io.InputStream)',)",41,42,0.0
org.apache.commons.compress.archivers.jar.JarArchiveInputStream,"('JarArchiveInputStream(java.io.InputStream,java.lang.String)',)",52,53,0.0
org.apache.commons.compress.archivers.jar.JarArchiveInputStream,"('getNextJarEntry()',)",56,57,0.0
org.apache.commons.compress.archivers.jar.JarArchiveInputStream,"('getNextEntry()',)",62,62,0.0
org.apache.commons.compress.archivers.jar.JarArchiveInputStream,"('matches(byte[],int)',)",76,76,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('ArArchiveInputStream(java.io.InputStream)',)",39,73,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('<clinit>()',)",305,305,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('getNextArEntry()',)",83,165,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('getExtendedName(int)',)",176,187,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('asLong(byte[])',)",190,190,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('asInt(byte[])',)",194,194,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('asInt(byte[],boolean)',)",198,198,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('asInt(byte[],int)',)",202,202,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('asInt(byte[],int,boolean)',)",206,210,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('getNextEntry()',)",221,221,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('close()',)",231,236,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('read(byte[],int,int)',)",245,257,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('matches(byte[],int)',)",273,301,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('isBSDLongName(java.lang.String)',)",333,333,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('getBSDLongName(java.lang.String)',)",345,353,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('isGNUStringTable(java.lang.String)',)",376,376,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('readGNUStringTable(byte[])',)",385,392,0.0
org.apache.commons.compress.archivers.ar.ArArchiveInputStream,"('isGNULongName(java.lang.String)',)",404,404,0.0
org.apache.commons.compress.archivers.zip.ZipEncodingHelper,"('ZipEncodingHelper()',)",33,40,0.0
org.apache.commons.compress.archivers.zip.ZipEncodingHelper,"('<clinit>()',)",71,201,0.0
org.apache.commons.compress.archivers.zip.ZipEncodingHelper,"('getZipEncoding(java.lang.String)',)",213,233,0.0
org.apache.commons.compress.archivers.zip.ZipEncodingHelper,"('isUTF8(java.lang.String)',)",244,256,0.0
org.apache.commons.compress.archivers.zip.FallbackZipEncoding,"('FallbackZipEncoding()',)",50,52,0.0
org.apache.commons.compress.archivers.zip.FallbackZipEncoding,"('FallbackZipEncoding(java.lang.String)',)",60,62,0.0
org.apache.commons.compress.archivers.zip.FallbackZipEncoding,"('canEncode(java.lang.String)',)",69,69,0.0
org.apache.commons.compress.archivers.zip.FallbackZipEncoding,"('encode(java.lang.String)',)",77,80,0.0
org.apache.commons.compress.archivers.zip.FallbackZipEncoding,"('decode(byte[])',)",89,92,0.0
org.apache.commons.compress.utils.Charsets,"('Charsets()',)",57,57,0.0
org.apache.commons.compress.utils.Charsets,"('<clinit>()',)",98,159,0.0
org.apache.commons.compress.utils.Charsets,"('toCharset(java.nio.charset.Charset)',)",72,72,0.0
org.apache.commons.compress.utils.Charsets,"('toCharset(java.lang.String)',)",87,87,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('CpioArchiveInputStream(java.io.InputStream)',)",108,109,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('CpioArchiveInputStream(java.io.InputStream,java.lang.String)',)",123,124,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('CpioArchiveInputStream(java.io.InputStream,int)',)",138,139,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('CpioArchiveInputStream(java.io.InputStream,int,java.lang.String)',)",70,158,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('available()',)",174,178,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('close()',)",189,193,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('closeEntry()',)",206,209,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('ensureOpen()',)",218,221,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('getNextCPIOEntry()',)",233,269,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('skip(int)',)",274,277,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('read(byte[],int,int)',)",298,332,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readFully(byte[],int,int)',)",337,342,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readBinaryLong(int,boolean)',)",347,349,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readAsciiLong(int,int)',)",354,356,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readNewEntry(boolean)',)",362,391,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readOldAsciiEntry()',)",395,416,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readOldBinaryEntry(boolean)',)",421,443,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('readCString(int)',)",448,451,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('skip(long)',)",467,486,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('getNextEntry()',)",491,491,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('skipRemainderOfLastBlock()',)",498,508,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream,"('matches(byte[],int)',)",524,564,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('TarArchiveInputStream(java.io.InputStream)',)",86,87,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('TarArchiveInputStream(java.io.InputStream,java.lang.String)',)",96,98,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('TarArchiveInputStream(java.io.InputStream,int)',)",106,107,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('TarArchiveInputStream(java.io.InputStream,int,java.lang.String)',)",118,119,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('TarArchiveInputStream(java.io.InputStream,int,int)',)",128,129,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('TarArchiveInputStream(java.io.InputStream,int,int,java.lang.String)',)",52,147,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('close()',)",155,156,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('getRecordSize()',)",164,164,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('available()',)",181,184,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('skip(long)',)",206,214,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('markSupported()',)",224,224,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('mark(int)',)",234,234,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('reset()',)",241,241,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('getNextTarEntry()',)",257,324,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('skipRecordPadding()',)",332,338,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('getLongNameData()',)",348,370,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('getRecord()',)",388,395,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('isEOFRecord(byte[])',)",406,406,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('readRecord()',)",417,425,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('paxHeaders()',)",429,432,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('parsePaxHeaders(java.io.InputStream)',)",435,478,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('applyPaxHeadersToCurrentEntry(java.util.Map)',)",493,518,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('readGNUSparse()',)",533,547,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('getNextEntry()',)",558,558,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('tryToConsumeSecondEOFRecord()',)",572,585,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('read(byte[],int,int)',)",602,626,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('canReadEntryData(org.apache.commons.compress.archivers.ArchiveEntry)',)",636,640,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('getCurrentEntry()',)",649,649,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('setCurrentEntry(org.apache.commons.compress.archivers.tar.TarArchiveEntry)',)",653,654,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('isAtEOF()',)",657,657,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('setAtEOF(boolean)',)",661,662,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('consumeRemainderOfLastBlock()',)",670,675,0.0
org.apache.commons.compress.archivers.tar.TarArchiveInputStream,"('matches(byte[],int)',)",687,721,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('ArjArchiveInputStream(java.io.InputStream,java.lang.String)',)",48,73,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('ArjArchiveInputStream(java.io.InputStream)',)",83,84,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('close()',)",88,89,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('read8(java.io.DataInputStream)',)",92,94,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('read16(java.io.DataInputStream)',)",98,100,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('read32(java.io.DataInputStream)',)",104,106,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('readString(java.io.DataInputStream)',)",110,119,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('readFully(java.io.DataInputStream,byte[])',)",125,127,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('readHeader()',)",130,155,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('readMainHeader()',)",159,212,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('readLocalFileHeader()',)",216,267,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('readExtraData(int,java.io.DataInputStream,org.apache.commons.compress.archivers.arj.LocalFileHeader)',)",272,282,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('matches(byte[],int)',)",294,294,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('getArchiveName()',)",303,303,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('getArchiveComment()',)",310,310,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('getNextEntry()',)",315,333,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('canReadEntryData(org.apache.commons.compress.archivers.ArchiveEntry)',)",339,339,0.0
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream,"('read(byte[],int,int)',)",345,351,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('DumpArchiveInputStream(java.io.InputStream)',)",90,91,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('DumpArchiveInputStream(java.io.InputStream,java.lang.String)',)",59,148,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('getCount()',)",153,153,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('getBytesRead()',)",158,158,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('getSummary()',)",165,165,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('readCLRI()',)",172,190,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('readBITS()',)",196,214,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('getNextDumpEntry()',)",220,220,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('getNextEntry()',)",228,316,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('readDirectoryEntry(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)',)",324,405,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('getPath(org.apache.commons.compress.archivers.dump.DumpArchiveEntry)',)",416,448,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('read(byte[],int,int)',)",466,521,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('close()',)",529,533,0.0
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream,"('matches(byte[],int)',)",542,552,0.0
org.apache.commons.compress.archivers.ArchiveException,"('ArchiveException(java.lang.String)',)",37,38,0.0
org.apache.commons.compress.archivers.ArchiveException,"('ArchiveException(java.lang.String,java.lang.Exception)',)",49,51,0.0
org.apache.commons.compress.archivers.StreamingNotSupportedException,"('StreamingNotSupportedException(java.lang.String)',)",38,40,0.0
org.apache.commons.compress.archivers.StreamingNotSupportedException,"('getFormat()',)",48,48,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry()',)",118,194,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry(java.lang.String)',)",203,204,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry(java.lang.String,boolean)',)",217,227,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry(java.lang.String,byte)',)",236,237,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry(java.lang.String,byte,boolean)',)",250,256,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry(java.io.File)',)",266,267,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry(java.io.File,java.lang.String)',)",118,298,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry(byte[])',)",308,310,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('TarArchiveEntry(byte[],org.apache.commons.compress.archivers.zip.ZipEncoding)',)",323,325,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('equals(org.apache.commons.compress.archivers.tar.TarArchiveEntry)',)",335,335,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('equals(java.lang.Object)',)",347,350,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('hashCode()',)",360,360,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isDescendent(org.apache.commons.compress.archivers.tar.TarArchiveEntry)',)",372,372,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getName()',)",381,381,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setName(java.lang.String)',)",390,391,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setMode(int)',)",399,400,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getLinkName()',)",408,408,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setLinkName(java.lang.String)',)",419,420,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getUserId()',)",428,428,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setUserId(int)',)",437,438,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getGroupId()',)",446,446,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setGroupId(int)',)",455,456,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getUserName()',)",464,464,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setUserName(java.lang.String)',)",473,474,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getGroupName()',)",482,482,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setGroupName(java.lang.String)',)",491,492,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setIds(int,int)',)",501,503,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setNames(java.lang.String,java.lang.String)',)",512,514,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setModTime(long)',)",523,524,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setModTime(java.util.Date)',)",532,533,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getModTime()',)",541,541,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getLastModifiedDate()',)",545,545,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isCheckSumOK()',)",556,556,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getFile()',)",565,565,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getMode()',)",574,574,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getSize()',)",583,583,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setSize(long)',)",593,597,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getDevMajor()',)",606,606,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setDevMajor(int)',)",617,622,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getDevMinor()',)",631,631,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('setDevMinor(int)',)",642,647,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isExtended()',)",656,656,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getRealSize()',)",665,665,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isGNUSparse()',)",674,674,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isGNULongLinkEntry()',)",683,683,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isGNULongNameEntry()',)",693,693,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isPaxHeader()',)",706,706,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isGlobalPaxHeader()',)",718,718,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isDirectory()',)",727,739,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isFile()',)",748,754,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isSymbolicLink()',)",763,763,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isLink()',)",772,772,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isCharacterDevice()',)",781,781,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isBlockDevice()',)",790,790,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('isFIFO()',)",799,799,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('getDirectoryEntries()',)",809,820,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('writeEntryHeader(byte[])',)",832,841,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('writeEntryHeader(byte[],org.apache.commons.compress.archivers.zip.ZipEncoding,boolean)',)",855,895,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('writeEntryHeaderField(long,byte[],int,int,boolean)',)",899,906,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('parseTarHeader(byte[])',)",918,927,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('parseTarHeader(byte[],org.apache.commons.compress.archivers.zip.ZipEncoding)',)",940,941,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('parseTarHeader(byte[],org.apache.commons.compress.archivers.zip.ZipEncoding,boolean)',)",946,1012,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('normalizeFileName(java.lang.String,boolean)',)",1020,1054,0.0
org.apache.commons.compress.archivers.tar.TarArchiveEntry,"('evaluateType(byte[])',)",1064,1070,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('TarUtils()',)",77,78,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('<clinit>()',)",40,47,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('parseOctal(byte[],int,int)',)",102,147,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('parseOctalOrBinary(byte[],int,int)',)",170,177,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('parseBinaryLong(byte[],int,int,boolean)',)",183,198,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('parseBinaryBigInteger(byte[],int,int,boolean)',)",205,218,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('parseBoolean(byte[],int)',)",232,232,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('exceptionMessage(byte[],int,int,int,byte)',)",245,249,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('parseName(byte[],int,int)',)",264,270,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('parseName(byte[],int,int,org.apache.commons.compress.archivers.zip.ZipEncoding)',)",292,303,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatNameBytes(java.lang.String,byte[],int,int)',)",323,330,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatNameBytes(java.lang.String,byte[],int,int,org.apache.commons.compress.archivers.zip.ZipEncoding)',)",356,369,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatUnsignedOctalString(long,byte[],int,int)',)",383,404,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatOctalBytes(long,byte[],int,int)',)",422,428,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatLongOctalBytes(long,byte[],int,int)',)",447,452,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatLongOctalOrBinaryBytes(long,byte[],int,int)',)",476,489,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatLongBinary(long,byte[],int,int,boolean)',)",495,511,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatBigIntegerBinary(long,byte[],int,int,boolean)',)",517,526,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('formatCheckSumOctalBytes(long,byte[],int,int)',)",544,550,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('computeCheckSum(byte[])',)",560,566,0.0
org.apache.commons.compress.archivers.tar.TarUtils,"('verifyCheckSum(byte[])',)",605,624,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('CpioArchiveOutputStream(java.io.OutputStream,short)',)",111,112,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('CpioArchiveOutputStream(java.io.OutputStream,short,int)',)",129,130,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('CpioArchiveOutputStream(java.io.OutputStream,short,int,java.lang.String)',)",69,165,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('CpioArchiveOutputStream(java.io.OutputStream)',)",175,176,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('CpioArchiveOutputStream(java.io.OutputStream,java.lang.String)',)",190,191,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('ensureOpen()',)",200,203,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)',)",221,246,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeHeader(org.apache.commons.compress.archivers.cpio.CpioArchiveEntry)',)",249,273,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeNewEntry(org.apache.commons.compress.archivers.cpio.CpioArchiveEntry)',)",276,306,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeOldAsciiEntry(org.apache.commons.compress.archivers.cpio.CpioArchiveEntry)',)",310,336,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeOldBinaryEntry(org.apache.commons.compress.archivers.cpio.CpioArchiveEntry,boolean)',)",340,367,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('closeArchiveEntry()',)",377,400,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('write(byte[],int,int)',)",419,440,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('finish()',)",453,473,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('close()',)",484,492,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('pad(int)',)",495,500,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeBinaryLong(long,int,boolean)',)",504,507,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeAsciiLong(long,int,int)',)",511,533,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('writeCString(java.lang.String)',)",541,546,0.0
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,"('createArchiveEntry(java.io.File,java.lang.String)',)",556,559,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('TarArchiveOutputStream(java.io.OutputStream)',)",101,102,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('TarArchiveOutputStream(java.io.OutputStream,java.lang.String)',)",111,112,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('TarArchiveOutputStream(java.io.OutputStream,int)',)",120,121,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('TarArchiveOutputStream(java.io.OutputStream,int,java.lang.String)',)",132,133,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('TarArchiveOutputStream(java.io.OutputStream,int,int)',)",142,143,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('TarArchiveOutputStream(java.io.OutputStream,int,int,java.lang.String)',)",71,164,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('setLongFileMode(int)',)",174,175,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('setBigNumberMode(int)',)",186,187,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('setAddPaxHeadersForNonAsciiNames(boolean)',)",194,195,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('getCount()',)",200,200,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('getBytesWritten()',)",205,205,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('finish()',)",219,231,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('close()',)",239,247,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('getRecordSize()',)",255,255,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)',)",273,321,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('closeArchiveEntry()',)",335,359,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('write(byte[],int,int)',)",377,442,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('writePaxHeaders(org.apache.commons.compress.archivers.tar.TarArchiveEntry,java.lang.String,java.util.Map)',)",451,485,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('stripTo7Bits(java.lang.String)',)",488,498,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('shouldBeReplaced(char)',)",506,506,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('writeEOFRecord()',)",516,518,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('flush()',)",522,523,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('createArchiveEntry(java.io.File,java.lang.String)',)",528,531,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('writeRecord(byte[])',)",541,550,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('writeRecord(byte[],int)',)",563,572,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('padAsNeeded()',)",575,581,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('addPaxHeadersForBigNumbers(java.util.Map,org.apache.commons.compress.archivers.tar.TarArchiveEntry)',)",585,601,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('addPaxHeaderForBigNumber(java.util.Map,java.lang.String,long,long)',)",606,609,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('failForBigNumbers(org.apache.commons.compress.archivers.tar.TarArchiveEntry)',)",612,623,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('failForBigNumber(java.lang.String,long,long)',)",626,627,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('failForBigNumberWithPosixMessage(java.lang.String,long,long)',)",630,631,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('failForBigNumber(java.lang.String,long,long,java.lang.String)',)",634,639,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('handleLongName(org.apache.commons.compress.archivers.tar.TarArchiveEntry,java.lang.String,java.util.Map,java.lang.String,byte,java.lang.String)',)",667,691,0.0
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,"('transferModTime(org.apache.commons.compress.archivers.tar.TarArchiveEntry,org.apache.commons.compress.archivers.tar.TarArchiveEntry)',)",695,701,0.0
org.apache.commons.compress.archivers.jar.JarArchiveOutputStream,"('JarArchiveOutputStream(java.io.OutputStream)',)",38,42,0.0
org.apache.commons.compress.archivers.jar.JarArchiveOutputStream,"('JarArchiveOutputStream(java.io.OutputStream,java.lang.String)',)",38,54,0.0
org.apache.commons.compress.archivers.jar.JarArchiveOutputStream,"('putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)',)",59,64,0.0
