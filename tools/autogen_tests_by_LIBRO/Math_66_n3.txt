public void testQuadraticFunctionMin() {
    final DifferentiableUnivariateRealFunction f = new DifferentiableUnivariateRealFunction() {
        @Override
        public double value(double x) {
            return -x * x + 4 * x - 4;
        }
        @Override
        public UnivariateRealFunction derivative() {
            return new UnivariateRealFunction() {
                @Override
                public double value(double x) {
                    return -2 * x + 4;
                }
            };
        }
    };
    final double min = -0.5;
    UnivariateRealOptimizer optimizer = new BrentOptimizer(1e-12, 1e-8);
    optimizer.setMaxIterations(100);
    optimizer.setMaxEvaluations(100);
    assertEquals(min, optimizer.optimize(f, GoalType.MINIMIZE, -4, 4).getPoint(), 1e-12);
}
