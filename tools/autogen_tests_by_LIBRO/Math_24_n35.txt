public void testBrentOptimizer() {
    MultivariateFunction f = new MultivariateFunction () {
        public double value(double[] x) {
            return x[0] * x[0] + x[1] * x[1];
        }
    };
    MultivariateRealFunction f2 = new MultivariateRealFunction () {
        public double value(double[] x) {
            return x[0] * x[0] + x[1] * x[1];
        }
    };
    double[] guess = new double[] { 0.0, 100.0 };
    double[] steps = new double[] { 1.0, 1.0 };
    double[] result = new double[2];
    double[] expected = new double[2];
    double[] result2 = new double[2];
    double[] expected2 = new double[2];
    double best = Double.POSITIVE_INFINITY;
    double best2 = Double.POSITIVE_INFINITY;

    for (int i=0; i<100; i++) {
        result = new BrentOptimizer(1e