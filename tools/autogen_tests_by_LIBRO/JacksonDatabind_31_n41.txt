public void testConvert() throws IOException {
    // create a json object
    ObjectNode rootNode = mapper.createObjectNode();
    rootNode.put("a", "a");
    rootNode.put("b", "b");

    // create a filter for the convert method
    PathFilterProvider pathFilterProvider = new PathFilterProvider() {
        @Override
        public PathFilter getPathFilter() {
            return new PathFilter() {
                @Override
                public boolean accept(String path) {
                    return !path.equals("a");
                }
            };
        }
    };
    // convert the json object
    String json = mapper.writer(pathFilterProvider).convertValue(rootNode, String.class);

    // create a filter for the write method
    PathFilterProvider pathFilterProvider2 = new PathFilterProvider() {
        @Override
        public PathFilter getPathFilter() {
            return new PathFilter() {
                @Override
                public boolean accept(String path) {
                    return !path.equals("a");
                }
            };
        }
    };
   