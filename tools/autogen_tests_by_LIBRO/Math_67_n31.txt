public void testMethodgetResult() {
    UnivariateFunction f = new SinSquaredFunction();
    UnivariateRealOptimizer optimizer = new BrentOptimizer(1e-10, 1e-14);
    MultiStartUnivariateRealOptimizer multiStart = new MultiStartUnivariateRealOptimizer(optimizer, 10, new RandomGenerator() {
        public void setSeed(long seed) {
        }
        public void setSeed(int[] seed) {
        }
        public int nextInt() {
            return 0;
        }
        public int nextInt(int n) {
            return 0;
        }
        public long nextLong() {
            return 0;
        }
        public boolean nextBoolean() {
            return false;
        }
        public float nextFloat() {
            return 0;
        }
        public double nextDouble() {
            return 0;
        }
        public double nextGaussian() {
            return 0;
        }
    });
    double[] optima = multiStart.optimize(f, GoalType.MAXIMIZE, -10,