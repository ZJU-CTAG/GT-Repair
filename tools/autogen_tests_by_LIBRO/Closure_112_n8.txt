public void testTemplateTypeInference() {
    Class<Integer> c = new Class<Integer>();
    c.foo(new Function<Integer, Integer>() {
        @Override
        public Integer apply(Integer integer) {
            return integer + 1;
        }
    });
}

static class Class<CLASS> {

    public <T> T foo(Function<CLASS, CLASS> a) {
        return (T) "string";
    }
}

static abstract class Function<A, B> {
    public abstract B apply(A a);
}
