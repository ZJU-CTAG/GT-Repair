public void testBrentOptimizer() {
    try {
        UnivariateRealFunction f = new SinFunction();
        UnivariateRealOptimizer optimizer = new BrentOptimizer();
        optimizer.optimize(f, GoalType.MAXIMIZE, -Math.PI, Math.PI);
        Assert.fail("an exception should have been thrown");
    } catch (NullPointerException e) {
        // Expected behaviour.
    } catch (Exception e) {
        Assert.fail("wrong exception caught");
    }
    try {
        UnivariateRealFunction f = new SinFunction();
        UnivariateRealOptimizer optimizer = new BrentOptimizer();
        optimizer.optimize(GoalType.MAXIMIZE, -Math.PI, Math.PI);
        Assert.fail("an exception should have been thrown");
    } catch (NullPointerException e) {
        // Expected behaviour.
    } catch (Exception e) {
        Assert.fail("wrong exception caught");
    }
}
