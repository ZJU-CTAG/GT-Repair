public void testIssue109() {
    final TestProblem3 pb = new TestProblem3(0.9);
    double minStep = 0;
    double maxStep = pb.getFinalTime() - pb.getInitialTime();
    double scalAbsoluteTolerance = 5.0e-6;
    double scalRelativeTolerance = 1.0e-6;
    firstStep = 0.001;
    maxStep = FastMath.min(100.0, maxStep);
    final DormandPrince853Integrator integ = new DormandPrince853Integrator(minStep, maxStep,
                                                                           scalAbsoluteTolerance,
                                                                           scalRelativeTolerance);
    final double stopTime = integ.integrate(pb,
                                            pb.getInitialTime(), pb.getInitialState(),
                                            pb.getFinalTime(), new double[pb.getDimension()]);
    if ((pb.getFinalTime() - stopTime) > 1.0e-12) {
        fail("Expected : " + pb.getFinalTime() +