public void testPossiblyWrongTokenBufferDelegateDeserializationUsingJsonCreator() throws Exception {
    final ObjectMapper mapper = new ObjectMapper();
    mapper.registerModule(new SimpleModule()
            .addDeserializer(Value.class, new JsonDeserializer<Value>() {
                @Override
                public Value deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException {
                    final TokenBuffer tokenBuffer = new TokenBuffer(jp.getCodec());
                    tokenBuffer.copyCurrentStructure(jp);
                    return Value.from(tokenBuffer);
                }
            }));

    final Value value = mapper.readValue("{ \"a\":1, \"b\":null }", Value.class);
    assertThat(value.a, is(1));
    assertThat(value.b, nullValue());
}
