public void testIssue() throws Exception
{
    ObjectMapper mapper = new ObjectMapper().enableDefaultTyping(DefaultTyping.NON_FINAL);
    TestClass testInstance = mapper.readValue(TEST_INSTANCE_SERIALIZED, TestClass.class);
    String testInstanceSerialized = mapper.writeValueAsString(testInstance);
    assertEquals(TEST_INSTANCE_SERIALIZED, testInstanceSerialized);
}

@JsonAutoDetect(fieldVisibility = Visibility.ANY)
public static final class TestClass {
    @JsonProperty("mapProperty")
    @JsonSerialize(keyUsing = CompoundKeySerializer.class)
    private final Map<CompoundKey, String> mapProperty;

    @JsonCreator
    public TestClass(@JsonDeserialize(keyUsing = CompoundKeyDeserializer.class) @JsonProperty("mapProperty") Map<CompoundKey, String> mapProperty) {
        this.mapProperty = mapProperty;
    }
}

public static final class CompoundKey {
    private