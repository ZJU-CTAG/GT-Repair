public void testMinimize() {
        MultivariateRealFunction f = new MultivariateRealFunction() {
            public double value(double[] x) {
                double f = 0;
                for (int i = 0; i < x.length; i++) {
                    f += (1.0 / (i + 1)) * x[i] * x[i];
                }
                return f;
            }
        };
        MultivariateVectorialOptimizer optimizer = new LevenbergMarquardtOptimizer();
        double[] x = new double[10];
        Arrays.fill(x, 1.0);
        VectorialPointValuePair result = optimizer.optimize(f, x);
        double[] residuals = result.getValue();
        double cost = 0;
        for (double r : residuals) {
            cost += r * r;
        }
        Assert.assertEquals(result.getPointRef(), result.getValueRef(), 0.0);
}
