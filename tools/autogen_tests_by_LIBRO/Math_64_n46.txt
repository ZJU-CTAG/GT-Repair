public void testLevenbergMarquardt() {

        UnivariateDifferentiableFunction function = new MyFunction();

        double min = -10;
        double max = 10;
        double startPoint = 0;
        double[] observations = new double[]{-1, 0.3, 0.9, 2.1, 2.6, 3.0};
        double[] sigma = new double[]{0.5, 0.5, 0.5, 0.5, 0.5, 0.5};

        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();

        LevenbergMarquardtOptimizer.Optimum optimum = optimizer.optimize(new MaxEval(100),
                                                           new ObjectiveFunction(function),
                                                           GoalType.MINIMIZE,
                                                           new double[] {startPoint},
                                                           new double[] {min},
                                                           new double[] {max},
                                                           new WeightedObservedPoints(sigma, observations));

        assertTrue(optimum.getCost()