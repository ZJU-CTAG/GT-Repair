public void testIssue108() {
    VectorialPointValuePair optimum = new LevenbergMarquardtOptimizer().optimize(new MaxEval(100), new Target(), new InitialGuess(new double[] { 100, 100 }), new ObjectiveFunction(new MultivariateDifferentiableVectorFunction() {
        @Override
        public RealVector value(RealVector point) {
            return new ArrayRealVector(new double[] { point.getEntry(0) - 2, point.getEntry(1) - 3 });
        }

        @Override
        public RealMatrix jacobian(RealVector point) {
            double[][] jacobian = { { 1, 0 }, { 0, 1 } };
            return MatrixUtils.createRealMatrix(jacobian);
        }
    }), new VectorialConvergenceChecker(1e-6, 1e-6, 1e-6, 1e-6, 1e-6, 1e-6));
}
