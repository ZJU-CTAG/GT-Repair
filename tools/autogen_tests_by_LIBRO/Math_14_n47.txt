public void testWeightClass() {
    double[] x = new double[41200];
    for (int i = 0; i < x.length; i++) {
        x[i] = i;
    }
    WeightedObservedPoint[] obs = new WeightedObservedPoint[x.length];
    for (int i = 0; i < obs.length; i++) {
        obs[i] = new WeightedObservedPoint(1.0, x[i], Math.sin(x[i]));
    }

    //This throws java.lang.OutOfMemoryError: Java heap space
    LeastSquaresProblem lsp = LevenbergMarquardtOptimizer.create(obs);

    //This works fine
    double[] y = new double[x.length];
    for (int i = 0; i < y.length; i++) {
        y[i] = Math.sin(x[i]);
    }
    LevenbergMarquardtOptimizer lm = new LevenbergMarquardtOptimizer();
    lm.optimize(new LeastSqu