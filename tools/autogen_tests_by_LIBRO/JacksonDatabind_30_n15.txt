public void testBigDecimalSerializationWithTypeInfo() throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    mapper.configure(DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS, true);
    SimpleWrapper wrapper = new SimpleWrapper();
    wrapper.type = "BIG_DECIMAL";
    wrapper.objectValue = new BigDecimal("-10000000000.0000000001");
    String json = mapper.writeValueAsString(wrapper);
    SimpleWrapper resultWrapper = mapper.readValue(json, SimpleWrapper.class);
    assertEquals(wrapper.type, resultWrapper.type);
    assertEquals(wrapper.objectValue, resultWrapper.objectValue);
}

@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.EXTERNAL_PROPERTY, property = "type")
@JsonSubTypes({
        @JsonSubTypes.Type(name = "BIG_DECIMAL", value = BigDecimal.class)
})
public