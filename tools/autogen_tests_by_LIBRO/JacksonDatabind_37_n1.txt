public void testRead() throws Exception {
    final ObjectMapper objectMapper = new ObjectMapper();
    objectMapper.registerSubtypes(FoodMart.class);
    objectMapper.disable(SerializationFeature.FAIL_ON_EMPTY_BEANS);
    JsonRoot root = objectMapper.readValue(new File("src/test/resources/model-with-subtypes.json"), JsonRoot.class);
    assertEquals("[Foodmart]", root.getSchemas().toString());
}

public static class JsonSchema {
    public String name;
}

@JsonTypeInfo(use = JsonTypeInfo.Id.NAME,
    include = JsonTypeInfo.As.PROPERTY,
    property = "type")
@JsonTypeName("foodmart")
@JsonSubTypes({
    @JsonSubTypes.Type(FoodMart.class)})
public static class JsonMapSchema extends JsonSchema {
    public String name;
    public List<JsonTable> tables;
    @Override public String toString() {
        return