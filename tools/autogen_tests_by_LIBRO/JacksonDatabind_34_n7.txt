public void testBigDecimal() throws Exception
{
    ObjectMapper m = new ObjectMapper();
    m.enable(SerializationFeature.INDENT_OUTPUT);
    m.addMixIn(BigDecimal.class, MyBigDecimal.class);
    FileOutputStream fos = new FileOutputStream("big-decimal.json");
    m.writeValue(fos, new BigDecimal("3.141592653589793"));
    fos.close();
    
    JsonSchemaGenerator jsg = new JsonSchemaGenerator(m);
    JsonSchema schema = jsg.generateSchema(BigDecimal.class);

    // test that schema is correct
    assertEquals("{\"type\":\"number\"}", m.writeValueAsString(schema));
}

@JsonSerialize(
    using = BigDecimalSerializer.class
)
interface MyBigDecimal {
}

public static class BigDecimalSerializer extends JsonSerializer<BigDecimal>
{
    @Override
    public void serialize(BigDec