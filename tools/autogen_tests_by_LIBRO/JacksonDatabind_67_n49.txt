public void testIssue754() throws Exception {
    ObjectMapper om = new ObjectMapper();
    om.registerModule(new GuavaModule());
    om.registerModule(new SimpleModule() {
                public void setupModule(SetupContext context) {
                    context.addDeserializerModifier(new BeanDeserializerModifier() {
                        @Override
                        public KeyDeserializer modifyKeyDeserializer(
                                DeserializationConfig config,
                                JavaType type,
                                KeyDeserializer deserializer) {
                            return new KeyDeserializer() {
                                @Override
                                public Object deserializeKey(String key, DeserializationContext ctxt)
                                        throws IOException, JsonProcessingException {
                                    return key + "-modified";
                                }
                            };
                        }
                    });
                }
            });
    String json = "{\"a\":\"b\"}";
    ImmutableMap<String, String> map = om.readValue(json, new TypeReference<ImmutableMap<String, String>>() {});
    assertEquals("b", map.