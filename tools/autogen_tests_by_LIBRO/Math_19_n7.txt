public void testWideBounds() {
    double lowerBound = -Double.MAX_VALUE;
    double upperBound = Double.MAX_VALUE;
    double[] lowerBounds = new double[]{lowerBound, lowerBound};
    double[] upperBounds = new double[]{upperBound, upperBound};

    CMAESOptimizer optimizer = new CMAESOptimizer();
    optimizer.optimize(new MaxEval(1), new FitnessFunction(lowerBounds, upperBounds), GoalType.MAXIMIZE, new InitialGuess(new double[]{0, 0}), new SimpleBounds(lowerBounds, upperBounds));
}

private static class FitnessFunction implements MultivariateFunction {
    private final double[] lowerBounds;
    private final double[] upperBounds;

    public FitnessFunction(double[] lowerBounds, double[] upperBounds) {
        this.lowerBounds = lowerBounds;
        this.upperBounds = upperBounds;
    }

    @Override
    public double value(double[] parameters) {
        double[] denormalizedParameters = decode(parameters);