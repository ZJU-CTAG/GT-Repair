public void testTypeIdResolverType() throws Exception {
    final ObjectMapper mapper = new ObjectMapper();
    mapper.registerModule(new SimpleModule() {
        @Override
        public void setupModule(SetupContext context) {
            context.addTypeResolver(new TypeIdResolver() {
                @Override
                public Id getMechanism() {
                    return Id.CUSTOM;
                }

                @Override
                public void init(JavaType baseType) {
                }

                @Override
                public String idFromValue(Object value) {
                    return null;
                }

                @Override
                public String idFromValueAndType(Object value, Class<?> suggestedType) {
                    return null;
                }

                @Override
                public JavaType typeFromId(DatabindContext context, String id) {
                    return SimpleType.constructUnsafe(List.class, new JavaType[] {SimpleType.constructUnsafe(Object.class)});
                }

                @Override
                public JsonTypeInfo.Id getMechanism() {
                    return null;
                }

                @Override