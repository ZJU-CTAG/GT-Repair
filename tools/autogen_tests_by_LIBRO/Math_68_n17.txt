public void testIssue108() {
    final double[] weights = new double[] { 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 };
    MultivariateVectorialOptimizer optimizer = new LevenbergMarquardtOptimizer(false, new SimpleVectorValueChecker(1e-6, 1e-6), 10, 0.01, 0.01, 0.01);
    double[] result = optimizer.optimize(new MaxEval(100), new MultivariateVectorialFunction() {
        public double[] value(double[] point) {
            return new double[] { point[0] + 2 * point[1] + 3 * point[2] + 4 * point[3] + 5 * point[4] + 6 * point[5] + 7 * point[6] + 8 * point[7] + 9 * point[8] + 10 * point[9] };
        }
    }, GoalType.MINIMIZE, new double[] { 1.0, 2.0, 3.