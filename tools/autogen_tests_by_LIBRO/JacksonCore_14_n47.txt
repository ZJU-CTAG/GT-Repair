public void testIssue108() throws Exception {
    final int bufSize = 1024;
    final int readSize = 16;

    final byte[] buf = new byte[bufSize];
    Arrays.fill(buf, (byte)42);
    final ByteBuffer buffer = ByteBuffer.wrap(buf);

    // Not actually needed, but just to make sure
    buffer.limit(readSize);
    buffer.position(0);

    // As long as our buffer is within 1/8 of max block size,
    // we should be able to reuse it
    final int maxBlockSize = bufSize / 8;

    IOContext context = new IOContext(new BufferRecycler(), buffer, true);
    InputStream in = new InputStream() {
        @Override
        public int read() throws IOException {
            return -1;
        }
        @Override
        public int read(byte[] buffer) throws IOException {
            return -1;
        }
        @Override
        public int read(byte[] buffer, int offset, int length) throws IOException {
            if (length > readSize) {
                // Let's