public void testNoMappingForBaseType() throws Exception {
    JsonFactory f = new JsonFactory();
    SimpleModule module = new SimpleModule().addDeserializer(MyBase.class, new MyBaseDeserializer());
    ObjectMapper mapper = new ObjectMapper(f);
    mapper.registerModule(module);
    String json = "{\"type\":\"MyBase\", \"value\":\"first\"}";
    MyBase result = mapper.readValue(json, MyBase.class);
    assertEquals("first", result.value);
}

@JsonTypeInfo(use = JsonTypeInfo.Id.NAME)
abstract class MyBase {
    public String value;
}

class MyBaseDeserializer extends JsonDeserializer<MyBase> {
    @Override
    public MyBase deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {
        ObjectMapper mapper = (ObjectMapper) p.getCodec();
        JsonNode tree = mapper.readTree(p);
        if (tree.get("value").text