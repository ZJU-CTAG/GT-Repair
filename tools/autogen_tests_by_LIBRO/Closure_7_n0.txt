public void testBadTypeInference() {
    CompilerOptions options = new CompilerOptions();
    options.closurePass = true;
    test(options,
            "/** @param {*} object Any object. @return {boolean} */" +
            "test.isMatched = function(object) {" +
            " if (goog.isDef(object)) {" +
            " if (goog.isFunction(object)) {" +
            " // return object();" +
            " } else if (goog.isBoolean(object)) {" +
            " // return object;" +
            " } else if (goog.isString(object)) {" +
            " // return test.isDef(object);" +
            " } else if (goog.isArray(object)) {" +
            " var i = object.length;" +
            " }" +
            " }" +
            " return false;" +
            "};",
            null,
            RhinoErrorReporter.TYPE_PARSE_ERROR,
            null);
}
