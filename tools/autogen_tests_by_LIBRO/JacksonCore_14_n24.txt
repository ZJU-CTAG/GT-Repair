public void testIssue108() throws Exception {
    final byte[] bytes = new byte[1];
    final ByteArrayInputStream in = new ByteArrayInputStream(bytes);
    final InputStream in2 = new InputStream() {
      @Override
      public int read() throws IOException {
        return in.read();
      }

      @Override
      public int read(byte[] b) throws IOException {
        return in.read(b);
      }

      @Override
      public int read(byte[] b, int off, int len) throws IOException {
        return in.read(b, off, len);
      }

      @Override
      public int available() throws IOException {
        return in.available();
      }

      @Override
      public void close() throws IOException {
        in.close();
      }

      @Override
      public synchronized void mark(int readlimit) {
        in.mark(readlimit);
      }

      @Override
      public synchronized void reset() throws IOException {
        in.reset();
      }

      @Override
      public boolean markSupported() {
       