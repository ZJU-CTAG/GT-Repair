public void testIssue113() throws Exception {
    StringBuilder sb = new StringBuilder();
    sb.append("{\"expectedGCperPosition\":null");
    for (int i = 1; i <= 60; i++) {
      sb.append(",\"").append(i).append("\":null");
    }
    sb.append("}");
    final ObjectMapper mapper = new ObjectMapper();
    injectReproducibleSeed(mapper);
    mapper.readValue(sb.toString(), Map.class);
  }

  private void injectReproducibleSeed(final ObjectMapper mapper) throws Exception {
    final Field byteSymbolCanonicalizerField = JsonFactory.class.getDeclaredField("_byteSymbolCanonicalizer");
    byteSymbolCanonicalizerField.setAccessible(true);

    final Method factoryMethod = ByteQuadsCanonicalizer.class.getDeclaredMethod("createRoot", int.class);
    factoryMethod.setAccessible(true);
    byteSymbolCanonicalizerField.set(mapper.getFactory