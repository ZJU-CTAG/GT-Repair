public void testAcceptEmptyStringAsNullObject() throws Exception {
    final ObjectMapper mapper = new ObjectMapper();
    mapper.enable(DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT);

    final String json = "{\"test.list\":\"\"}";
    final Configuration config = mapper.readValue(json, Configuration.class);
    assertNull(config.getTestList());
}

@JsonDeserialize(using = Configuration.ConfigurationDeserializer.class)
public class Configuration {
    @JsonProperty("test.list")
    private List<String> testList;

    public Configuration() {
    }

    public List<String> getTestList() {
        return testList;
    }

    public void setTestList(List<String> testList) {
        this.testList = testList;
    }

    public static class ConfigurationDeserializer extends JsonDeserializer<Configuration> {
        @Override
        public Configuration deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException {
            Configuration