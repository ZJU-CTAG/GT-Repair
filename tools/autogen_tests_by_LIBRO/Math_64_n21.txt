public void testLevenbergMarquardt() {
    OptimizationProblem problem = new SimpleOptimizationProblem(
            new MultivariateDifferentiableFunction() {
                public double value(double[] x) {
                    return x[0];
                }
                public MultivariateMatrixFunction jacobian() {
                    return new MultivariateMatrixFunction() {
                        public double[][] value(double[] x) {
                            return new double[][] { { 1.0 } };
                        }
                    };
                }
            },
            null,
            new double[] { 0.0 },
            new double[] { 0.0 }
    );
    LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
    VectorialPointValuePair optimum = optimizer.doOptimize();
    assertEquals(0.0, optimum.getValue()[0], 1.0e-10);
    assertEquals(0.0, optimum.getPoint()[0], 1.0e-10);
}
