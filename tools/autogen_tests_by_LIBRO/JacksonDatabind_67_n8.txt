public void testMapDeserializerModifier() throws Exception
{
    final ObjectMapper mapper = jsonMapperBuilder()
            .addModule(new SimpleModule()
                    .addDeserializer(Enum.class, new JsonDeserializer<Enum>() {
                        @Override
                        public Enum deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException {
                            String valueAsString = jp.getValueAsString();
                            return Enum.valueOf(TestEnum.class, valueAsString.toUpperCase());
                        }
                    })
                    .addKeyDeserializer(Enum.class, new KeyDeserializer() {
                        @Override
                        public Object deserializeKey(String key, DeserializationContext ctxt) throws IOException, JsonProcessingException {
                            return Enum.valueOf(TestEnum.class, key.toUpperCase());
                        }
                    })
            )
            .build();

    String json = "{\"a\":\"b\"}";
    Map<TestEnum, String> test = m