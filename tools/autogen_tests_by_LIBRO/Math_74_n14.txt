public void testEmbeddedRungeKuttaInitialStep() throws DerivativeException {
    DormandPrince853Integrator dp853 = new DormandPrince853Integrator(1.0e-8, 100.0, 1.0e-10, 1.0e-10);
    TestProblem3 pb = new TestProblem3(0.9);
    double minStep = 0;
    double maxStep = pb.getFinalTime() - pb.getInitialTime();
    double[] vecAbsoluteTolerance = { 1.0e-8, 1.0e-8, 1.0e-8 };
    double[] vecRelativeTolerance = { 1.0e-8, 1.0e-8, 1.0e-8 };
    dp853.integrate(pb, pb.getInitialTime(), pb.getInitialState(), pb.getFinalTime(), new double[pb.getDimension()]);
}

public static class TestProblem3 implements FirstOrderDifferentialEquations {

    private double m;

    private double g;


    public TestProblem