public void testBrent() {
    ParametricUnivariateFunction f = new ParametricUnivariateFunction() {
        @Override
        public double value(double x, double... params) {
            return -x*x*x*x*x*x+params[0]*x;
        }
        @Override
        public double[] gradient(double x, double... params) {
            return new double[] {-6*x*x*x*x*x+params[0]};
        }
    };
    double[] params = new double[1];
    for (int i=0; i<10; i++) {
        params[0] = 0.1*i;
        UnivariatePointValuePair search = new BrentOptimizer(1e-10, 1e-14).optimize(new MaxEval(1000000000),
                new UnivariateObjectiveFunction(f), GoalType.MAXIMIZE,
                new SearchInterval(-100,100), params);
        UnivariatePointValuePair exact = new UnivariatePointValuePair(Math.sqrt(params[0]/6), -