public void testIssue108() {
  CompilerOptions options = new CompilerOptions();
  options.setEmitUseStrict(false);
  CompilationLevel.ADVANCED_OPTIMIZATIONS
      .setOptionsForCompilationLevel(options);
  Compiler compiler = new Compiler();
  compiler.compile(
      new JSSourceFile[] { JSSourceFile.fromCode("test.js",
          "Glow = {}; \n"
          + "/** @public */ Glow.versions = [1,2,3]; \n"
          + "Glow.showVersions = function() { alert(Glow.versions); } \n"
          + "// exports \n"
          + "window['Glow'] = Glow; \n"
          + "Glow['versions'] = Glow.versions; \n"
          + "Glow['showVersions'] = Glow.showVersions;") },
      options);
  assertEquals(
      "Glow={};Glow.a=[1,2,3];Glow.b=function(){alert(Glow.a)};window