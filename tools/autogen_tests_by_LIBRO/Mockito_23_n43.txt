public void testIssue122() {
    @Mock
    private ClassExtendsAbstractClass classExtendsAbstractClass;
    private A a;

    @Before
    public void before() {
        Mockito.when(classExtendsAbstractClass.give()).thenReturn("aaa");
    }

    @Test
    public void test() {
        a = new A(classExtendsAbstractClass);
    }
}

abstract class AbstractClass {
    abstract protected Long lol();
    abstract protected String wow();
    public String give() {
        wow();
        lol();
        return "give";
    }
}

public class ClassExtendsAbstractClass extends AbstractClass {
    @Override
    protected Long lol() {
        return 2L;
    }

    @Override
    protected String wow() {
        return "WOW";
    }
}

public class A {
    private ClassExtendsAbstractClass classExtendsAbstractClass;

    public A(ClassExtendsAbstractClass classExtendsAbstractClass) {
        this.classExtendsAbstractClass = classExtendsAbstractClass;
    }

   