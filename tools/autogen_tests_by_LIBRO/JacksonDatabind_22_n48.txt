public void testSerialization() throws Exception {
    SimpleModule module = new SimpleModule("test", Version.unknownVersion());
    module.addSerializer(MyValue.class, new JsonSerializer<MyValue>() {

        @Override
        public void serialize(MyValue value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonProcessingException {
            jgen.writeString("custom:" + value);
        }
    });

    ObjectMapper mapper = new ObjectMapper();
    mapper.registerModule(module);

    MyValue value = new MyValue();
    value.value = "test";
    assertEquals("custom:test", mapper.writeValueAsString(value));
}

@JsonSerialize(using = MyValueSerializer.class)
public static class MyValue {
    public String value;
}

public static class MyValueSerializer extends JsonSerializer<MyValue> {

    @Override
    public void serialize(MyValue value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonProcessingException {