public void testFake() {
    class AccountServiceImpl implements AccountService {
        @Override
        public void getAccount(String id, AsyncCallback<UserAccount> callback) {
            callback.onSuccess(getAccount(id));
        }
        public UserAccount getAccount(String id) {
            return new UserAccount(id);
        }
    }

    class AccountServiceFake implements AccountService {
        @Override
        public void getAccount(String id, AsyncCallback<UserAccount> callback) {
            callback.onSuccess(getAccount(id));
        }
        public UserAccount getAccount(String id) {
            return new UserAccount(id);
        }
    }

    class AccountServiceTest {
        @Fake AccountService service;
        @Test void testAccount() {
            when(service.getAccount("id")).thenReturn(new UserAccount("id"));
            service.getAccount("id", new AsyncCallback<UserAccount>() {
                @Override
                public void onFailure(Throwable caught) {
                    throw new RuntimeException(caught);
                }
                @Override
               