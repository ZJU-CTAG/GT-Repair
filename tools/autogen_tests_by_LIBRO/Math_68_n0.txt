public void testLevenbergMarquardtOptimizer() {
    final double[] coeffs = new double[] {1.0, 2.0, 3.0};
    final double[] dataX = new double[] {1.0, 2.0, 3.0, 4.0, 5.0};
    final double[] dataY = new double[] {4.0, 6.0, 8.0, 10.0, 12.0};
    final VectorialPointValuePair solution = optimize(coeffs, dataX, dataY);
    assertEquals(coeffs[0], solution.getPoint()[0], 1.0e-12);
    assertEquals(coeffs[1], solution.getPoint()[1], 1.0e-12);
    assertEquals(coeffs[2], solution.getPoint()[2], 1.0e-12);
}

public VectorialPointValuePair optimize(double[] coeffs, double[] dataX, double[] dataY) {
    final VectorialPointValuePair guess = new VectorialPointValue