public void testTooLargeFirstStep() {
    // setup
    FirstOrderDifferentialEquations ode = new TestProblem3(0.9);
    double range = 1.2e-6;
    double error = 5.0e-11;
    FirstOrderIntegrator integ = new DormandPrince853Integrator(1.0e-8, 100.0 * range, 1.0e-10, 1.0e-10);
    integ.addStepHandler(new StepNormalizer(range, new StepHandler() {
        public void init(double t0, double[] y0, double t) {
        }
        public void handleStep(StepInterpolator interpolator, boolean isLast)
                throws MaxCountExceededException {
            double   t = interpolator.getCurrentTime();
            double[] y = interpolator.getInterpolatedState();
            System.out.println(t + " " + y[0] + " " + y[1]);
        }
    }, true));

    // action
    integ.integrate(ode,
                    0.0, new double[] { 1.