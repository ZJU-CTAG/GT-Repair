public void testIssue102() {
    CMAESOptimizer optimizer = new CMAESOptimizer(100, Double.MIN_VALUE, true, 0, 0, new MersenneTwister(), false, new SimplePointChecker(-1, -1));
    double[] initialGuess = {-2.0, -2.0};
    double[] lower = {-1.0, -1.0};
    double[] upper = {1.0, 1.0};
    double[] result = optimizer.optimize(
        new MaxEval(1000),
        new ObjectiveFunction(new MultivariateFunction() {
            @Override
            public double value(double[] point) {
                double x = point[0];
                double y = point[1];
                return x * x + y * y;
            }
        }),
        GoalType.MINIMIZE,
        new InitialGuess(initialGuess),
        new CMAESOptimizer.PopulationSize(100),
        new SimpleBounds(lower, upper),
        new CMAESOptimizer.Sigma(new double[] {