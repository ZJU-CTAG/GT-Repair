public void testIssue108() {
    try {
        new ClosureCompiler().compile(ImmutableList.of(SourceFile.fromCode("source", "function assert(b) {if (!b) throw 'error';}\n"
                + "assert(f() === 1);\n"
                + "var f = function() {return 2;};\n"
                + "assert(f() === 2);\n"
                + "function f() {return 1;};")),
                new CompilerOptions().setLanguageIn(LanguageMode.ECMASCRIPT5));
        fail();
    } catch (RuntimeException e) {
        assertEquals("JSC_REDECLARED_VARIABLE", e.getMessage());
    }
}

public void testIssue108_thirdParty() {
    new ClosureCompiler().compile(ImmutableList.of(SourceFile.fromCode("source", "function assert(b) {if (!b) throw 'error';}\n"
            + "assert(f() === 1);\n"
            + "var f = function() {return 2;};