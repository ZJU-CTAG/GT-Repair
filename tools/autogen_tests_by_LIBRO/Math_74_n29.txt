public void testBug () {
    EmbeddedRungeKuttaIntegrator integ = new DormandPrince853Integrator(1.0e-8, 100.0, 1.0e-10, 1.0e-10);
    int n = 10000;
    double[] y = new double[n];
    for (int i = 0; i < n; ++i) {
        y[i] = 1.0;
    }
    integ.integrate(new FirstOrderDifferentialEquations() {
        public int getDimension() {
            return n;
        }
        public void computeDerivatives(double t, double[] y, double[] yDot) {
            for (int i = 0; i < n; ++i) {
                yDot[i] = i + 1;
            }
        }
    }, 0.0, y, 10.0, y);
    for (int i = 0; i < n; ++i) {
        assertEquals(FastMath.exp(i + 1.0), y[i], 1.0e-10);
    }