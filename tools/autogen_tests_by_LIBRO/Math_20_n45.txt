public void testIssue051() {
    SimpleBounds simpleBounds = new SimpleBounds(new double[] { -0.1, -0.1 }, new double[] { 0.1, 0.1 });
    PointValuePair optimum = new CMAESOptimizer(2, -1, false, 0, 0, new MersenneTwister(), false, 0).optimize(
            new MaxEval(1000),
            new ObjectiveFunction(new MultivariateFunction() {
                public double value(double[] point) {
                    return point[0] * point[0] + point[1] * point[1];
                }
            }), GoalType.MINIMIZE, simpleBounds);
    assertTrue(simpleBounds.isFeasible(optimum.getPoint()));
}
