public void testIssue112() {
    LevenbergMarquardtOptimizer otim = new LevenbergMarquardtOptimizer();

    // action
    otim.optimize(new MaxEval(100), new Target(new double[] { 1 }),
            new Weight(new double[] { 1 }), new InitialGuess(
                    new double[] { 3 }), new ModelFunction(
                    new MultivariateVectorFunction() {
                        @Override
                        public double[] value(double[] point)
                                throws IllegalArgumentException {
                            return new double[] { FastMath.pow(point[0], 4) };
                        }
                    }), new ModelFunctionJacobian(
                    new MultivariateMatrixFunction() {
                        @Override
                        public double[][] value(double[] point)
                                throws IllegalArgumentException {
                            return new double[][] { { 0.25 \* FastMath.pow(
                                    point[0], 3) } };
                        }
                    }));

    // verify
    assertThat(otim.getEvaluations(), greaterThan(1));