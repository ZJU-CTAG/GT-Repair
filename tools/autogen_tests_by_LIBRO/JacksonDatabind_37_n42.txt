public void testRead() throws Exception {
    ObjectMapper mapper = new ObjectMapper().configure(MapperFeature.USE_GETTERS_AS_SETTERS,
            false)
            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES,
                    false);
    mapper.setVisibility(mapper.getSerializationConfig()
            .getDefaultVisibilityChecker()
            .withFieldVisibility(JsonAutoDetect.Visibility.ANY)
            .withGetterVisibility(JsonAutoDetect.Visibility.NONE)
            .withSetterVisibility(JsonAutoDetect.Visibility.NONE)
            .withCreatorVisibility(JsonAutoDetect.Visibility.NONE));
    TypeFactory typeFactory = TypeFactory.defaultInstance();
    mapper.setDefaultTyping(new ObjectMapper.DefaultTypeResolverBuilder(
            ObjectMapper.DefaultTyping.NON_FINAL) {
        @Override
        public JavaType buildType(TypeBuilder typeBuilder,
                                  JavaType baseType) {
            if (