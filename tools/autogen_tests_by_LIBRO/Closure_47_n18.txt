public void testIssue123() {
        String source = "function test() { return true; }" +
                        "function test2() { return false; }" +
                        "function test3() { return true; }";
        CompilerEnvirons env = new CompilerEnvirons();
        env.setRecoverFromErrors(true);
        Script script = new Parser(env).parse(source, null, 1);
        CodeGenerator codegen = new CodeGenerator();
        String encoded = codegen.getSourceMap(script, null, null);

        ObjectMapper mapper = new ObjectMapper();
        Map<String,Object> map = mapper.readValue(encoded, new TypeReference<Map<String,Object>>() { });
        Map<String,Object> mappings = (Map<String,Object>) map.get("mappings");
        List<List<List<Object>>> mappingsList = (List<List<List<Object>>>) mappings.get("mappings");
        assertEquals(0, mappingsList.get(1).get(1).get(0));
}
