public void testQuadraticMin() {
    final UnivariateRealFunction f = new UnivariateRealFunction() {
        public double value(double x) {
            return x * x - 2;
        }
    };
    final UnivariateRealFunction df = new UnivariateRealFunction() {
        public double value(double x) {
            return 2 * x;
        }
    };
    UnivariateRealOptimizer optimizer =
        new BrentOptimizer(1e-10, 1e-14);
    double result;
    optimizer.search(f, df, -0.5, 0.5);
    result = optimizer.getResult();
    Assert.assertTrue(FastMath.abs(result - FastMath.sqrt(2)) < 1e-14);
    optimizer.search(f, df, 0.5, 1.5);
    result = optimizer.getResult();
    Assert.assertTrue(FastMath.abs(result - FastMath.sqrt(2)) < 1e-14);
    optimizer.search(f, df, 1.5, 2.5