public void testOptimizerWithWideBounds() {
    CMAESOptimizer optimizer = new CMAESOptimizer();
    optimizer.optimize(
            new MaxEval(10),
            new ObjectiveFunction(new TestFitnessFunction()),
            GoalType.MINIMIZE,
            new InitialGuess(new double[] {0.0}),
            new CMAESOptimizer.PopulationSize(10),
            new SimpleBounds(new double[] {-Double.MAX_VALUE}, new double[] {Double.MAX_VALUE}));
}

class TestFitnessFunction implements MultivariateFunction {
    @Override
    public double value(double[] doubles) {
        for (double d : doubles) {
            if (Double.isNaN(d)) {
                return Double.POSITIVE_INFINITY;
            }
        }
        return 0.0;
    }
}
