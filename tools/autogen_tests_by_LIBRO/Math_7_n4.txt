public void testUnrelatedEventHandler() {
    final double[] errorScale = new double[] { 1.0, 1.0, 0.0, 1.0 };
    final double[] y0 = new double[] {   0.0, 0.0, 0.0, 0.0 };
    final double[] upper = new double[] { Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY };
    final double[] lower = new double[] { Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY };
    final ODEIntegrator integrator = new DormandPrince853Integrator(1.0e-8, 10.0,
                                                                   1.0e-10, 1.0e-10);
    integrator.addEventHandler(new EventHandler() {
        private boolean reset = false;
        public int eventOccurred(double t, double[] y, boolean increasing)