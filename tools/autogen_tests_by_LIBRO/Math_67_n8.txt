public void testOptimize() {
    // create a simple function to minimize
    UnivariateRealFunction f = new UnivariateRealFunction() {
        public double value(double x) {
            return -x * x + 1;
        }
    };

    // create an optimizer
    MultiStartUnivariateRealOptimizer optimizer =
            new MultiStartUnivariateRealOptimizer(
                    new BrentOptimizer(1e-10, 1e-14), 5, new RandomGenerator() {
                public double nextDouble() {
                    return 0.5;
                }
            });
    double min = optimizer.optimize(f, GoalType.MINIMIZE, -100, 100);

    // the optimizer should return -1 as the optimal value
    assertEquals(-1, min, 0);

    // check the result
    assertEquals(-1, optimizer.getResult(), 0);
    assertEquals(-1, optimizer.getFunctionValue(), 0);
}
