public void testLevMarq() {
    final int n = 5;
    final double[] target = new double[n];
    final double[] weights = new double[n];
    final double[][] points = new double[n][2];
    final double[][] jacobian = new double[n][2];

    for (int i = 0; i < n; i++) {
        target[i] = FastMath.random();
        weights[i] = 1.0;
        points[i][0] = FastMath.random();
        points[i][1] = FastMath.random();
        jacobian[i][0] = 2.0 * target[i] - 3.0;
        jacobian[i][1] = 4.0 * target[i] - 5.0;
    }

    final MultivariateJacobianFunction model = new MultivariateJacobianFunction() {
        @Override
        public Pair<RealVector, RealMatrix> value(RealVector point) {
            double[] p = point.toArray();
            RealVector value = new ArrayRealVector(n