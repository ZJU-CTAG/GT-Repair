public void testFactorial(){
    // test preconditions
    try {
        MathUtils.factorial(-1);
        fail("expecting IllegalArgumentException");
    } catch (IllegalArgumentException ex) {
        // success
    }

    // test the default numerical value is the same as the BigInteger implementation
    for (int i = 1; i < 20; i++) {
        assertEquals(MathUtils.factorial(i),MathUtils.factorial(BigInteger.valueOf(i)).longValue());
    }

    // test the previous implementation against the new implementation
    for (int i = 1; i < 20; i++) {
        assertEquals(MathUtils.factorial(i),MathUtils.factorialLong(i));
    }

    // test the previous implementation against the new implementation
    for (int i = 21; i < 30; i++) {
        assertEquals(MathUtils.factorial(i),MathUtils.factorialDouble(i), 0);
    }

    // test the previous implementation against the new implementation
    for (int i = 30