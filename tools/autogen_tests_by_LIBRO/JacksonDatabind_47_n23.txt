public void testModelObjects() throws IOException {

    Foo foo = new Foo();
    foo.setReference(new AccessionIdentifier() {

        @Override
        public String toString() {
            return "AccessionIdentifier";
        }
    });

    ObjectMapper mapper = new ObjectMapper();
    String json = mapper.writerWithType(Foo.class).writeValueAsString(foo);
    assertEquals("{\"reference\":null}", json);
}

public class Foo {

    @JsonSerialize(as = BaseAccessionIdentifier.class)
    @JsonDeserialize(as = BaseAccessionIdentifier.class)
    private AccessionIdentifier reference;

    public AccessionIdentifier getReference() {
        return reference;
    }

    public void setReference(AccessionIdentifier reference) {
        this.reference = reference;
    }
}

public interface AccessionIdentifier {

}

public class BaseAccessionIdentifier implements AccessionIdentifier {

}
