public void testBrentOptimizer() {
    double[] x = new double[] { 0, 1, 2 };
    double[] y = new double[] { 200, 20, 0 };
    SimpleBivariateFunction f = new SimpleBivariateFunction() {
        public double value(double x, double y) {
            return x + y;
        }
    };
    MultivariateVectorFunction fV = new MultivariateVectorFunction() {
        public double[] value(double[] x) {
            return new double[] { f.value(x[0], x[1]) };
        }
    };

    double[] start = new double[] { 0, 0 };
    double[] lower = new double[] { 0, 0 };
    double[] upper = new double[] { 1, 1 };
    double[] max = { 1, 1 };
    double xMax = 1;
    double[] min = { 0, 0 };
    double xMin = 0;
    double[] expected = { xMax, max[1] };
    double fMin = f.value(xMin, min[1]);
    double fMax = f.value