public void testPartial() {
    Partial a = new Partial(new DateTimeFieldType[] {DateTimeFieldType.year(), DateTimeFieldType.hourOfDay()}, new int[] {1,1});
    Partial b = new Partial(DateTimeFieldType.year(), 1).with(DateTimeFieldType.hourOfDay(), 1);
    assertTrue(a.equals(b));
    assertEquals(a.toString(), b.toString());

    try {
        new Partial(new DateTimeFieldType[] { DateTimeFieldType.clockhourOfDay(), DateTimeFieldType.hourOfDay() }, new int[] {1,1});
        fail();
    } catch (IllegalArgumentException e) {
    }

    Partial c = new Partial(DateTimeFieldType.clockhourOfDay(), 1).with(DateTimeFieldType.hourOfDay(), 1);
    assertEquals(c.toString(), "#<Partial [clockhourOfDay=1, hourOfDay=1]>");

    Partial d = new Partial(DateTimeFieldType.hourOfDay(), 1).with(DateTimeFieldType