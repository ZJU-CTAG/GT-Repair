public void testTypeAndObjectIds() throws Exception
{
    ObjectMapper mapper = new ObjectMapper();
    mapper.setAnnotationIntrospector(new JaxbAnnotationIntrospector(TypeFactory.defaultInstance()));
    mapper.configure(SerializationFeature.WRAP_ROOT_VALUE, true);
    mapper.configure(DeserializationFeature.UNWRAP_ROOT_VALUE, true);
    mapper.configure(SerializationFeature.INDENT_OUTPUT, true);
    mapper.enableDefaultTyping();

    String json = mapper.writeValueAsString(new ObjectWithTypeAndObjectId());
    System.out.println(json);

    ObjectWithTypeAndObjectId result = mapper.readValue(json, ObjectWithTypeAndObjectId.class);
    System.out.println(result);
}

@JsonTypeInfo(use=JsonTypeInfo.Id.NAME, include=JsonTypeInfo.As.WRAPPER_OBJECT)
@JsonIdentityInfo(generator=ObjectIdGenerators.PropertyGenerator