public void testGetTypeArguments() throws Exception {
    Map<TypeVariable<?>, Type> typeVarAssigns;

    typeVarAssigns = TypeUtils.getTypeArguments(Sub.class, Base.class);
    assertEquals(1, typeVarAssigns.size());
    assertEquals(String.class, typeVarAssigns.get(Base.class.getTypeParameters()[0]));

    typeVarAssigns = TypeUtils.getTypeArguments(Other.class, This.class);
    assertEquals(2, typeVarAssigns.size());
    assertEquals(String.class, typeVarAssigns.get(This.class.getTypeParameters()[0]));
    assertEquals(Other.class.getTypeParameters()[0], typeVarAssigns.get(This.class.getTypeParameters()[1]));
}


interface Base<T> {}
interface Sub extends Base<String> {}
interface This<K, V> {}
class Other<T> implements This<String, T> {}
