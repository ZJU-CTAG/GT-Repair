public void testCMAESOptimizer() {
    double[] lowerBound = new double[]{-1, -3};
    double[] upperBound = new double[]{1, 3};
    CMAESOptimizer optimizer = new CMAESOptimizer();
    PointValuePair result = optimizer.optimize(new CMAESOptimizer.PopulationSize(10),
                                                new CMAESOptimizer.Sigma(new double[]{1, 1}),
                                                new ObjectiveFunction(new PairwiseError()),
                                                GoalType.MINIMIZE,
                                                new CMAESOptimizer.InitialGuess(new double[]{0, 0}),
                                                new CMAESOptimizer.CMAESOptimizerBounds(lowerBound, upperBound));
    assertEquals(lowerBound[0], result.getPoint()[0], 0);
    assertEquals(lowerBound[1], result.getPoint()[1], 0);
}
private static class PairwiseError implements DifferentiableMultivariateFunction {
    private static final double[][] x