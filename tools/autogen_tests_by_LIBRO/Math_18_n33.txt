public void testIssue105() {
    double[] lower = new double[]{0.0};
    double[] upper = new double[]{1.0};
    double[] start = new double[]{0.5};
    double[] step = new double[]{0.3};
    CMAESOptimizer optimizer = new CMAESOptimizer();
    PointValuePair pair = optimizer.optimize(new MaxEval(1000),
                                             new ObjectiveFunction(new TestFunction()),
                                             GoalType.MINIMIZE,
                                             new InitialGuess(start),
                                             new SimpleBounds(lower, upper),
                                             new CMAESOptimizer.PopulationSize(1),
                                             new CMAESOptimizer.Sigma(step));
    double[] point = pair.getPoint();
    System.out.println("point="+point[0]);
}

private static class TestFunction implements DifferentiableMultivariateFunction {

    public double value(double[] point) {
        return Math.abs(point[0] - 0.5);
    }

