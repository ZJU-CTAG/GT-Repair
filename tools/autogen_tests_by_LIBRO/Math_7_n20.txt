public void testWrongStateAfterResetDuringEvent() throws Exception{
    double[] t0 = {0, 1, 2};
    double[] y0 = {0, 0, 0};
    ODEIntegrator integrator =
            new DormandPrince853Integrator(1.0e-8, 100.0, 1.0e-10, 1.0e-10);
    ODEState initialState = new ODEState(t0[0], y0);
    FirstOrderDifferentialEquations ode =
            new FirstOrderDifferentialEquations() {

                public void computeDerivatives(double t, double[] y, double[] yDot) {
                    for (int i = 0; i < y.length; ++i) {
                        yDot[i] = 1.0;
                    }
                }

                public int getDimension() {
                    return y0.length;
                }
            };

    FirstOrderIntegrator dummyIntegrator = new DummyIntegrator(ode);
    DummyStepHandler stepHandler = new DummyStepHandler();
    integrator.addStepHandler(