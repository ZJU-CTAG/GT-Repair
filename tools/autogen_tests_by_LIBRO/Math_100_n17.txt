public void testBoundParameters() {
    final TestProblem1 pb = new TestProblem1();
    pb.getParameter("p0").setBounds(0, 0);
    pb.getParameter("p1").setBounds(0, 0);

    final LevenbergMarquardtEstimator estimator =
            new LevenbergMarquardtEstimator();
    final double[] targetValues = new double[] {
            0.0, 0.0
    };
    final double[] weights = new double[] {
            1.0, 1.0
    };
    final RealMatrix covar =
            estimator.guessCovariances(pb, targetValues, weights);
    RealVector stdDev =
            new ArrayRealVector(covar.getRowDimension());
    for(int i = 0; i < stdDev.getDimension(); i++) {
        stdDev.setEntry(i, FastMath.sqrt(covar.getEntry(i, i)));
    }
    assertEquals(0.0, covar.getEntry(0, 0),