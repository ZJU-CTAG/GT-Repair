public void testIssue110() throws IntegratorException {
    TestProblem5 pb = new TestProblem5();
    double minStep = 0;
    double maxStep = pb.getFinalTime() - pb.getInitialState().getTime();
    double scalAbsoluteTolerance = 1.0e-8;
    double scalRelativeTolerance = 0.01 * scalAbsoluteTolerance;

    FirstOrderIntegrator integ = new DormandPrince54Integrator(minStep, maxStep,
                                                               scalAbsoluteTolerance,
                                                               scalRelativeTolerance);
    integ.addStepHandler(new StepHandler() {
        public void handleStep(StepInterpolator interpolator, boolean isLast)
                throws DerivativeException {
            assertTrue(interpolator.getCurrentTime() < 120.0);
        }
        public void init(double t0, double[] y0, double t) {
        }
    });
    integ.integrate(pb,
                    pb.getInitialState(), pb.getFinalTime());
}
