public void testIssue108() {
    SinusFunction sin = new SinusFunction();
    double[] fit = sin.fit(new double[] { 0. }, new double[] { 4. });
    assertEquals(-1, fit[0], 1e-3);
}

private class SinusFunction {
    public double[] fit(double[] start, double[] upper) {
        CMAESOptimizer optimizer = new CMAESOptimizer();
        final SimpleBounds bounds = new SimpleBounds(start, upper);
        UnivariatePointValuePair pair = optimizer.optimize(new MaxEval(100),
                                                           new ObjectiveFunction(new MultivariateFunction() {
                                                               public double value(double[] point) {
                                                                   return -point[0] * point[0];
                                                               }
                                                           }), GoalType.MINIMIZE, new CMAESOptimizer.PopulationSize(
                                                                                                                     100), new CMAESOptimizer.Sigma(
                                                                                                                                                    new double[] { 1 }