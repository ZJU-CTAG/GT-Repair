public void testInconsistentResultFromLevenbergMarquardt() {

        double[] weights = {1,1};

        ParametricRealFunction f = new ParametricRealFunction() {
            public double value(double x, double... parameters) {
                return parameters[0] * x + parameters[1];
            }
            public double[] gradient(double x, double... parameters) {
                return new double[]{x, 1};
            }
        };

        double[] data = {1, 2, 3, 4};
        double[] values = {1, 2, 3, 4};

        RealVector parameters = new ArrayRealVector(new double[] { 0, 0 });

        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
        optimizer.setMaxIterations(1000);
        optimizer.setCostRelativeTolerance(0.001);
        optimizer.setParameterRelativeTolerance(0.001);

        VectorialPointValuePair solution = optimizer.optimize(f, data, values, weights, parameters);
        System.out