public void testIssue108() {
    MultivariateJacobianFunction f = new MultivariateJacobianFunction() {

        public Pair<RealVector, RealMatrix> value(RealVector point) {
            return new Pair<RealVector, RealMatrix>(new ArrayRealVector(new double[] { 1.0, 2.0 }),
                    new Array2DRowRealMatrix(new double[][] { { 1.0, 0.0 }, { 0.0, 1.0 } }));
        }
    };
    LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
    VectorialPointValuePair result = optimizer.optimize(new MaxEval(100), f,
            new double[] { -100.0, 100.0 }, new double[] { 1.0, 0.0 });
    assertEquals(2.0, result.getValue()[0], 1.0e-10);
    assertEquals(1.0, result.getValue()[1], 1.0e-10);
    assertEquals(1.0, result.getPoint