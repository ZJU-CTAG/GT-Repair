public void testWrongParameter() {
    TestProblem1 pb = new TestProblem1();
    double minStep = 0;
    double maxStep = pb.getFinalTime() - pb.getInitialState()[0];
    double scalAbsoluteTolerance = 1.0e-8;
    double scalRelativeTolerance = 0.01 \* scalAbsoluteTolerance;

    FirstOrderIntegrator integ = new DormandPrince853Integrator(minStep, maxStep, scalAbsoluteTolerance, scalRelativeTolerance);
    integ.addStepHandler(new StepHandler() {
        public boolean requiresDenseOutput() {
            return true;
        }
        public void reset() {}
        public void handleStep(StepInterpolator interpolator, boolean isLast)
        {
            double   t = interpolator.getCurrentTime();
            double[] y = interpolator.getInterpolatedState();
            if (t >= 0.2) {
                Assert.fail("too large steps");
            }
        }
    });
    double stopTime = integ.integrate(pb, 0.