public void testContextualSerializer() throws IOException {

    final ObjectMapper mapper = new ObjectMapper();
    mapper.setSerializationInclusion(Include.NON_NULL);

    final ContextualSerializer serializer = new ContextualSerializer();
    mapper.registerModule(new SimpleModule().addSerializer(ContextualSerializer.class, serializer));

    final ContextualPojo pojo = new ContextualPojo();
    pojo.date = new Date();

    final JsonFactory factory = mapper.getJsonFactory();
    final JsonGenerator generator = factory.createGenerator(new ByteArrayOutputStream());
    mapper.writeValue(generator, pojo);

    assertEquals("DateTimeFormat.forPattern(\"" + ContextualSerializer.FORMAT + "\")", serializer.format.toString());
}

static class ContextualSerializer extends DateTimeSerializerBase<Date> {

    static final String FORMAT = "yyyy-MM-dd'T'HH:mm:ss'Z'";

    @JsonFormat(pattern = FORMAT)