public void testIssue108() {
    final double[] startPoint = new double[] {0.0};
    final double[] lower = new double[] {0.0};
    final double[] upper = new double[] {1.0};
    final OptimizationData[] optData = new OptimizationData[4];
    optData[0] = new Target(1d);
    optData[1] = new InitialGuess(startPoint);
    optData[2] = new SimpleBounds(lower, upper);
    optData[3] = new MaxEval(1000);

    final MultivariateFunction func = new MultivariateFunction() {
        public double value(double[] x) {
            return x[0];
        }
    };

    final CMAESOptimizer optimizer = new CMAESOptimizer(true, 0, false, 0, 0,
            new MersenneTwister(), false, 0, 1e-14, 1e-14, 1e-14, 1e-14);
    PointValuePair point = optimizer.optimize(optData);
    System.out.println(