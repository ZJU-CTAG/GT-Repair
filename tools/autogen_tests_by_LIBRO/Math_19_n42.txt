public void testOptimizer() throws Exception {
        SimpleBounds bounds = new SimpleBounds(new double[]{-Double.MAX_VALUE, -Double.MAX_VALUE}, new double[]{Double.MAX_VALUE, Double.MAX_VALUE});
        UnivariateObjectiveFunction func = new UnivariateObjectiveFunction(new MultivariateFunction() {
            @Override
            public double value(double[] doubles) {
                for (double d : doubles) {
                    if (Double.isNaN(d)) {
                        return Double.NaN;
                    }
                }
                return 0;
            }
        });
        UnivariatePointValuePair solution = new CMAESOptimizer().optimize(
                new MaxEval(1000),
                new ObjectiveFunction(func),
                GoalType.MINIMIZE,
                new InitialGuess(new double[]{0, 0}),
                bounds);
}
