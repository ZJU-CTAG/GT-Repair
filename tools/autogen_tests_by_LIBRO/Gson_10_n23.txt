public void testPrimitiveFieldAnnotationTakesPrecedenceOverDefault() {
Gson gson = new Gson();
String json = gson.toJson(new GadgetWithPrimitivePart(42));
assertEquals("{\"part\":\"42\"}", json);
GadgetWithPrimitivePart gadget = gson.fromJson(json, GadgetWithPrimitivePart.class);
assertEquals(42, gadget.part);
}

private static final class GadgetWithPrimitivePart {
@JsonAdapter(LongToStringTypeAdapterFactory.class)
final long part;

private GadgetWithPrimitivePart(long part) {
this.part = part;
}
}

private static final class LongToStringTypeAdapterFactory implements TypeAdapterFactory {
static final TypeAdapter<Long> ADAPTER = new TypeAdapter<Long>() {
@Override public void write(JsonWriter out, Long value) throws IOException {
out.value(value.toString());
}
@SuppressWarnings("unchecked")
@Override public Long read(JsonReader in) throws IOException {
return in.next