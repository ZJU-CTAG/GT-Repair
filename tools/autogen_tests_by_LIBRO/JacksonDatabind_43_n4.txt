public void testIssue108() throws Exception
{
    ObjectIdGenerator<Integer> gen = new ObjectIdGenerator<Integer>() {
        @Override
        public Class<?> getScope() {
            return null;
        }

        @Override
        public boolean canUseFor(ObjectIdGenerator<?> gen) {
            return false;
        }

        @Override
        public ObjectIdGenerator<Integer> forScope(Class<?> scope) {
            return null;
        }

        @Override
        public ObjectIdGenerator<Integer> newForSerialization(Object context) {
            return null;
        }

        @Override
        public IdKey key(Integer key) {
            return null;
        }

        @Override
        public Integer generateId(Object forPojo) {
            return null;
        }
    };
    final ObjectIdGenerator<Integer> gen2 = new ObjectIdGenerator<Integer>() {
        @Override
        public Class<?> getScope() {
            return null;
        }

        @Override
        public boolean canUseFor(ObjectIdGenerator<?>