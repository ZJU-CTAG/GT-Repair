public void testIssue() {
    final double[] constants = new double[] { 1, 0.2, 0.1, 0.1, 1, 0.1, 0.1, 0.1, 1 };
    PolynomialFunction f = new PolynomialFunction(constants);
    LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
    optimizer.optimize(new OptimizationData[] {
        new MaxEval(1),
        new Target(f.value(new double[] { 1, 2, 3, 4, 5, 6, 7, 8, 9 })),
        new InitialGuess(new double[] { 0, 0, 0, 0, 0, 0, 0, 0, 0 }),
        new Weight(new DiagonalMatrix(new double[] { 1, 1, 1, 1, 1, 1, 1, 1, 1 })),
        new VectorialPointValuePair(new double[] { 1, 2, 3, 4, 5, 6, 7, 8, 9 }, f.value(new double[] { 1, 2, 3, 4,