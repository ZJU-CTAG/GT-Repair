public void testOptimizerWithVectorialConvergenceChecker() {
    double[] target = {0.0, 0.0};
    final LinearProblem problem = new LinearProblem(new double[][] { { 2, 1 }, { 1, 3 } }, target);
    final LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer() {
        protected VectorialConvergenceChecker getConvergenceChecker() {
            return new VectorialConvergenceChecker() {
                public boolean converged(final int iteration, final VectorialPointValuePair previous, final VectorialPointValuePair current) {
                    return true;
                }
            };
        }
    };
    try {
        optimizer.optimize(problem, problem.target, new double[] { 1, 1 });
        fail();
    } catch (ConvergenceException ce) {
        // expected
    }
}
