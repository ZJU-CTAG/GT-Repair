public void testIssue() {

    double[] params = {1, 1};
    double[][] x = {{1, 1}, {2, 2}, {3, 3}, {4, 4}, {5, 5}, {6, 6}, {7, 7}, {8, 8}, {9, 9}};
    double[] y = {2, 4, 6, 8, 10, 12, 14, 16, 18};

    LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();

    VectorialPointValuePair optimum = optimizer.optimize(new MaxEval(1000), new VectorialPointValuePair(params, new double[x.length]), new VectorialPointValuePair(new double[x.length], y), new Vectorial2PointVectorFunction(x, y), new Target(new double[] {0, 0}), new Weight(new double[x.length]));

    double[] cost = optimum.getPointRef();
    double[] residuals = optimum.getValueRef();

    // cost should be the sum of squared residuals, the