public void testIssue() {
    String js = "function some_function() { "
            + "var fn1; "
            + "var fn2; "
            + "if (any_expression) { "
            + "fn2 = external_ref; "
            + "fn1 = function (content) { return fn2(); } "
            + "} "
            + "return { "
            + "method1: function () { if (fn1) fn1(); return true; }, "
            + "method2: function () { return false; } "
            + "} "
            + "};";

    CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
    ErrorReporter errorReporter = compilerEnvirons.getErrorReporter();
    Parser p = new Parser(compilerEnvirons, errorReporter);
    ScriptOrFnNode tree = p.parse(js, null, 1);
    NodeVisitor visitor = new NodeVisitor(compilerEnvirons, errorReporter) {

        public boolean visit(AstNode node) {
            boolean b =