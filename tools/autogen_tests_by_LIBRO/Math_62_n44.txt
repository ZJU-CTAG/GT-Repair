public void test() {

    SimpleBounds bounds = new SimpleBounds(new double[] { -1.0, 0.0 },
                                           new double[] { 1.0, 1.0 });

    double[] startPoint = new double[] { 0, 0 };
    double[] target = new double[] { 1, 1 };

    final MultivariateFunction function = new MultivariateFunction() {

        public double value(double[] point) {
            return FastMath.sqrt(point[0] * point[0] + point[1] * point[1]);
        }
    };

    final MultivariateJacobianFunction jFunction = new MultivariateJacobianFunction() {

        public Pair<RealVector, RealMatrix> value(RealVector point) {
            double[] p = point.toArray();
            double[] value = new double[] { FastMath.sqrt(p[0] * p[0] + p[1] * p[1]) };
            double[][] jacobian = new double[][] {
                { p[0] / value[0], p[1] / value[0] }
