{
  "patch": "\n/**\n * <p>Breaks <code>token</code> into its constituent parts\n * using the following algorithm.\n * <ul>\n *  <li>ignore the first character (\"<b>-</b>\")</li>\n *  <li>foreach remaining character check if an {@link Option}\n *  exists with that id.</li>\n *  <li>if an {@link Option} does exist then add that character\n *  prepended with \"<b>-</b>\" to the list of processed tokens.</li>\n *  <li>if the {@link Option} can have an argument value and there \n *  are remaining characters in the token then add the remaining \n *  characters as a token to the list of processed tokens.</li>\n *  <li>if an {@link Option} does <b>NOT</b> exist <b>AND</b> \n *  <code>stopAtNonOption</code> <b>IS</b> set then add the special token\n *  \"<b>--</b>\" followed by the remaining characters and also \n *  the remaining tokens directly to the processed tokens list.</li>\n *  <li>if an {@link Option} does <b>NOT</b> exist <b>AND</b>\n *  <code>stopAtNonOption</code> <b>IS NOT</b> set then add that\n *  character prepended with \"<b>-</b>\".</li>\n * </ul>\n * </p>\n *\n * @param token The current token to be <b>burst</b>\n * @param stopAtNonOption Specifies whether to stop processing\n * at the first non-Option encountered.\n */\nprotected void burstToken(String token, boolean stopAtNonOption)\n{\n    for (int i = 1; i < token.length(); i++)\n    {\n        String ch = String.valueOf(token.charAt(i));\n\n        if (options.hasOption(ch))\n        {\n            tokens.add(\"-\" + ch);\n            currentOption = options.getOption(ch);\n\n            if (currentOption.hasArg() && (i + 1 < token.length()))\n            {\n                tokens.add(token.substring(i + 1));\n\n                break;\n            }\n        }\n        else if (stopAtNonOption)\n        {\n            process(token.substring(i));\n            break;\n        }\n        else\n        {\n            tokens.add(token);\n            break;\n        }\n    }\n}\n",
  "index": 7,
  "validation": "plausible",
  "validation_wo": "plausible",
  "errors": [],
  "total_trigger": 1,
  "passing_trigger": 1,
  "total_relevant": 15,
  "failing_relevant": 0,
  "passing_tests": [
    "org.apache.commons.cli.PosixParserTest::testStopBursting"
  ],
  "failing_tests": [],
  "sum_entropy": -3.6425511091947556,
  "mean_entropy": -0.006000907922890866
}